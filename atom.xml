<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mark Miao</title>
  <subtitle>Mark’s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://markmiao.com/"/>
  <updated>2018-12-24T07:41:58.567Z</updated>
  <id>http://markmiao.com/</id>
  
  <author>
    <name>Mark</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>阿那亚之旅</title>
    <link href="http://markmiao.com/2018/12/23/anayazhilv/"/>
    <id>http://markmiao.com/2018/12/23/anayazhilv/</id>
    <published>2018-12-23T14:04:53.000Z</published>
    <updated>2018-12-24T07:41:58.567Z</updated>
    
    <content type="html"><![CDATA[<p>今年的旅行全部集中在了九月和十月，这两个月琐事太多，原本计划的泰国之旅由于没时间准备搁浅了。退而求其次，百忙之中偷闲出游了三次，因此我也欠下了三篇游记。我一直在努力建立记录人生大事件的习惯，包括每次旅游必须要写一篇游记。奈何拖延症严重，每次都拖好久才开始写，写完就更久了。没想到这次拖了“一年”……</p>
<a id="more"></a>
<p>2018年9月1日自驾去阿那亚，开始为期三天的滨海度假之旅。这次旅行是姐计划安排的，我们纯属蹭玩。准确的说我和晓是9月1日凌晨1点半出发的，姐他们1号早上出发。晓是夜班，凌晨1点下班。晚上我开哥的车，去单位接晓下班，直接出发去阿那亚，开启了下半夜的长途驾驶。</p>
<p>说起来我拿驾照也好几年了，拿了驾照之后就没摸过车。直到今年晓督促我有时间练练车，虽然也摇不上号。开始练车租的是两人座的smart，第一次开三厢车是清明节放假回晓家，大晚上赶上下大雪，回家的路又是蜿蜒曲折的山路，全程车速20迈，简直是挪回家的，真是一段紧张到肝颤的驾驶经历。</p>
<p>到这次自驾游，我的实际驾龄也有半年多了，长途还是第一次，而且是夜间长途。从北京到阿那亚走京哈高速有四个小时车程，晚上不担心堵车，但容易疲劳驾驶。我俩不着急，我又是新手，百分之百集中精力开车。快到凌晨5点的时候，我看大概还有一个小时的车程，实在是有点困，就在服务区眯了一个小时。再次出发的时候，天已经亮了。</p>
<p>7点钟我们到达了阿那亚，这是一个在秦皇岛黄金海岸的度假社区。社区周围很荒凉，社区内就很高端了，有海景别墅，花园洋房，主打休闲、旅游、度假。按规定下午1点才能办理入住，我俩过去的时候工作人员还没上班。问了一下，现在就可以入住，只是房屋还没打扫。我俩有幸成为今天第一位办理入住的游客，当然不会有什么礼品，中午办理入住时游客多到需要排队。爸妈和姐哥，以及沫沫和小鱼两个小宝贝还在路上呢，旅行的大部队中午才能到。我俩算是先锋官了，经过一夜的长途跋涉，率先领略了度假区的风光。</p>
<p>姐订的房间在小院，“小院”是阿那亚里的一片海景别墅区的名字，那里都是独栋带院子的靠海大别墅。姐订了别墅的一层，是一套三居室，有两个卧室可以透过落地窗直接看到大海，晓特别爱这两个卧室，一眼望去：绿色的草坪，黄色的海滩，蓝色的大海。别墅外围是绿草如茵的院子，穿过客厅的玻璃门可以直接进到院子里，出了院子，穿过步行道就是海滩。一切都是那么的闲适，没有半点都市的忙碌气息。住海景大别墅的感觉，跟住城市的鸽子笼就是不一样。</p>
<p>由于全家出去旅行，还有两位小宝宝，随身携带的行李有点多。我和晓开了姐家的SUV，姐他们开了一辆GL8。办理完入住，我直接开车进了社区，将行李搬到别墅里。社区内停车是按次收费的，半小时内免费，出来的时候绕了点路，恰巧满了半小时，门卫大哥满脸无奈中夹杂着得意：“您这是今天第一单。”社区内开车不方便，很多地方不能停车也不让私家车出入。而且社区有免费摆渡车，坐摆渡车可以很方便到达每个站点。我就将车停到了社区外的免费停车场里，免费的同时就存在安全隐患，早知道后来车的遭遇，花点钱停到社区的地下车库挺好。</p>
<p>我开了一晚上的车，晓在车上迷迷瞪瞪地也没睡多久。我俩本来应该疲惫不堪，但现在倦意全无，迫不及待地跑到海滩上浪一把。上次旅行还是去年<a href="http://markmiao.com/2017/11/26/sycjlxj/">十一长假去三亚和长隆</a>，这一年我俩事太多了，一直也没时间、没心情、没钱出来浪。这次是姐计划安排了阿那亚之旅，也是小鱼人生的第一次旅行，我记得沫沫的第一次旅行是去<a href="http://markmiao.com/2017/07/22/dongdaihezhilv/">东戴河</a>吧？这次沫沫荣升为哥哥，自然不能跟上次一样只玩沙子了。</p>
<p>从院子和海滩之间有一条步行道，道路由一半橡胶一半木板并行构成，偶尔遇到一位在橡胶道上晨跑的大叔，可能是这里久居的富豪吧？道路边是石块砌成的半米高的矮墙，隔开了沙滩和跑道，这样避免沙子都弄到路上了。隔一段就会有进入沙滩的出入口，在出入口处会有冲脚的水龙头，可以冲冲脚上的沙子，特别人性化。我们来的比较早，路上和海滩上几乎没有人。今天天气特别好，蔚蓝的天空，深蓝的大海，金黄的沙滩，暖意十足的阳光，休闲中透着惬意，踩着沙滩，跑到海边，让海水漫过脚面，我俩真的放松身心了。</p>
<p>跟姐他们一起出来玩，和我俩出去旅游截然不同。我俩不管去哪都特别赶，有限的时间塞进去各种行程，哪都想玩，什么都想体验，贪多导致特别累。和姐他们一起，不会有太多项目，会是一次悠闲放松的旅行，实现度假的目的。一是因为有沫沫和小鱼随行，机动性差一些。不像我俩人单独出去，跟脱了套的狗子一样。二是姐都安排好了，不用我俩费心，跟着玩就好了。还有就比较玄学了，姐说她去哪都是好天气，我俩去哪都会赶上坏天气，大风、大雨、大雾。我怀疑我俩是“龙命”，每次旅行，必现异像。或者是我小时候吃鸡头吃多了，家乡传说：小孩吃鸡头，娶媳妇下雨。说的是娶媳妇当天下雨，我这和媳妇出门都下雨，也是无奈。</p>
<p>在海边拍了几张照片，回别墅休息了一会儿。姐他们还在路上，大概中午才能到。我俩先出去溜达一圈，主要是看看有什么好吃的。社区内有两条摆渡车线路，我们住的别墅区是“小院”站。第一次出来没看到，走了很远去了下一站上车。车上同行的有几位大爷大妈，都是一副有钱人的范儿，言语中谈论的都是买房置地，一个大妈说：“待会看看这边售楼处在哪。”言下之意好像来一趟不容易，买套房子吧。我俩诺诺地不敢做声，生怕表现出穷人体质露了怯。</p>
<p>不一会儿到了终点站，终点站是两条线路的换乘站，社区的第一食堂也在这里，周围还有一些餐厅。我俩迫不及待的进去看看有什么好吃的，赶的时间比较尴尬，早餐时间已过，午餐时间没到，什么吃的都没有。自营的这些餐厅也和食堂一样，11点半开始供应午餐。无奈，先游美景吧。社区内景色不错，绿色植物特别多。有树、有花、有草，但也只可怡情，不能充饥。饥肠辘辘，便兴趣缺缺。</p>
<p>这边还有高尔夫球场，场边有好多人在挥杆往场内打球，都是一副大力出奇迹的样子使劲抡，这是比进洞，还是比谁打得远呢？我俩看了一会儿，有个教练模样的人走过来问我们要不要试试，我俩微笑着摇头说：“不用了。”然后一副缓慢沉稳地样子走下台阶离开了，步伐中透漏着会打高尔夫但现在不想打的贵族气质，其实表面彰显沉稳，内心慌的一批。</p>
<p>转了一圈，来到一个广场，广场是橡胶地面，中间有各种喷水的设备。有好多小朋友在嬉戏打闹，家长们坐在广场周围的长凳上。我对一个吊桶突然产生了莫名的兴趣，那是一个有两米多高的柱子，柱子顶端横着出来五根横杆，每个横杆上面吊着一个锥形的桶，桶里的水快满了，往下沥沥拉拉地流着。我走过去伸手接水，晓也和我一起过去了。水打在我的手上冰凉凉的，我看了一眼胸前的相机，想别把相机弄湿了，然后转身将相机往外让让。这时就听见头顶哗啦一声，一桶水从我身后啪地一声打在地上，我条件反射般跳了起来，就听见晓喊了一声：“哎呀——我的鞋！”原来每个吊桶里会不断加水，当吊桶完全满了就会一倾而下，我俩完全不知道是这种套路，导致差点湿身。如果我刚才没有转身，那一桶水估计就倒头上了，我幸免于难，晓的鞋却都湿了。</p>
<p>我俩在广场附近的超市买了点养乐多和冰激凌，超市里也没什么吃的。然后找了两个椅子坐下，这边人比较少，晓将鞋脱了放到阳光下晒着，时不时责备我去玩水导致她湿鞋。我看了看时间，离11点半没多久了，索性不回别墅，再等一会儿直接去吃饭。</p>
<p>11点半餐厅开饭，我们排队拿着餐盘自助式选餐，望着琳琅满目的菜品反而不知道吃什么了。选了凉皮、鸡肉、豆腐、寿司、羊排这几样菜，看着没多少还是吃撑了。我们吃完饭，姐他们也马上就要到了，我俩打包了一大堆饭菜，带回别墅给姐他们吃。在结账的地方拿打包餐盒，餐盒是收费的，望着两大餐盘的饭菜，我秉着宁多勿缺的原则拿了一大摞，结果肯定是拿多了。打包的时候晓直说我：“就不应该让你拿餐盒。”其实用不了的餐盒是可以退的，我俩也没考虑到。后面的几顿饭我们都是拿着餐盒来打包饭菜，也算是勤俭节约了。</p>
<p>我们打包完往别墅走的时候，姐他们到达入住大厅办理入住手续。这时办理入住的人特别多，还需要拍照。我们坐上摆渡车回到小院，晓回别墅，我去门口接姐他们。办理完入住回到别墅，度假大部队到齐了。沫沫对新环境表现出极大的兴趣，站在别墅院子里，摆他的专属姿势——高举双手的耶！小鱼还不能像他哥哥那样有这么多丰富技能，只能躺在人怀里乐。</p>
<p>中午的阳光特别好，适合下海游泳。我上次游海泳还是在三亚，一次很不完美的海泳体验。这次机会难得，不容错过。沫沫率先换上泳衣，晓看了我一眼，说：“你换泳裤去吧。”我有些腼腆，一家子人面前我还是不太好意思的。晓看我没动说：“别害羞了，赶紧的。”我去换了泳裤，T恤还是没脱。之前坚持了三个月的健身又搁置了，练出的两块腹肌快消失了，要是坚持到现在的话，岂不是得有四块腹肌了？那T恤就不用穿了。</p>
<p>我下去游了两圈，虽然今天阳光很好，但海里的风浪还是有点大。沫沫站在水中晃晃悠悠的，我和哥扶着他，让他慢慢坐下感受一下大海。海浪过来了急忙拽他起来，浪花没到了耳根，由于仰着身子没有进到嘴里，但沫沫还是有溺水的感觉。看他的表情，虽然有点害怕，但还是渴望玩水。晓从别墅里拿来一个游泳圈，是一个火烈鸟样子的儿童游泳圈，沫沫坐到游泳圈里，我俩扶着游泳圈让他随着海浪起伏，沫沫完全没有了害怕的感觉。</p>
<p>这次出游准备充分，沫沫带了一条小船和一辆越野车。小船在海里不能正常航行，海浪太大了很容易卷进海里，适合在泳池里玩。那辆越野车的越野性能略差，在沙滩上只能在原地空转，连扬起沙子的高度都有限。沫沫对此也毫不在意，玩的特别开心，还特别热衷于往衣服堆上扬沙子，扬完乐的特别开心，小姨问他：“谁是小坏包呀？”沫沫十分开心：“我似小坏包”。这次还带来了上次去东戴河带的那个大虫子风筝，晓也体验了一把在海边放风筝，今天风挺大，风筝不好控制。</p>
<p>下午回到别墅休息了一会儿，去第一餐厅吃晚饭。吃饭之前沫沫在我和他姥爷的辅助之下，完成了N多次的攀岩活动，小孩的精力是无限的，坐了一上午车，在海滩上玩了一下午，现在还是兴趣高涨。小鱼全程看他哥哥玩，也乐的开心。吃完晚饭，在社区里逛了逛，夜晚这里没有什么娱乐活动，特别是没有广场舞。在一个音乐喷泉周围围着三五人群，沫沫对音乐有着特别的兴趣和天赋，在灯光的映照下，随着音乐喷出五彩斑斓的水柱，我陪他坐在边上看喷泉，姐和晓去逛旁边的商店了，沫沫看了很久，一曲终了，再等下一曲，完全没有离开的意思。</p>
<p>晚上，终于感觉到累了，窗户外的海滩海面漆黑一片，听着轰隆隆的海浪声，很快就入睡了……</p>
<p>每次到海边玩，总想着早起去赶海，但是每次都起不来。这次起得还算比较早，8点多起来，外面下小雨了，姐去哪哪好天气的“晴天之力”还是没干过我俩去哪哪坏天气的“龙命”。由于下雨，早上还挺凉的。我俩去食堂打包早餐，花样繁多挺丰盛的。还有煎饼，但是排队的人特别多，最终还是放弃吃煎饼了。打包了一大堆早餐，包子、粥、鸡蛋、花卷、玉米等等，我觉得这里的花卷特别好吃。</p>
<p>吃完早饭，雨停了，但天还是阴沉沉的。去海边转了转，海滩湿漉漉的，沫沫不能肆意扬沙了。我们沿着海滩信步前行，走到阿那亚的标志性建筑物“孤独图书馆”和“阿那亚礼堂”，两个建筑孤零零的立在海滩上，相隔有一段距离。建筑都是简约风格，图书馆是长方体的，礼堂是个尖锐的等腰三角形，高冷的性冷淡风。最大的违和感的周围的人太多了，像是两朵雪莲周围围了一群苍蝇，各种搂翅搓手地准备合影。完全找不到没有其他人入境的地方，这么多人在周围根本照不出建筑要表达的美感。</p>
<p>我们继续往前走，想找一下冰激凌车，找到之后发现今天没有运营，晓十分失望。在海滩上还有一个大相框，这里人不是很多，我和晓开开心心地完成留影。事实证明，在没有人的情况下，我的垃圾照相技术也照不出任何美感。我的秘诀是多拍，拍一百张，总有一两张还不错的。</p>
<p>晚上和晓还有哥和沫沫去了海滩，漆黑的海面，轰隆隆的海浪声，总能令人生出莫名的恐惧。沫沫站在海滩上一艘大船上拍照，满脸的尬笑，感觉沫沫还是有点害怕。在海滩上逛了一会儿，哥他们回别墅了。我和晓继续往前走，别墅附近的海滩比较冷清，远处还是有灯红酒绿的地方。我们到了一间酒吧，晓要了一杯湛蓝色的鸡尾酒，听着音乐享受着不多的惬意时光。明天就要回去了，这是在阿那亚的最后一个夜晚（总共就住了两晚）。</p>
<p>酒吧附近还有一个“蜘蛛侠的赤脚鞋店”，我以为是漫威周边，其实是一个卖服装的商店，而且未营业。我俩出了酒吧，继续沿着木板长廊走到栈桥，那是塑料方块拼成的浮桥，长长的延伸到海里，尽头是扩大的长方形平台，在海里随波起伏。我俩站在浮桥上面，随着浮桥左右上下晃动，四周有缰绳固定住，防止浮桥被海水冲散。这边的海滩坡度极缓，一个海浪能冲到特别远，我们想这样肯定能带上来很多东西，我俩沿着海滩找了很远，黑漆漆的什么都看不见，想着明天早上可以来这边赶海。</p>
<p>第三天为了完成赶海的愿望，不到7点就起了，我和晓还有爸去了昨晚我俩去过的浮桥这里。一路上也没发现什么，我就知道没有那种螃蟹乱窜，海螺遍地的海滩。但还是看见了两个大水母，一个浅蓝色的，一个白色的。开始我以为是塑料袋，踩一下有种肉坨坨的感觉。晓说：“这是死了的水母哎！会不会蜇人？”我说：“这能吃吗？拿回去做凉拌海蜇皮。”水母海蜇我也分不清楚，看着半透明肉呼呼的样子，跟吃的海蜇差不多。晓也知道我是开玩笑，说：“你兜回去吧。”其实我还真想拿回去给沫沫看看，但是没有袋子，这肉乎哒哒，说不定还蜇人，只好作罢。</p>
<p>今天中午就要回去了，走之前晓充当摄影师给小鱼拍照，我们在旁边各种逗小鱼，希望他能乐一个。小鱼明显很不给面子，在阳光的照射下，小眼睛眯着感觉就要睡着了。可能是我们要走了，天气又转晴了。在别墅里拍完之后又去海滩上拍，小鱼很不情愿，最后在他的哭声中结束拍摄。</p>
<p>下午一点，启程回家。回北京的方向是往西开，迎着落日，阳光刺眼，四个小时的车程，还是很累人的。哥的车上有沫沫和小鱼两个小家伙，所以每个服务区都休息一会儿。哥的驾驶技术好，我的优势是不用每个服务区都休息。下午六点钟就都到家了，一路平安。没想到，回程上高速之前出现我开车生涯中第一次违章，最后哥帮我处理了。更没想到，第二天发现哥的车挡风玻璃裂了，一路上没发现撞过什么东西，猜测可能被免费停车场里的石子打的，早知道就停到社区里了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今年的旅行全部集中在了九月和十月，这两个月琐事太多，原本计划的泰国之旅由于没时间准备搁浅了。退而求其次，百忙之中偷闲出游了三次，因此我也欠下了三篇游记。我一直在努力建立记录人生大事件的习惯，包括每次旅游必须要写一篇游记。奈何拖延症严重，每次都拖好久才开始写，写完就更久了。没想到这次拖了“一年”……&lt;/p&gt;
    
    </summary>
    
      <category term="记事" scheme="http://markmiao.com/categories/%E8%AE%B0%E4%BA%8B/"/>
    
    
      <category term="生活" scheme="http://markmiao.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="游记" scheme="http://markmiao.com/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>买房风波</title>
    <link href="http://markmiao.com/2018/10/07/maifangfengbo/"/>
    <id>http://markmiao.com/2018/10/07/maifangfengbo/</id>
    <published>2018-10-07T02:56:12.000Z</published>
    <updated>2018-10-08T07:53:33.090Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录了我们历时一年半的买房官司。打官司的很多，但也不是每个人都能遇到，我们不幸中签，也算人生中增加了一段与众不同的经历。记录下来也是为了以后想起这段往事的时候，能回来看一看。文章很长，写的很烂，全文最珍贵的是结尾那句话，有猎奇心理的可以当故事看，讨厌看长文的可以只看最后一句话。</p>
<a id="more"></a>
<h2 id="签约前"><a href="#签约前" class="headerlink" title="签约前"></a>签约前</h2><p>2017年3月16日下午3:40，我正在上班，晓给我打电话说：“有套合适的房子，咱们过去看一下吧。”我匆忙请假赶去和晓汇合，一起去看这套房子。没想到看房十分钟，纠纷一年半。一路上，晓一直在接电话打电话，围绕着这套房子不断和中介以及家里人沟通。我们对这套房子也有了大致了解，最大的利好信息是：我们买得起。</p>
<p>我心里也是七上八下，从年前就开始找房子，我们一直在找，房价一直在涨。从2016年到2017年，房价暴涨。在这之前，我们看中了一套近100平的大两居，大平米单价低，而且小区位置不错，关键是价格低于市场价。当时打算再凑点钱拿下首付，房贷压力大点，勒勒裤腰带也能抗住。我们计划两天后约业主签合同，从北漂到房奴的转变，仿佛一切都水到渠成。我还提前通知了我爸妈这个消息，两家人都满怀期待。</p>
<p>第二天下班后去姐家吃饭，刚进门，晓的第一句话就是：“那房子没戏了。”我都愣了：“怎么了？”晓说：“业主涨了70万。”“我次——不是，什么情况？为什么啊？”晓没说话，姐说：“这房子本来就低于市场价，可能是业主看到市场行情，感觉卖低了就坐地起价。即便是签了合同，业主想涨还是会涨，你买就得多出钱，不买就和他打官司，即便你赢了赔你双倍定金，他再卖下一家还是稳赚。现在是卖方市场，房价一直在涨，咱们首付低耗不起这个时间。”我默然无语，姐说的没错，但我一时接受不了，70万呐，我不吃不喝得挣几年啊，他一天就涨了，有房真TM好！</p>
<p>那几天，两家人的情绪都很低落。我们切身感受到了房屋买卖市场的疯狂，两家人半辈子的积蓄可能都填不满一天的价格浮动。我们东拼西凑的那点首付，经不起一点折腾，可后来偏偏就被折腾了一把。眼看着手里的钱能买到的房子越来越小，能买到的地段越来越偏，我们真着急了。</p>
<p>晓挂断电话，对我说：“中介在拟合同呢。”我问：“定了？”晓说：“不知道，咱们先过去看看。”我说：“恩，差不多的话就定了吧。”晓嗯了一声，她也给不出反驳的理由，我俩真怕一错过就再也买不起了。一路上我心中喜悦夹杂着不安，一边想终于要有自己的房子了，一边又想不会又遇到涨价吧？我没猜中前面，却猜中了后面，而且不只是涨价那么简单。</p>
<h2 id="签约中"><a href="#签约中" class="headerlink" title="签约中"></a>签约中</h2><p>我们到了中介公司，中介正在写合同。卖房的是一对老年夫妇，看着挺面善的，我们微笑着打了个招呼。中介对我们说：“咱们先去看看房子。”房子就在中介公司后面的小区，四层、两居、东南向、离地铁近、毛坯装修、客厅较小、房龄较老。中介说：“你们觉得差不多就定了吧，咱的首付卡在那，房子不好找，他们是今下午来挂房子的，我没让他们走，急忙找你们来看一眼，咱首付能够上，月供压力也不大。”</p>
<p>我们已经没有挑剔的资本了，简单看了一下，我说：“定了吧。”晓说：“好，签吧。”这时候晓在犹豫，因为她对这房子并不满意，我同样也不满意。在当时看来，市场环境不容我们挑剔，列车已经启动了，这是最后一节破车厢，我们手里还是张站票，你说上不上？</p>
<p>我们真着急，当时就想手里这些钱还够买房之前必须买一套。我们一是被市场拍昏了头，二是太年轻太草率了。子曾经曰过：着个毛线急。但凡大事至少要有一天的考虑时间，千万别着急下决定。只要准备好，机会并不是不等人。盲目着急下场，反而会被拍的晕头转向。要淡定，要沉稳。葛优说：“步子迈大了，容易扯着蛋。”我爸说：“激流口子里拿不到鱼。”都是至理名言呐。</p>
<p>回到中介公司，和那对老年夫妇简单聊了聊，得知房子是女方父亲的，他们作为委托人替父亲卖。房子有很多不称心的地方，我们心底也自觉地找了弥补借口。我们也将所能想到的问题都考虑了一遍，也都在心中做了衡量，勉强说服自己都能接受。但这些都仅仅局限于房子，房子的问题远远没有人的问题大。我们忽略了最关键的因素——卖房的人。</p>
<p>还有我们过于相信中介公司，想当然的将人的问题丢给了中介，中介为了促成交易，将人会产生的不定因素忽略为零。一对六七十岁的老年夫妇，替他九十多岁的老父亲卖房，这中间会存在多大的风险？扶个老人都有可能倾家荡产，更何况买老人的房呢？更让我们想不到的是，他们的家庭内乱，堪比亮剑里打成了一锅粥的晋西北。</p>
<p>价格谈妥了，合同也准备的差不多了。晓签字按手印，晓说：“我的签字和手印第一次这么值钱呢。”言语中并没有多少喜悦，买东西一定要自己喜欢，房子更应如此。这套房子我们不喜欢，却买了。</p>
<p>按约定先交10万定金，不知是因为紧张还是冥冥中有什么启示，我把银行密码忘记了，一连输错两次，转账失败。中介说：“明天转吧，合同需要明天业主本人签字才行。”</p>
<h2 id="签约后"><a href="#签约后" class="headerlink" title="签约后"></a>签约后</h2><p>第二天，也就是2017年3月17日周五，晓去交定金、中介费和真正的业主——95岁的老爷子签订合同。</p>
<p>钱在我这里，需要转给晓。昨天因为输错密码被锁了，今天解锁后，用动态口令+手机交易码转账，没想到令牌坏了，口令一直错误，三次以后又被锁了。现在回想起来，那一刻应该有这样一个画面：静谧的背景深处传来了深邃的画外音：“小伙砸，连锁了你两次卡你还不明白吗？”周围观众一脸替主角捉急的表情，主角丝毫没有意识到来自冥冥中的启示。</p>
<p>我很执着的去了银行，在银行开门的第一时间进去换了口令牌，解了被锁的卡，转账成功。我排除万难终于迈进了这个泥潭，长达一年半的房屋买卖纠纷即将开始……</p>
<p>中午，晓签购房合同，交定金和中介费。下午，317新政出台。</p>
<p>我正在上班，手机上弹出一条微博推送：“房住不炒，认房又认贷，二套首付60%”。政策的大概意思是：本市名下有房或本市无房但有房贷记录，再购房算第二套，认房认贷。二套首付普通住房不低于60%，非普不低于80%。房贷年限缩短至25年。企业买商品房锁定三年以后才可以交易等等。</p>
<p>房价肆虐疯长了半年多，终于到了一个转折点。政策出台立即执行，3月17日以后网签的一律执行新政策，没留一点喘息的机会。我们拼尽全力买了张站票上车，你TM的告诉我开始停车检修了？早半天停车也好啊，我们再等等还有可能淘换张硬座。</p>
<p>317新政让很多人遭受重创，认房又认贷之后，很多人的首付从30%一下子涨到60%，甚至80%。刚攒够上车的首付，票价涨了，坑爹呢这是。那些签了合同还没网签的、老房子刚卖想换新房的、老家贷款买过房的、买商住两用房的等等，首当其冲成为新政最大的受影响者。</p>
<p>我们既没有房又没有贷款记录，买的又是普通住宅，实实在在的刚需人群，堪堪避过新政的刀锋，唯一的影响是丧失了观望的机会。微博上，一些房地产专家预测房价会在今年年底跌至低谷，环京和商住两用会跌的最惨。事实确实是这样的，317新政之后，又有930新政。相继出台了各种调控政策，力求控制住疯长的房价。政策的短期效果还是很明显的，成交量骤跌，房价停止疯长，并有一些回落。</p>
<p>我们本以为错过了这波福利，可恰恰得益于此。如果没有这些政策，如果房价一直疯长，那我们才真的要疯了。</p>
<h2 id="商住房"><a href="#商住房" class="headerlink" title="商住房"></a>商住房</h2><p>在此之前，我们还考虑过小产权的商住两用房。相比于住宅，商住两用房便宜，这是最能打动我们。而且商住两用房一般都比较新，有电梯，装修新潮，更符合年轻人想要的风格。同时也存在种种弊端：商水商电，没有燃气，产权年限短，无法落户口，更别提小孩上学了。商住两用房大多数用于投资或商用，由于不限购，也成为不具备购房资格的人的一种选择。在房屋市场商住两用房远没有住宅受欢迎，这是必然的。房子还是得买，住宅又买不起，那怎么办？我们也考虑，不到万不得已不去考虑商住两用，毕竟我们具备购房资格。有资格没钱有啥用？</p>
<p>我们租住的是一套商住两用开间，单论居住环境和硬件设施，比一般住宅要好。在我们租住的地区，住宅根本买不起了。回想在2016年6月份，我俩抱着试试看的态度看过一两套房子，那时候稍老一些的住宅70万首付能下来，现在两个70万都不够了。错过的机会又何止这一个，2015年在这里租住的120多平大三居，房东才卖300万。错过就是错过，捶胸顿足唉声叹气也没用，所以这次我们想绝对不能再错过。</p>
<p>我们看了附近的几套商住两用房。楼新，单价相比住宅低，但大多都是开间、一居或者LOFT公寓，再大一点的也买不起。看了一套大复式，确实动心，但是买不起。开间不够住不考虑，一居也得看能隔成两居的那种，有两居的面积总价又贵了，真是不好选择。</p>
<p>LOFT公寓一般是开间或一居户型，楼层高4米左右，无法做成复式，会挑起一个平台区做卧室。装修完全是年轻人的风格，适合情侣居住，但不适合居家过日子。我们想楼上可以做我们的卧室，楼下也足够有一个一居，以后有孩子了，爸妈可以住。单价低，平米小，还有了居住空间，LOFT公寓成了我们的新选择。</p>
<p>在某个地铁站附近有LOFT公寓的期房，我们看了沙盘和样板间，动心了。样板间装修确实漂亮，现代感十足。看沙盘上，下面是一个大型商场，居住区在商场上的高层。我当时想：可以在商场看完深夜场电影，直接上楼回家睡觉。销售人员给我们描述了一副宏伟蓝图，将来这个地方是商圈的中心，周围各种商场、医院、学校会相继建立。现在楼正在建设中，一年半以后交房，毛坯交房不含装修。我们看了可供挑选的户型，计算首付。我们考虑了很长时间，最终还是没选这里。</p>
<p>没选商住两用房是正确的，317新政之后，商住房禁止交易，价格一路走低，后续虽允许交易，但又有资质审核和必须全款等诸多限制。商住房因为其性质相比住宅更不受政策保护，抗跌能力差，一有政策出台，首当其冲成为第一批牺牲品。</p>
<h2 id="违约"><a href="#违约" class="headerlink" title="违约"></a>违约</h2><p>2017年4月初，接到了中介的电话，让我们过去一趟说点事。具体什么事，电话中也没透漏。一路上我俩心里七上八下的，我心里还嘀咕：不会这么寸，又遇上涨价吧？</p>
<p>到了中介公司，中介跟我们说：“他们那边要涨价。”次奥——你说这叫个什么事啊！我俩皱着眉头，努力让自己沉住气，听中介和我们说了事情的详细经过。</p>
<p>那天来卖房的是95岁业主的大女儿和大姑爷，且这个大女儿是业主的前妻所生，后来我们又听说这个大女儿是领养的，孰真孰假，我们也无从考证。据了解业主有三个女儿，大女儿是领养的，二女儿是前妻的孩子，三女儿是第二任妻子所生，整个家庭乱的跟一锅粥似的，所有的孩子都惦记着老人的这套房子。听说大女儿帮老人把房子卖了，整个家庭立刻就炸锅了。出现纠纷之后，中介去找过老人，老人最多的一句话就是：“我不管了。”</p>
<p>3月30号，业主的一个外孙子拿着业主的委托书，带着律师，找到中介，要求涨价57.5万，并要求全款一次性付清，或者立刻解除合同。我们的购房流程才刚刚开始，这套房子本身是限价房，需要在建委转成商品房才能买卖。房本放在建委刚做完房屋性质变更，还没走后续的购房流程。斜刺里杀出一个孙子，高喊道：我要涨价！</p>
<p>我们欣赏了中介的现场录像和录音，那个孙子带着一只肥头大耳的律师，口口声声说房子卖的价格有问题，要求涨价。中介说：“合同已经签完了，现在涨价属于违约，需要赔违约金。”合同中有明确的协议：如有违约，违约方赔守约方总房款的20%违约金，或赔定金的双倍，并支付中介费。中介是从来不做赔本的买卖，不论交易成功与否，中介费不耽误收。</p>
<p>那个律师说：“如果买家认为我们违约，可以走正当法律途径追究嘛，去法院起诉我们啊，我们应诉。”孙子附和道：“对！”这孙子别是个傻子吧，律师装的跟大尾巴狼似的，他还真以为律师能帮他摆平一切。这位嚣张的律师也只出现在录像和录音里，后续开庭再也没有见过，那个孙子前后换了三个律师。</p>
<p>现在再看这些，觉得这就是俩傻逼，但当时我俩真懵逼。怎么办？涨价是不可能的，哪有那么多钱，即使有钱也不可能在签完合同后再同意涨价。不涨价人家不卖，要求解除合同。我俩忙活了好几个月，终于买上房子了，虽然不是那么称心如意，但也是有结果了，现在又平地起波澜。要是能痛痛快快地退定金和中介费，赔偿违约金，解除合同，我俩拿回钱再找其他房子也行，毕竟没有网签，对我们也没有影响。关键是能赔违约金吗？看对方的意思，我们交的定金和中介费能不能拿回来还不一定呢。</p>
<h2 id="风险"><a href="#风险" class="headerlink" title="风险"></a>风险</h2><p>我们是第一次买房子，对买房流程也做过一些功课，但还是疏忽大意了，也是过于相信中介。盲目的认为签合同、交钱、过户就可以了，根本没想过对可能出现的风险做预防规避，对潜在的威胁视而不见。</p>
<p>中介为了促成交易，忽略了一些潜在风险。一对六七十岁的老夫妇替九十多岁的老父亲卖房，拿着房本和一张手写委托书，就敢立刻联系客户签合同，根本不去考虑潜在风险，不做任何调查核实和预防措施。中介一直为我们找房，终于遇到一套我们买得起的，为避免被其他人捷足先登，便急找我们签单。当时房价上涨近乎疯狂，我们也是找房找疯了，这种房子也敢去买。</p>
<p>在签合同交定金时，中介也存在违规。我们交了10万定金，拿了业主10万的定金收据。这其中5万现金给业主委托人，5万转账给中介。中介又从委托人那里拿了1万做房屋性质变更，花费了几千块钱，中介说，做完房屋性质变更之后再将剩余定金转给业主。</p>
<p>中介给我们的解释是：一道没写入合同的保障，万一出了问题，钱放在中介那里，比放在卖方那里更容易拿回来。对此卖方也同意，而且定金收据也是10万元整额，我们也就没提出异议。卖房委托人之所以同意，是因为他们和中介另有约定，我们一直被蒙在鼓里。</p>
<p>发生纠纷之后，中介向我们坦白了这条约定：业主的真实成交价比我们所签合同少10万，委托人想私吞这10万。我们当时就郁闷了，委托人和业主之间的利益纷争不是应该在我们买完房之后吗？所有房款给你了，你们家庭内部抢翻了天也没人管。我们虽然认可合同上签的购房价格，但是中介瞒着买家，插手卖家的财产分配，帮委托人抽回扣，这不是没事找事吗？</p>
<p>刚做完房屋性质变更就发生了纠纷，这笔5万多的定金一直放在中介那里，直到官司结束才拿回来。同时这笔钱带来了更多的风险，被告一直以这笔定金作为辩护理由，他们只收到4万定金，按合同约定双倍定金赔偿，他们最多给8万违约金，客观来说，那孙子说的没毛病。</p>
<p>中介对此违规的解释是：不知道房屋性质变更费用多少，所以扣一部分定金用于房屋性质变更，表示后面会转给业主，没想到中途出现纠纷，这笔钱不知如何处理，便一直没有动。</p>
<p>听说纠纷之后委托人就气病了，将手里的4万定金给了老人，表示分文不取，不再掺和。最终我们也没有再见过这对替父亲卖房，并想吃回扣的老夫妇，这场纠纷也没把他们牵扯进来。但在那孙子口中，是这对老夫妇胁迫了他姥爷签字卖房。</p>
<p>合同中还埋藏了一个更大的风险——放弃首付款的资金监管。为了交易能快速进行，中介让我们考虑是否放弃资金监管，双方自行交易，我们竟然也傻不愣登的同意了。多亏这场纠纷发生在交首付之前，如果在这之后，估计我们跳黄河的心都有了。</p>
<h2 id="失误"><a href="#失误" class="headerlink" title="失误"></a>失误</h2><p>合同表明：自本合同签订之日起90日内过户，过户当天交首付。签合同之后的第13天，那孙子就找到中介要求涨价或终止合同。</p>
<p>对方违约时，房市已经因政策原因开始发生变化了。我们也逐渐觉得不买这套房子是最合适的，但现在最大的问题是如何拿回我们的钱。如果现在就去起诉对方，万一对方说：“这还没到过户时间呢，我就随便去中介侃大山了，我又不是业主本人，到90天保证过户给你不就得了。”这样一来房子就砸手里了，不买就成我们违约了。</p>
<p>多方求证得知，超过合同中约定的过户日期15日，卖方拒不过户，买方可起诉卖方违约，这时便可坐实违约行为。为保稳妥，我们决定等105天。其实这完全没有必要，那孙子拿着业主委托书明确违约，中介也求证业主本人，业主表示全权交给他孙子处理，这都有录像录音证据。当时就能起诉对方违约，要求赔偿。</p>
<p>我们是小心过分了，如果这105天之内，对方幡然悔悟继续履行合同，那房子同样砸手里了。果然，在后面的庭审中，那孙子一再表示：你们可以继续以原价买这套房子。我想说去你奶奶个爪！</p>
<p>上述失误并未造成太恶劣的后果，我们最大的失误是没做财产保全。</p>
<p>开始我们根本不知道还有财产保全这种操作，中介也没说过，事后中介强调当时告诉过我们。这种扯皮的事无从考证，也没有意义。我们明确知道财产保全是在第二次开庭，第二个律师告诉我们的，但当时已经为时已晚……</p>
<h2 id="起诉"><a href="#起诉" class="headerlink" title="起诉"></a>起诉</h2><p>签订合同的一百多天以后，2017年7月3日，我们去找律师起诉卖方违约。我们也不愿意走打官司这一步，但对方只想退还4万订金，终止合同，没有任何赔偿。就算我们再从中介那里拿回5万多定金，我们还损失做房屋性质变更的几千块钱和全部中介费。中介表示中介费不能退，因为合同中写了谁违约谁支付中介费。房子没买成，损失了这么多钱，凭什么啊？！</p>
<p>找律师之前，我们还给那孙子打了电话，想沟通一下能否协商处理。对方直接说：“我有事，协商和我律师沟通。”这孙子不是电视剧看多了吧？但凡有点脑子的人，不论协商与否，至少都会想办法探听一下对方的意图吧，毕竟要对簿公堂了。我送上门来沟通，聊都不聊就一口回绝了。</p>
<p>找律师我们也没有门路，法院周围有许多律师事务所，去了几家都感觉不靠谱。一是没有独到的见解，他说的我都能想到；二是事务所装修太差，比中介还不如。找了一上午，终于找到一位我们认为还不错的律师，没想到还是看走眼了，如果当时知道后面发生的事，我们绝对不会请他，倒给钱都不会。我们不能未卜先知，所以交了律师费，请他帮我们打这场官司。</p>
<p>如果此时律师能提醒我们做了财产保全，完全来得及，也就不会有后续的被动了。他竟然也没有想到需要做财产保全，我们错失了最后的机会。</p>
<p>2017年7月7日，我们正式向法院提起诉讼。这段时间因为政策原因房屋买卖纠纷特别多，大多数都是买方违约，一是首付突然变多了拿不出钱来，二是感觉买贵了想继续观望。接诉状的工作人员看了一眼是房屋纠纷问道：“是你们不买了？”我说：“是他们不卖了。”对方“咦”了一声，像是发现了一个特例。</p>
<h2 id="第一次开庭"><a href="#第一次开庭" class="headerlink" title="第一次开庭"></a>第一次开庭</h2><p>2017年8月25日开庭，开庭那天早上律师给我们打电话，说他临时有事，安排同事替他上庭，并让我们放心。我们心里惴惴不安的，临阵换将，这能行吗？后来我们才知道，他所谓的临时有事，是因为酒驾被拘留了，连律师证都给吊销了。无语了，你说这叫个什么事啊。现在回想起来，对我们来说这可能也是件好事，就冲他做的准备工作，如果继续做我们的代理律师，最后可能就毁他手里了。</p>
<p>新的代理律师陪我们进了法庭，中介作为第三人也到场了。等了好久，开庭时间都过了，被告还没到。法官联系被告，被告说没有收到传票。法官说被告出差了，传票被放到物业了，无法确认传票收到与否。我俩紧张了好几天，人生中第一次开庭打官司，就这样草草收场。</p>
<p>出了法庭我们和律师详细说了事情经过，律师说我们的案件以后就由他来负责。还吐槽上一位律师什么资料都没整理，证据链也没弄，就甩手给他了，他需要回去详细整理一下。事已至此，感觉什么点背的事都赶上了。如果今天顺利开庭，律师俩眼一抹黑，估计结果也好不了。</p>
<p>当晚，那孙子发短信说想庭下调解。之前我们想调解被拒绝了，现在请了律师，交了律师费，去法院起诉了，交了诉讼费，他说想调解了。我强忍着骂人的冲动，询问他想如何调解。他给我的回复是：还是退还4万订金，解除合同。此处隐藏五千字脏话。我回复说：“这种调解不可能，你和我律师沟通吧。”</p>
<p>过了一会儿，他发来一条长达六百多字的短信。大概意思是：老人对卖房毫不知情，中介伪造了老人签字，并且没给老人全部定金，中介违规我去建委投诉了。我也是受害者，我退还你4万，其他的你找中介要。</p>
<p>最后的内容我要贴原文了，因为这样不知廉耻的话，我实在是概括不出精髓。</p>
<p>原文如此，一字未改：“老人追回所有积蓄后，已付了上次的律师费，对老人而言，生活只靠退休金，如果您非要坚持，老人只能用想还您的四万块钱来您此次诉讼的律师费，老人相信国家法律是保护弱者保护老人的，一个95岁的老人在身体条件允许的前提下会坚持到最终的终审。即便老人输了，国家也不会执行一个住在养老院里靠退休金生活的老人，即使您赢了，您还是受害者，老人也是受害者，您一样也拿不到您想要的东西，因为老人已经一无所有了，这是老人的悲哀，也是你的不幸。以上几点请斟酌，请考虑”</p>
<p>真是家有一老如有一宝，我弱我有理，我老我牛逼，这就是一个无赖，我俩要被气疯了。愤怒之余有句话让我很在意——老人已经一无所有了。</p>
<h2 id="第二次开庭"><a href="#第二次开庭" class="headerlink" title="第二次开庭"></a>第二次开庭</h2><p>2017年9月11日第二次开庭，那孙子带着一位女律师到场，录像里肥头大耳的律师没有出现。当庭我们得知了一条爆炸信息：房子已经以赠予的方式，转移到业主孙子名下了，老头子除了一把岁数和一身毛病，一无所有了，名下没有任何财产。</p>
<p>房本变更时间是2017年7月23日，在我们提起诉讼之后。我俩当场就懵了，感觉事情已经向最坏的方向发展了。房子怎么会被转移呢？之前中介十分肯定地说：“房本用于房屋性质变更放在建委那里，必须卖房时的委托人、中介以及业主身份证三方到场，才能拿出房本。”事实是，在中介和我们毫不知情的情况下，对方不仅从建委拿走了房本，还用房本做了房屋财产转移。</p>
<p>我们的代理律师也愣住了，私下里问我们：“你们没做财产保全？”“什么是财产保全……”我俩更懵逼了。“……”</p>
<p>完犊子了，我们已经意识到了问题的严重性，被告是95岁的业主，那孙子只是业主的委托人，我们没有权利告孙子，让孙子赔偿。以前官司赢了之后，即便是老人没钱赔，但名下还有一套房子呢。现在就剩一个有今天没明天的光杆老头了，我们赢了官司又能怎么样？拿老人退休金？拿一个月，老人可能就因为没钱吃药驾鹤西游了。从这以后，我们便陷入被动局面。一步赶不上，步步赶不上。</p>
<p>我们的律师还算镇定，对那孙子说：“房子转移到你的名下了，你作为老人的委托人去中介违约，是该纠纷的直接当事人。在我们提起诉讼之后，你将老人的房子转移到自己名下，这是恶意转移财产。房子转移给别人还好，最不应该接手的就是你。我告诉你，你摊上事了，等着。”</p>
<p>开庭结果是撤诉，我们起诉的是老人，老人名下没有财产，我们胜诉也没用，还是拿不到钱，必须改变战略方针。</p>
<p>从法院出来，我们大眼瞪小眼地看着律师，期盼他能给指条明路。律师也十分为难：“你们当时为什么没做财产保全？哪怕只保全一部分，他们也没办法转移房产。事已至此，这官司难办了。”我说：“那您刚才说恶意转移财产什么的，让他等着……”律师说：“我那是吓唬他。”“……”</p>
<p>律师和我们说：“现在只能撤诉，起诉业主违约赢了也没用。撤诉之后，诉讼费可以退回来。再去立案，起诉房产赠予无效，他们属于恶意转移财产。成功之后房产重新回归老人名下，做财产保全，再起诉对方违约。”</p>
<p>官司这事我们俩哪懂啊，律师怎么说我们就怎么做呗。这套路听起来毫无破绽，就是有点繁琐。当时我们也是孤立无援，将全部希望压在了律师身上。这位律师也只是纸上谈兵，一套组合拳把我们唬住了，但并没有多少卵用。</p>
<h2 id="第三次开庭"><a href="#第三次开庭" class="headerlink" title="第三次开庭"></a>第三次开庭</h2><p>律师帮我们重新立案，起诉对方恶意转移财产，请求法院判决房屋转移无效，希望将房屋重新回归老人名下。</p>
<p>2017年11月1日开庭，法官看了我们的诉求，询问你们是否还继续买这套房子，我们说不买了。法官说：“既然你们不买这套房子了，那房子如何处理，在谁的名下和你们没有关系，法院不能支持你们判决房屋转移无效。”</p>
<p>刚打出组合拳的第一招，就被法官泼了一盆冷水，法官的意思是建议三方调解解决。我们是最大的受害者，钱在卖方和中介手里攥着，房子买不成钱也拿不回来。法官也在帮我们调解，那孙子的意思是我们可以继续按原合同买这套房子，终止合同可以退还4万，赔偿需要回家商量一下，言语中的意思是没有赔偿，有也很少。中介的意思是中介费酌情可以退一些，具体退多少还得跟公司协商。</p>
<p>法官让他们回去之后各自给出一个调解方案，保证原告的合法权益。我俩的心彻底凉了，怎么保证合法权益？房子是不可能买，赔偿让他们凭良心给吗？就算定金和中介费全部拿回来，我们的律师费、诉讼费、误工费问谁要？事到如今，看不到一点希望了。没有做财产保全，让我们陷入被动，一着不慎，满盘皆输。</p>
<p>后来晓还想着能有回旋的余地，跟我说：“那咱们就先说要买这房子，我们是跟老人签的合同，要继续和老人履行合同，让法院将房子判回给老人，我们再起诉对方违约。”</p>
<p>我说：“这哪能行，到时候再不买就是咱违约了，再说了法官还能看不出我们这点小心思？即使法官相信咱们买，他会优先安排我们和现在的业主——那孙子交易。法院不支持的关键原因不是咱们不买，而是纠纷牵扯的钱相对于房子来说太小了。咱们的购房流程还没开始呢，法院不会因为咱们十几万，判人家几百万的房子赠予无效。既然能完成赠予，他们的操作过程就是合法的。”</p>
<p>这就像一局棋，棋眼是老人名下财产，我们要保全，对方要转移，谁先占领棋眼，谁就夺得先手取得绝对优势。中介说房本在建委压着拿不出来，第一个律师没有告诉我们做财产保全，第二个律师也没起多大作用，我们又是俩没有经验的孩子，手握王牌没出去，被人捷足先登，白白错过了先机。</p>
<p>事情到了这个地步，看不到任何胜算了。我们是受害者，我们占着理，房子没买成，既浪费了时间又亏了钱，凭什么啊？就凭你没将住对方，有万千的理也没用。第三次开庭又是黯然撤诉，那一刻，我们感到了绝望……</p>
<p>没有最绝望，只有更绝望。2017年11月13日，律师通知我们：被告家里人不同意调解。又他妈的被涮了！</p>
<h2 id="再次起诉"><a href="#再次起诉" class="headerlink" title="再次起诉"></a>再次起诉</h2><p>2017年的冬天特别冷，我们在绝望中过了新年。家里人在我们面前都不说这件事，我俩也刻意地不去想了。我爸有时候会特别小心地问我一句，我说：“没事，还在调解中呢，您别担心。”话虽然这么说，但心里哪有底啊。我爸当然也明白，每次都是安慰我说：“顺其自然就好，别太当回事了。”那段时间心里特别憋屈。</p>
<p>转眼过了新年，2018年我俩没有太多精力去折腾这件事了，还得再去找新的房子。庆幸的是房价在政策的作用下没有涨，还降了一些。我们也不至于一边打官司，一边着急找房，两头忙。</p>
<p>日子还是得过，房子还是要买，官司还是要打，钱还是要追回来的。</p>
<p>2018年4月11日，我们签了起诉状，重新立案，所有的证据提交给法院。起诉对方违约，要求按总房款20%赔偿违约金，支付中介费，承担本次诉讼费。什么套路组合拳都没用，直接单刀直入：你违约，就赔钱。</p>
<p>后面就经历了两个多月的等待，我们也变得佛系了，顺其自然吧。反正下定决心跟你死磕，时间拖多久也不在乎了。之所以拖了这么久，是因为律师去法院立案立错了，这一年遇见的奇葩事太多了，我们也坦然了，也不指望律师能有什么绝地反击的杀招，就给我按部就班的按流程走就行了，立错了就重新立。</p>
<h2 id="第四次开庭"><a href="#第四次开庭" class="headerlink" title="第四次开庭"></a>第四次开庭</h2><p>2018年06月21日开庭，庭上对方还是一脸无赖相，那孙子的又换了一位律师，这次是个男律师，瘦小猥琐，戴一个小眼镜。</p>
<p>法官询问能否调解解决，我们的意思是要调解当庭给出调解方案，不能拖延。对方主张老人年纪大了，肺癌晚期，上次卖房是被非亲生的女儿和姑爷胁迫的，并不是自己的意思。又反口说自己没有涨价，是我们看房价跌了不买了，然后他们才将房子做了赠予转移，我们提供的录音证据是截取编辑的。现在解除合同可以将手里的4万定金退还，当法官要求他们给出一个确切的赔偿金额时，他们纠结了好久，最后那律师说：“赔他几千块钱吧。”那表情就跟施舍似的，我真想一脚踹他脸上。</p>
<p>这次开庭，中介安排了一个法务过来。后来，从最终的调解书上我们发现，这个法务和我们的律师是一家律师事务所的。这里到底还有多少我们不知道的内幕？</p>
<p>中介反口了，中介费一分不退，由违约方支付，因为合同里就是这样约定的。上次开庭明明说可以退中介费。中介也当庭表达了自己的意思，他们是居间服务，服务费是一次性收取的，并不是按阶段，签了合同就应该收取中介费，这中间发生纠纷导致合同不能继续履行，中介并没有责任，所以不能退中介费。并表示，中介手里有5万多定金，可以随时退还。</p>
<p>当前状况我们能拿回10万定金，中介费中介不退，违约方不出，违约金更不会给。这样的调解结果我们自然不可能同意。</p>
<p>法官针对所有证据，详细询问了我们三方。被告对我们提供的房屋买卖合同，委托书，定金收据，居间服务保障合同等证据都认为是真实有效的，但依旧强调老人被胁迫，无民事行为能力。中介强调签订合同是合理合法的，老人知道并同意房屋买卖，还表达了自己的意思：这房子卖的不低。我们强调你违约，就赔钱。不管怎么样，我们是受害者，不能让我们的合法权益受到侵害。</p>
<p>当庭没有宣判。2018年7月24日法院判决了，判决结果是：被告退还定金4万多，中介退还定金5万多，合计10万定金。被告支付全部中介费，承担一半诉讼费，并赔偿一部分违约金。</p>
<p>苍天有眼啊，一年多了，终于迎来了一次胜利。判决的违约金比我们诉求的总房款20%要少很多，但这已经是最好的结果了。</p>
<h2 id="二审"><a href="#二审" class="headerlink" title="二审"></a>二审</h2><p>当我们拿到一审判决书的时候，高兴了好一阵，经历了一年多终于有了一个结果。但除了一纸判决书，什么都没拿到。我们将面临最艰难的部分——判决执行。是判决被告支付这些钱，被告是那位95岁肺癌晚期的老人。这个问题从没做财产保全那一天就意识到了，所有的证据对我们都是有利的，所有不担心官司打不赢。我们担心赢了官司，赢不了钱。</p>
<p>一纸判决书像是垂在谷底的蛛丝，它给了我们希望，也带来了绝望。这时我们已经买了新的房子，由于一部分首付压在官司里，买房的钱不够，就从姐那里借了一部分，如果这笔钱拿不回来，姐的钱不知道何年何月才能还上。其实这是黎明前最黑暗的时刻，黎明马上到来。</p>
<p>2018年8月9日，被告不服从一审判决，向中级人民法院提起诉讼。认为中介违规，他们不应该承担中介费，对赔偿金额也有异议。</p>
<p>2018年8月27日，我们拿到了被告的起诉书，考虑二审还要不要继续委托律师，因为二审还要给律师费。最终决定我们自己上场，这个决定是对的，因为最终的胜利马上来临了。决定胜利的不是律师，不是我们，更不是那孙子，而是中级人民法院的那位女法官。</p>
<p>2018年9月26日二审开庭，我和晓长途跋涉来到中级人民法院。我没能进去，因为不是公开审理案件，今天只做调查询问，我不是当事人不能进去。我给晓发信息，让她据实陈述整个事件就行，强调咱们是受害者，认可一审判决，不要紧张沉住气。其实我在外边更紧张，出来后晓问我：“像不像产房外的焦急等待？”</p>
<p>晓刚进去一会儿，那孙子骑着共享单车，大老远就对着法院门口的警察喊：“开庭是在这里吗？”连喊了两遍，警察说：“旁边办手续。”“哦……”看他一脸无赖相就来气。那孙子没带律师，一个人来的，中介的法务临时有事来不了了。</p>
<p>一开场晓就被镇住了，那孙子拿了好几摞的证据，说是录音文字。还要书记员去安检处取他的电脑，说证据在电脑上。晓问我：“咱们都没准备新证据，怎么办？行吗？”我说：“没事，之前的证据就够了，你沉住气。”一审判决是有事实基础和法律依据的，只要不是有重大问题，基本都会维持原判。我真想不出他有什么能翻案的证据，除了耍赖，我们最怕的也是耍赖。</p>
<p>法官根本没有兴趣看他提供的证据，让双方陈述事情经过之后，做了一些询问，问出了一些我们不知道的事情，这套房子并不是无条件赠予给那孙子的，孙子在房屋赠予的时候给了老人20万，在以后每个月都会给老人一笔生活费，对老人尽赡养义务。</p>
<p>法官问：“可以调解吗？”那孙子说他们只收到4万定金，按双倍定金赔偿8万，中介存在违规，他们不承担中介费。法官根本不理他的胡搅蛮缠，对他说：“能调解就调解，调解的话还能退你一半诉讼费，不能调解就等法院判决了。”那孙子还是支支吾吾的，意思很明显，想调解，但是不想赔那么多钱。</p>
<p>法官意思很干脆，调解就当庭给调解方案，当天给钱。法官问晓：“调解的话，按一审判决减五千块钱，今天把钱给你可以吗？”晓说：“可以。”我们心里明白，见好就收得了，等到他们耍赖就麻烦了。</p>
<p>那孙子说一时间没有这么多钱，能不能缓几天，一个月可以吗？法官当时就怒了：“调解就是要给钱快，判决才十天，调解你要一个月，最迟明天，不然就等判决吧。”中级人民法院的法官就是牛，干净利落，哪听你胡搅蛮缠。那孙子磨磨唧唧的，胡搅蛮缠了半天也没表态。</p>
<p>当天没有调解成功，法官让我们各自回去等消息。</p>
<h2 id="胜利"><a href="#胜利" class="headerlink" title="胜利"></a>胜利</h2><p>2018年9月27日，今天是晓的生日，她收到了最棒的生日礼物，法官打电话告诉她：对方同意昨天的调解方案，愿意减五千支付一审判决的全部赔偿。</p>
<p>我正在上班，晓打电话跟我说：“哥哥，告诉你一个好消息啊！”我听她的声音都笑呲了，“什么好消息？”“对方同意调解了。”“真的？太好了！”</p>
<p>2018年9月28日，晓去了中级人民法院，准备拿回属于我们的赔偿。</p>
<p>我们就猜测事情不会那么顺利，那孙子各种磨叽，要求晓在调解协议上写上银行卡号，再写一张证明，证明卡号是她本人的。我也是醉了，不是她的卡号，钱也转不过去啊。法官也整无语了，说：“要不你出去举个牌子，写上名字证明你是你？”</p>
<p>他又开始反复计算要给我们的钱，发现少准备了一半的诉讼费。嘴里嘟嘟囔囔的顾左右而言他，反复接打电话和他的律师沟通，在场所有人的话他都不信，包括法官。自始至终就坚信他的律师，也没有自己的主见，整个事件从开始到现在，好像都是别人撺掇他做的。都到这个地步了，律师让他打钱他就打钱，不让他打钱就不打钱。</p>
<p>法官都被气疯了，骂道：“你是不是有病啊，你生活中也是这么磨叽没主见吗？谁的话你都不信，出门吃饭会不会担心人家把你毒死？调解方案是你同意的，现在又这么磨叽，能调就调，不能调我马上判。”由于声音太大，庭外的警察都惊动了，端着枪就进来了，法官摆手说：“没事。”</p>
<p>我们憋屈了一年半了，多少次我都想破口大骂，甚至想上去弄死这个孙子。但是不能这么做，他在耍无赖，我们还得讲理、讲法。这一刻法官把我们憋了一年半的气都撒出来了，太畅快了。</p>
<p>多亏这位法官义正言辞的震慑，不然这个孙子还是会耍无赖。纠结了一上午，终于拿到钱，签了调解协议。这时中介又掉链子了，上午又有事，下午才能过去。当天中介并没有给我们退那5万多订金。</p>
<p>2018年9月30日我们收到了法院寄过来的调解协议，我问中介什么时候能把钱退回来，中介说还要去法务那边核实，要看到调解协议。我说：“这笔钱是要在签调解协议之前退还的，你们法务是因为有事没过去，按规定28号当天就应该把钱退给我。”</p>
<p>下午，赶在十一长假之前，中介终于退还了那5万多定金。这场官司终于圆满结束了。</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>从头到尾我都没见过那位95岁的老爷子，把他推上被告席的不是我们，而是他的孩子们。九十多岁了，孩子争夺家产，老人晚节不保，有时我真觉得他挺可怜的。</p>
<p>2017年3月16日到2018年9月30日，563天，一年半的时间，我们经历了太多太多。感谢家里的所有人，感谢我俩的爸妈，姐姐和哥，舅舅，孙叔以及所有的亲朋好友，没有你们的支持我俩坚持不到现在，谢谢你们。</p>
<p>用我老家大门上的话作为结语吧——家和万事兴。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录了我们历时一年半的买房官司。打官司的很多，但也不是每个人都能遇到，我们不幸中签，也算人生中增加了一段与众不同的经历。记录下来也是为了以后想起这段往事的时候，能回来看一看。文章很长，写的很烂，全文最珍贵的是结尾那句话，有猎奇心理的可以当故事看，讨厌看长文的可以只看最后一句话。&lt;/p&gt;
    
    </summary>
    
      <category term="记事" scheme="http://markmiao.com/categories/%E8%AE%B0%E4%BA%8B/"/>
    
    
      <category term="生活" scheme="http://markmiao.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Runtime(1)：消息传递</title>
    <link href="http://markmiao.com/2018/03/16/runtime1/"/>
    <id>http://markmiao.com/2018/03/16/runtime1/</id>
    <published>2018-03-16T09:35:50.000Z</published>
    <updated>2018-03-16T09:37:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>OC是动态语言，只有在运行时才会根据方法名去调用方法，称为给方法发送消息，是因为当调用<code>[demoObj setTest]</code>方法时，编译器会转化为<code>objc_msgSend(demoObj, @selector(setTest))</code>。如果携带参数，如<code>[demoObj setTest:str]</code>，会转化为<code>objc_msgSend(demoObj, @selector(setTest), str)</code>。</p>
<a id="more"></a>
<h2 id="unrecognized-selector-sent-to-instance"><a href="#unrecognized-selector-sent-to-instance" class="headerlink" title="unrecognized selector sent to instance"></a>unrecognized selector sent to instance</h2><p><code>unrecognized selector sent to instance</code>是开发中经常遇到的异常，诸如点击事件没有实现，调用了只声明未实现的方法，向NSArray调用了NSMutableArray的方法等等。</p>
<p>我们定义类<code>DemoObject</code>，在<code>.h</code>中声明方法<code>- (void)setTest;</code>，<code>.m</code>中不写方法实现。然后调用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DemoObject *demoObj = [[DemoObject alloc] init];</div><div class="line">[demoObj setTest];</div></pre></td></tr></table></figure>
<p>程序会很听话的崩掉，并抛出异常：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-[DemoObject setTest]: unrecognized selector sent to instance 0x60000000bda0</div></pre></td></tr></table></figure>
<p>在程序崩溃之前，消息会经过下面几个方法转发：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">+ (BOOL)resolveInstanceMethod:(SEL)sel &#123;</div><div class="line">    NSLog(@&quot;解析实例方法&quot;);</div><div class="line">    return [super resolveInstanceMethod:sel];</div><div class="line">&#125;</div><div class="line">+ (BOOL)resolveClassMethod:(SEL)sel &#123;</div><div class="line">    NSLog(@&quot;解析类方法&quot;);</div><div class="line">    return [super resolveClassMethod:sel];</div><div class="line">&#125;</div><div class="line">- (id)forwardingTargetForSelector:(SEL)aSelector &#123;</div><div class="line">    NSLog(@&quot;转发目标选择器&quot;);</div><div class="line">    return [super forwardingTargetForSelector:aSelector];</div><div class="line">&#125;</div><div class="line">- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector &#123;</div><div class="line">    NSLog(@&quot;选择器方法签名&quot;);</div><div class="line">    return [super methodSignatureForSelector:aSelector];</div><div class="line">&#125;</div><div class="line">- (void)forwardInvocation:(NSInvocation *)anInvocation &#123;</div><div class="line">    NSLog(@&quot;转发调用&quot;);</div><div class="line">&#125;</div><div class="line">- (void)doesNotRecognizeSelector:(SEL)aSelector &#123;</div><div class="line">    NSLog(@&quot;不识别选择器，崩溃&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>消息会经过上述方法传递，最终未果才会崩溃。在上述方法中我们有三次机会操作消息传递，防止崩溃。</p>
<ol>
<li>动态添加方法：<code>+ (BOOL)resolveInstanceMethod:(SEL)sel</code>或<code>+ (BOOL)resolveClassMethod:(SEL)sel</code></li>
<li>方法重定向：<code>- (id)forwardingTargetForSelector:(SEL)aSelector</code></li>
<li>消息转发：<code>- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector</code>和<code>- (void)forwardInvocation:(NSInvocation *)anInvocation</code></li>
</ol>
<h2 id="动态添加方法"><a href="#动态添加方法" class="headerlink" title="动态添加方法"></a>动态添加方法</h2><h3 id="实例方法"><a href="#实例方法" class="headerlink" title="实例方法"></a>实例方法</h3><p>在类DemoObject中引入runtime：<code>#import &lt;objc/runtime.h&gt;</code>，使用<code>class_addMethod</code>动态添加方法实现。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">void resolveTest(id self, SEL _cmd) &#123;</div><div class="line">    NSLog(@&quot;动态添加方法调用 = %@&quot;, NSStringFromSelector(_cmd));</div><div class="line">&#125;</div><div class="line">+ (BOOL)resolveInstanceMethod:(SEL)sel &#123;</div><div class="line">    if (sel == @selector(setTest)) &#123;</div><div class="line">        class_addMethod([self class], sel, (IMP)resolveTest, &quot;v@:&quot;);</div><div class="line">        return YES;</div><div class="line">    &#125;</div><div class="line">    return [super resolveInstanceMethod:sel];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法<code>class_addMethod</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">OBJC_EXPORT BOOL</div><div class="line">class_addMethod(Class _Nullable cls, SEL _Nonnull name, IMP _Nonnull imp, </div><div class="line">                const char * _Nullable types) </div><div class="line">    OBJC_AVAILABLE(10.5, 2.0, 9.0, 1.0, 2.0);</div></pre></td></tr></table></figure>
<p>参数意义如下：</p>
<ul>
<li>cls：消息接收者</li>
<li>name：SEL方法名</li>
<li>imp：要动态添加方法的IMP指针</li>
<li>types：参数和返回值的符号字符串，<a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtTypeEncodings.html" target="_blank" rel="external">查看格式文档</a></li>
</ul>
<h3 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h3><p>解析类方法如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">+ (BOOL)resolveClassMethod:(SEL)sel &#123;</div><div class="line">    if (sel == @selector(setTestClass)) &#123;</div><div class="line">        class_addMethod(object_getClass(self), sel, (IMP)resolveTest, &quot;v@:&quot;);</div><div class="line">        return YES;</div><div class="line">    &#125;</div><div class="line">    return [super resolveClassMethod:sel];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里的区别在于cls：消息接收者，解析实例方法使用的<code>[self class]</code>，解析类方法使用的<code>object_getClass(self)</code>。</p>
<p>当self为实例对象时，<code>[self class]</code>与<code>object_getClass(self)</code>等价，因为前者会调用后者。<code>object_getClass([self class])</code>得到元类。</p>
<p>当self为类对象时，<code>[self class]</code>返回值为自身，还是self，所以上面解析实例方法将<code>[self class]</code>换成<code>self</code>也可以。<code>object_getClass(self)</code>与<code>object_getClass([self class])</code>等价。</p>
<h2 id="方法重定向"><a href="#方法重定向" class="headerlink" title="方法重定向"></a>方法重定向</h2><h3 id="实例方法-1"><a href="#实例方法-1" class="headerlink" title="实例方法"></a>实例方法</h3><p>重写<code>- (id)forwardingTargetForSelector:(SEL)aSelector</code>方法，可以将消息的接收者替换成其他对象。</p>
<p>新创建一个类<code>DemoNewObject</code>，将类<code>DemoObject</code>未实现的方法<code>- (void)setTest</code>，在<code>.m</code>中实现，无需在<code>.h</code>中暴露方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- (void)setTest &#123;</div><div class="line">    NSLog(@&quot;实例方法重定向&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法重定向操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">- (id)forwardingTargetForSelector:(SEL)aSelector &#123;</div><div class="line">    if (aSelector == @selector(setTest)) &#123;</div><div class="line">        DemoNewObject *obj = [[DemoNewObject alloc] init];</div><div class="line">        return obj;</div><div class="line">    &#125;</div><div class="line">    return [super forwardingTargetForSelector:aSelector];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="类方法-1"><a href="#类方法-1" class="headerlink" title="类方法"></a>类方法</h3><p>类方法重定向需要重写<code>+ (id)forwardingTargetForSelector:(SEL)aSelector</code>方法，注意是<code>+</code>开头的类方法。</p>
<p>同样在新类<code>DemoNewObject</code>中实现类方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">+ (void)setTestClass &#123;</div><div class="line">    NSLog(@&quot;类方法重定向&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>重写重定向方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+ (id)forwardingTargetForSelector:(SEL)aSelector &#123;</div><div class="line">    if (aSelector == @selector(setTestClass)) &#123;</div><div class="line">        return NSClassFromString(@&quot;DemoNewObject&quot;);</div><div class="line">    &#125;</div><div class="line">    return [super forwardingTargetForSelector:aSelector];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法重定向就是将当前类未实现的方法，重定向到一个实现该方法的新类中，调用新类中的方法实现。实例方法中返回实例对象，类方法中返回类对象。</p>
<h2 id="消息转发"><a href="#消息转发" class="headerlink" title="消息转发"></a>消息转发</h2><p>消息转发是通过方法<code>- (void)forwardInvocation:(NSInvocation *)anInvocation</code>实现的，它可以将不能处理的消息转发给其他对象处理，参数<code>anInvocation</code>是通过方法<code>- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector</code>产生的。</p>
<p>所以需要重写两个方法，<code>- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector</code>和<code>- (void)forwardInvocation:(NSInvocation *)anInvocation</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector &#123;</div><div class="line">    NSMethodSignature *signature = [super methodSignatureForSelector:aSelector];</div><div class="line">    if (!signature) &#123;</div><div class="line">        if ([DemoNewObject instancesRespondToSelector:aSelector]) &#123;</div><div class="line">            signature = [DemoNewObject instanceMethodSignatureForSelector:aSelector];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return signature;</div><div class="line">&#125;</div><div class="line">- (void)forwardInvocation:(NSInvocation *)anInvocation &#123;</div><div class="line">    if ([DemoNewObject instancesRespondToSelector:anInvocation.selector]) &#123;</div><div class="line">        [anInvocation invokeWithTarget:[[DemoNewObject alloc] init]];</div><div class="line">    &#125; else &#123;</div><div class="line">        [super forwardInvocation:anInvocation];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>参考资料</strong></p>
<p><a href="http://yulingtianxia.com/blog/2014/11/05/objective-c-runtime/" target="_blank" rel="external">Objective-C Runtime</a></p>
<p><a href="https://www.jianshu.com/p/60c251712df7" target="_blank" rel="external">iOS中的unrecognized selector sent to instance..</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;OC是动态语言，只有在运行时才会根据方法名去调用方法，称为给方法发送消息，是因为当调用&lt;code&gt;[demoObj setTest]&lt;/code&gt;方法时，编译器会转化为&lt;code&gt;objc_msgSend(demoObj, @selector(setTest))&lt;/code&gt;。如果携带参数，如&lt;code&gt;[demoObj setTest:str]&lt;/code&gt;，会转化为&lt;code&gt;objc_msgSend(demoObj, @selector(setTest), str)&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://markmiao.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Runtime" scheme="http://markmiao.com/tags/Runtime/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发笔记三</title>
    <link href="http://markmiao.com/2018/03/02/ios3/"/>
    <id>http://markmiao.com/2018/03/02/ios3/</id>
    <published>2018-03-02T06:31:49.000Z</published>
    <updated>2018-03-02T06:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NSInterger-to-NSData"><a href="#NSInterger-to-NSData" class="headerlink" title="NSInterger to NSData"></a>NSInterger to NSData</h2><p>NSInterger to NSData，数字转化为Data，打印出来以十六进制形式展示</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">- (NSData *)getDataWithInt:(NSInteger)interger &#123;</div><div class="line">    Byte b1=interger &amp; 0xff;</div><div class="line">    Byte b2=(interger&gt;&gt;8) &amp; 0xff;</div><div class="line">    Byte b3=(interger&gt;&gt;16) &amp; 0xff;</div><div class="line">    Byte b4=(interger&gt;&gt;24) &amp; 0xff;</div><div class="line">    if (interger &lt;= 255) &#123;</div><div class="line">        Byte byte[] = &#123;b1&#125;;</div><div class="line">        return [NSData dataWithBytes:byte length:sizeof(byte)];</div><div class="line">    &#125; else if (interger &lt;= 65535) &#123;</div><div class="line">        Byte byte[] = &#123;b2,b1&#125;;</div><div class="line">        return [NSData dataWithBytes:byte length:sizeof(byte)];</div><div class="line">    &#125; else if (interger &lt;= 16777215) &#123;</div><div class="line">        Byte byte[] = &#123;b3,b2,b1&#125;;</div><div class="line">        return [NSData dataWithBytes:byte length:sizeof(byte)];</div><div class="line">    &#125; else &#123;</div><div class="line">        Byte byte[] = &#123;b4,b3,b2,b1&#125;;</div><div class="line">        return [NSData dataWithBytes:byte length:sizeof(byte)];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="SHA1加密"><a href="#SHA1加密" class="headerlink" title="SHA1加密"></a>SHA1加密</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">- (NSString *)SHA1Encrypt:(NSString *)string&#123;</div><div class="line">    const char *cstr = [string UTF8String];</div><div class="line">    NSData *data = [NSData dataWithBytes:cstr length:string.length];</div><div class="line">    uint8_t digest[CC_SHA1_DIGEST_LENGTH];</div><div class="line">    CC_SHA1(data.bytes, (CC_LONG)data.length, digest);</div><div class="line">    NSMutableString *output = [NSMutableString stringWithCapacity:CC_SHA1_DIGEST_LENGTH *2];</div><div class="line">    for (int i = 0; i&lt;CC_SHA1_DIGEST_LENGTH; i++) &#123;</div><div class="line">        [output appendFormat:@&quot;%02x&quot;,digest[i]];</div><div class="line">    &#125;</div><div class="line">    return output;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="iPhone屏幕单位"><a href="#iPhone屏幕单位" class="headerlink" title="iPhone屏幕单位"></a>iPhone屏幕单位</h2><p>ios开发中设置的size为pt，pt是绝对长度，等于1/72英寸，等于1/72*25.4毫米。</p>
<p>px是像素，像素点的密度代表着屏幕清晰度。这就是开发中@1x、@2x、@3x的区别。</p>
<p>iPhone 3GS是@1x像素级，分辨率为480px <em> 320px，iPhone4是@2x像素级，分辨率为960px </em> 640px。这两者尺寸是一样的，所以pt是一样的，在同样大的范围内，iPhone 4的像素点比iPhone 3GS的多一倍。</p>
<h2 id="QR码的一些知识点"><a href="#QR码的一些知识点" class="headerlink" title="QR码的一些知识点"></a>QR码的一些知识点</h2><p>QR码有40个版本，版本1是21 x 21个小方块组成，版本2是25 x 25个小方块，每增加1版本，二维码长宽各增加4个方块。所以最高版本40，方块数为177 <em> 177。计算公式是：(V-1) </em> 4 + 21</p>
<p>使用CIFilter生成QR码</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//生码Objective-C</span></div><div class="line">- (<span class="built_in">UIImage</span> *)markCode:(<span class="built_in">NSString</span> *)code &#123;</div><div class="line">    <span class="built_in">CIFilter</span> *filter = [<span class="built_in">CIFilter</span> filterWithName:<span class="string">@"CIQRCodeGenerator"</span>];</div><div class="line">    [filter setDefaults];</div><div class="line">    <span class="built_in">NSData</span> *data = [code dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</div><div class="line">    [filter setValue:data forKey:<span class="string">@"inputMessage"</span>];</div><div class="line">    [filter setValue:<span class="string">@"L"</span> forKey:<span class="string">@"inputCorrectionLevel"</span>]; <span class="comment">//二维码的纠错级别 L &lt; H &lt; Q &lt; M</span></div><div class="line">    </div><div class="line">    <span class="built_in">CIColor</span> *color1 = [<span class="built_in">CIColor</span> colorWithCGColor:[<span class="built_in">UIColor</span> blackColor].CGColor];<span class="comment">//二维码颜色</span></div><div class="line">    <span class="built_in">CIColor</span> *color2 = [<span class="built_in">CIColor</span> colorWithCGColor:[<span class="built_in">UIColor</span> whiteColor].CGColor];<span class="comment">//背景色</span></div><div class="line">    <span class="built_in">NSDictionary</span> *parameters = [<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys: filter.outputImage ,<span class="string">@"inputImage"</span>, color1,<span class="string">@"inputColor0"</span>, color2,<span class="string">@"inputColor1"</span>,<span class="literal">nil</span>];</div><div class="line">    <span class="built_in">CIFilter</span> *newFilter = [<span class="built_in">CIFilter</span> filterWithName:<span class="string">@"CIFalseColor"</span> withInputParameters:parameters];</div><div class="line">    <span class="built_in">CIImage</span> *outPutImage = [newFilter outputImage];</div><div class="line">    <span class="keyword">int</span> version = (<span class="keyword">int</span>)((outPutImage.extent.size.width - <span class="number">21</span>) / <span class="number">4.0</span> + <span class="number">1</span>); <span class="comment">//获取该二维码的版本号</span></div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> createNonInterpolatedUIImageFormCIImage:outPutImage withSize:<span class="number">600</span>];</div><div class="line">&#125;</div><div class="line"><span class="comment">//让二维码变的清楚</span></div><div class="line">- (<span class="built_in">UIImage</span> *)createNonInterpolatedUIImageFormCIImage:(<span class="built_in">CIImage</span> *)image withSize:(<span class="built_in">CGFloat</span>) size &#123;</div><div class="line">    <span class="built_in">CGRect</span> extent = <span class="built_in">CGRectIntegral</span>(image.extent);</div><div class="line">    <span class="built_in">CGFloat</span> scale = MIN(size/<span class="built_in">CGRectGetWidth</span>(extent), size/<span class="built_in">CGRectGetHeight</span>(extent));</div><div class="line">    size_t width = <span class="built_in">CGRectGetWidth</span>(extent) * scale;</div><div class="line">    size_t height = <span class="built_in">CGRectGetHeight</span>(extent) * scale;</div><div class="line">    <span class="built_in">CGColorSpaceRef</span> cs = <span class="built_in">CGColorSpaceCreateDeviceRGB</span>();</div><div class="line">    <span class="built_in">CGContextRef</span> bitmapRef = <span class="built_in">CGBitmapContextCreate</span>(<span class="literal">nil</span>, width, height, <span class="number">8</span>, <span class="number">0</span>, cs, (<span class="built_in">CGBitmapInfo</span>)kCGImageAlphaPremultipliedLast);</div><div class="line">    <span class="built_in">CIContext</span> *context = [<span class="built_in">CIContext</span> contextWithOptions:<span class="literal">nil</span>];</div><div class="line">    <span class="built_in">CGImageRef</span> bitmapImage = [context createCGImage:image fromRect:extent];</div><div class="line">    </div><div class="line">    <span class="built_in">CGContextSetInterpolationQuality</span>(bitmapRef, kCGInterpolationNone);</div><div class="line">    <span class="built_in">CGContextScaleCTM</span>(bitmapRef, scale, scale);</div><div class="line">    <span class="built_in">CGContextDrawImage</span>(bitmapRef, extent, bitmapImage);</div><div class="line">    </div><div class="line">    <span class="built_in">CGImageRef</span> scaledImage = <span class="built_in">CGBitmapContextCreateImage</span>(bitmapRef);</div><div class="line">    <span class="built_in">CGContextRelease</span>(bitmapRef); <span class="built_in">CGImageRelease</span>(bitmapImage);</div><div class="line">    </div><div class="line">    <span class="built_in">UIImage</span> *outputImage = [<span class="built_in">UIImage</span> imageWithCGImage:scaledImage];</div><div class="line">    <span class="keyword">return</span> outputImage;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;NSInterger-to-NSData&quot;&gt;&lt;a href=&quot;#NSInterger-to-NSData&quot; class=&quot;headerlink&quot; title=&quot;NSInterger to NSData&quot;&gt;&lt;/a&gt;NSInterger to NSData&lt;/h2&gt;&lt;p&gt;NSInterger to NSData，数字转化为Data，打印出来以十六进制形式展示&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://markmiao.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://markmiao.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>2017我的年终总结</title>
    <link href="http://markmiao.com/2017/12/29/sum2017/"/>
    <id>http://markmiao.com/2017/12/29/sum2017/</id>
    <published>2017-12-29T05:44:30.000Z</published>
    <updated>2018-03-16T09:35:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>2016年的年终总结里写的愿望是：希望2017年的年终总结里没有懊悔。</p>
<p>回望2017，好像在原地踏步，像在风浪中打转的孤舟。混混沌沌算是过去了，这一晃又是一年。</p>
<a id="more"></a>
<h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>没有跳槽，还是很平淡的敲代码，公司的代码敲的比较少了，一是没有什么技术难题，二是确实没有什么可敲的。这一年立志做自己的应用，写技术博客，开源项目。这几项都完成寥寥，没什么可总结的。独立项目，可看我上一篇文章<a href="http://markmiao.com/2017/12/26/kaifazhezongjietucao/">个人开发者的吐槽</a>；技术博客，没什么可说的；开源项目，呃……不丢人了……</p>
<p>明年还是想让自己的工作有一个大的改变，好几年都没有变化，做井底之蛙太久了。</p>
<h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>生活上比较跌宕起伏，有时间我会就这个大事件专门写一篇长文，吐槽一下整个2017年，我们的惊险奇遇。可以说见证了北京房价的疯狂，也见识到人性的卑劣，更体会到福祸相依的人生，还见识到不能说的黑暗。之所以现在还没写，是他妈的这件事还没完！！！</p>
<p>生活从不缺惊喜和惊吓，我会积极面对，不以物喜，不以己悲，佛系人生，看淡一切。WQNMLGB！</p>
<p>2017再见，2018你好。对2018的我说一句：再立志，别放弃！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2016年的年终总结里写的愿望是：希望2017年的年终总结里没有懊悔。&lt;/p&gt;
&lt;p&gt;回望2017，好像在原地踏步，像在风浪中打转的孤舟。混混沌沌算是过去了，这一晃又是一年。&lt;/p&gt;
    
    </summary>
    
      <category term="记事" scheme="http://markmiao.com/categories/%E8%AE%B0%E4%BA%8B/"/>
    
    
      <category term="总结" scheme="http://markmiao.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="生活" scheme="http://markmiao.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>个人开发者的吐槽</title>
    <link href="http://markmiao.com/2017/12/26/kaifazhezongjietucao/"/>
    <id>http://markmiao.com/2017/12/26/kaifazhezongjietucao/</id>
    <published>2017-12-26T08:35:13.000Z</published>
    <updated>2018-12-24T07:59:34.766Z</updated>
    
    <content type="html"><![CDATA[<p>按说到了该写年终总结的时候了，不仅没写，还浪浪荡荡的想再写一篇吐槽。我不是独立开发者，只是想尝试一下自己设计、自己开发一款APP是一种什么样的体验。本文偏吐槽，没有实质性的内容总结，以后有机会再写一篇详细的开发体验。</p>
<a id="more"></a>
<h2 id="年终总结"><a href="#年终总结" class="headerlink" title="年终总结"></a>年终总结</h2><p>今年年初注册了苹果个人开发者账号，4月10日发布了第一款个人应用：<a href="https://itunes.apple.com/cn/app/%E6%8E%92%E7%8F%AD-%E4%B8%8A%E7%8F%AD%E6%97%B6%E9%97%B4-%E4%B8%80%E7%9B%AE%E4%BA%86%E7%84%B6/id1221228242?mt=8" target="_blank" rel="external">排班 - 上班时间，一目了然</a>，然后就不负责任地再也没迭代过新版本，新版并不是没开发，而是改动比较多，步子迈大了，中途忙别的就给耽误了。（死不承认是三分钟热度过劲了）</p>
<p>8月份发布了第一款macOS应用：<a href="https://itunes.apple.com/cn/app/%E9%80%9F%E8%AE%B0-%E5%BF%AB%E9%80%9F%E8%AE%B0%E5%BD%95%E6%AF%8F%E4%B8%80%E6%AE%B5%E6%96%87%E5%AD%97/id1263819789?mt=12" target="_blank" rel="external">速记 - 快速记录每一段文字</a>，然后就臭不要脸地只迭代了一版。这是我学习macOS开发的试水项目，以后可能还会迭代新版本吧。其实年底又新开了一个macOS应用项目，开发了一半，明年发布。旧坑不填，新坑不断。</p>
<p>今年是我写个人项目的第一年，算起来做iOS开发也好几年了，现在才搞，也是后知后觉。年底了，集中吐槽一下做个人独立项目的经历和感触。</p>
<p>“利用业余时间，将自己的技术转化为产品，能帮助用户，并收获5星好评，感觉棒棒哒。”这冠冕堂皇的说辞是不是看的有点吐？不吹牛逼，扯点实际的。</p>
<p>其实是用一堆烂代码攒个烂app，祈求没bug，让用户购买，日夜盼望着销量多点，多赚点外快，攒点私房钱。再收获点好评和赞美邮件，跳槽时再能当个加分点，岂不是美滋滋？</p>
<p>一年时间快过去了，勉强把交给苹果的保护费赚回来了。最佳成绩是效率付费APP排行榜第19位。收获了二三十封邮件反馈，意见和建议都很好，我会慢慢加到APP里，明年就加，不吹牛逼。也有一两封邮件，开篇就骂，要求退款。App Store收获了21条评论，5星4星好评占大多数，也有说不好用给1星的，或者直接骂垃圾给1星。不论好坏，照单全收。</p>
<h2 id="付费机制"><a href="#付费机制" class="headerlink" title="付费机制"></a>付费机制</h2><p>我的两个APP都采用了最简单的付费模式——付费下载。一次性买断，享受永久的应用服务和后续所有新版本迭代。另一种付费模式是内购，可以免费安装使用部分功能，解锁全部功能需要内购付费，这类付费可以是买断（比如游戏解锁关卡），也可以是订阅式（比如会员服务）。</p>
<p>现在越来越多的应用开始采用内购订阅模式，对开发者来说，不仅仅依靠新增用户付费，老用户在享受应用服务和新版本迭代，也支付一些费用，这样有利于应用的长期发展。对用户来说，不用付费就能先体验一把，适不适合自己可以有个判断，再决定是否付费享受全部功能。这种缓冲策略，对于用户量增长也很有利。</p>
<p>当然，对于订阅模式的应用，如何界定免费功能和付费功能，还有很多需要探讨的地方。免费功能可以满足用户，便很少有用户会付费；免费功能太少，如同鸡肋，用户有可能会骂娘直接卸载。</p>
<p>其实最艰难的，当属付费应用转为免费+订阅式应用的转型。老用户当时狠心花钱买断了应用，你现在告诉人家要交年费，这不是坑人吗。著名的markdown编辑器Ulysses，日记应用Day One，密码存储应用1Password，这几款堪称神作的APP都经历了从付费应用到免费+订阅式应用的转变。然后在转型初期，无一例外的收获了大量的1星差评和骂娘评论。</p>
<p>也有公司干脆发布一款免费+订阅式的新应用，保留付费买断的旧应用。著名思维导图应用MindNode就是这么做的，新版MindNode5是免费+订阅，旧版MindNode4（macOS应用是MindNode2）是付费应用。但这样一来，就会出现用户导流的新问题，同时维护两个应用也增加了开发成本。</p>
<p>未来的付费应用，使用订阅式这类持续付费的会越来越多，毕竟软件公司需要维持发展，开发者也得活着吃饭，仅靠新增用户，收益只会越来越少，饿死是迟早的事。其实这也符合自然法则，你购买APP是享受它带来的持续服务，还包括新版本新功能，这又不是一次性的。不像买根黄瓜，吃完了事。</p>
<p>所以明年上架的macOS应用，我打算尝试一下付费订阅模式。</p>
<h2 id="收益分成"><a href="#收益分成" class="headerlink" title="收益分成"></a>收益分成</h2><p>App Store上所有的付费应用，苹果公司都要抽成30%，不论是付费下载还是内购（订阅式内购第一年抽成30%，第二年抽成15%）。想想让腾讯赚个盆满钵满的王者荣耀，苹果已经拿走了30%，App Store可不止一个王者荣耀。一个APP卖1块钱，苹果会拿走3毛，1分钱交税，开发者得6毛9分钱，还是人家做平台的牛逼啊。</p>
<p>曾经有一个用户给我发邮件，说APP不好用，要我退他1块钱。我满腔苦水无人诉说，我这省吃俭用攒了688块钱，向苹果爸爸买了个摊位，辛辛苦苦开发了个应用，求苹果爸爸高抬贵手通过审核，终于摆上摊位。你花1块钱买了，转头说不好用，让我退钱。我哪有钱呐，别说你这1块了，该分成给我的6毛9也没到我手里啊！</p>
<p>这里我想说的是，买错的或者用着不满意的APP可以退款，但你不应该找开发者，应该去找苹果公司。购买90天内，你可以在已购APP里申请退款，苹果会根据你的使用情况和理由酌情考虑会不会给你退钱。即使退款成功，APP也不会从你手机里卸载，你还能继续使用。如果退款不成功，那你要考虑下为什么了，一个游戏你都玩通关了，再去申请退款，肯定没戏。所以，要退款，请出门左转找苹果。</p>
<p>用户购买APP的钱并不会实时转账到开发者的账户，我只能看到下载量和预计收益，收益到账？不存在的。每月苹果会下发上月的财务报告，但并不代表着会给开发者打钱。只有收益累计超过150美元，苹果才会给开发者汇款。如果收益达不到150美元，会自动累计到下个月。也就是说，我靠着6毛9、6毛9、6毛9……这个赚法，一直赚到1000块钱，苹果才会给我转账。你张口就让我退你1块钱，我哪有啊！</p>
<h2 id="艰难入账"><a href="#艰难入账" class="headerlink" title="艰难入账"></a>艰难入账</h2><p>终于有一天，我的收益超过了150美元，苹果要给我打钱了。这些年净是给苹果送钱了，终于要见到回头钱了。然而中国银行还横插了一杠子。</p>
<p>上架付费应用需要绑定银行卡，不然苹果无法给开发者汇款收益，我绑定了一张中国银行的储蓄卡。苹果汇款那天我接到了中国银行给我打的电话：“您有一笔美元汇款，请问这笔钱是做什么用的？”</p>
<p>我有点懵，我说：“是苹果公司给我的付费应用分成收益，是合法的。”我特意强调合法，我心里还嘀咕，中国银行认为我走私了？</p>
<p>对方说：“收益？是劳务报酬吗？”</p>
<p>我想我又不是苹果员工，这算劳务报酬吗？其实这就是劳务报酬，在苹果的App Store上发布应用获取收益，也属于参与了苹果提供的工作岗位。</p>
<p>我问：“为什么要问这笔钱是做什么用的？”</p>
<p>对方说：“这是境外公司对个人的汇款，您必须提供对方为什么给你汇这笔钱的说明资料，然后我们才能给您入账。”</p>
<p>我明白了，钱是我的，我还得证明这钱为什么是我的。我说：“我怎么给你说明资料？”</p>
<p>对方说：“您什么时候方便，可以来柜台办理一下。”</p>
<p>我说：“我没时间过去，我这也只有电子版的，邮件发你吧。”</p>
<p>对方纠结了半天，还是同意了，说先发过去看看。然后给我发了一封只有标题，内容全是甩锅的邮件，让我在回复邮件中提供说明资料。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/WX20171226-155140.png" alt="甩锅邮件"></p>
<p>我将苹果的付费应用协议《Paid Applications Agreement》PDF文件发过去了，这份协议有36页，全是英文。我在网上搜索，好多开发者都遇到过这个问题，被银行刁难必须提供汇款说明资料。有一个最悲催的开发者，被银行要求将这36页的付费应用协议翻译成中文打印出来。</p>
<p>我本以为这就可以了，过了两天，中国银行又给我打电话，说我必须得去签字，同意美元入账。我说那人民币入账吧，对方说人民币入账我得带着身份证去做汇率转换。说到底我还得跑一趟。</p>
<p>在柜台签字入账的时候，我发现那36页的付费应用协议被打印出来了，厚厚的一摞，中国银行真牛！</p>
<p>我咨询了一下，这家中国银行支行只收到我这一例苹果公司给开发者汇款的业务，以后汇款入账，还得去柜台办理，我准备换银行卡了，谁知道哪家银行可以直接入账？</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;按说到了该写年终总结的时候了，不仅没写，还浪浪荡荡的想再写一篇吐槽。我不是独立开发者，只是想尝试一下自己设计、自己开发一款APP是一种什么样的体验。本文偏吐槽，没有实质性的内容总结，以后有机会再写一篇详细的开发体验。&lt;/p&gt;
    
    </summary>
    
      <category term="程序人生" scheme="http://markmiao.com/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="短文" scheme="http://markmiao.com/tags/%E7%9F%AD%E6%96%87/"/>
    
      <category term="AppStore" scheme="http://markmiao.com/tags/AppStore/"/>
    
  </entry>
  
  <entry>
    <title>吐槽苹果APP审核</title>
    <link href="http://markmiao.com/2017/12/22/tucaoappshenhe/"/>
    <id>http://markmiao.com/2017/12/22/tucaoappshenhe/</id>
    <published>2017-12-22T08:55:11.000Z</published>
    <updated>2017-12-22T08:58:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>前两天看图神发了一篇文章<a href="https://imtx.me/archives/2399.html" target="_blank" rel="external">谈谈 Apple 的「审核玄学」</a>，看完之后深以为然，苹果的APP上架审核堪称不可捉摸的玄学秘术。我也曾就这个问题吐槽过：<a href="http://markmiao.com/2017/08/12/talkingtoapple/">被苹果爸爸完全碾压的通话记录</a>，也记录过因各种问题被拒的经历：<a href="http://markmiao.com/2016/11/10/%E6%8F%90%E4%BA%A4%E5%BA%94%E7%94%A8%E5%88%B0AppStore%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/#%E4%B9%8B%E5%89%8D%E4%B8%8D%E5%B9%B8%E8%B8%A9%E8%BF%87%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91%EF%BC%8C%E8%A2%ABAppStore%E6%8B%92%E4%BA%86">之前不幸踩过的一些坑，被AppStore拒了</a>、<a href="http://markmiao.com/2017/07/27/macosapprejected/">macOS应用上架被拒</a>。</p>
<a id="more"></a>
<p>细数这些年我被苹果审核拒绝的经历，貌似还没有离谱到玄学境地的（这个flag先立起来，等遇到了回来还愿）。虽然我没遇到，但其审核作风就是：“上联：说你行你就行，不行也行。下联：说不行就不行，行也不行。横批：不服不行。“</p>
<p>曾经一个app上架，被苹果以不支持IPv6-only为理由，拒绝了七八次。最后苹果警告，再不修复该问题，等待审核时间会加倍延长。我各种测试在IPv6-only网络环境下，APP网络访问完全没问题，当时在想是不是服务器接口被墙了？苹果审核时访问不了。给苹果拍视频，写邮件解释，换来的还是拒绝。</p>
<p>真实情况是根本不存在不支持IPv6-only的问题，而是苹果审核时未允许地理位置获取，导致某个接口缺少位置参数，结果返回网络连接失败。我和服务端都忽略了这个问题。其实只有这一个接口访问不了，其他接口完全没问题。但是苹果只给我截了这一页的截图，说接口访问失败，不支持IPv6-only。当时只顾着死怼IPv6-only，完全搞错了方向。</p>
<p>曾经还因为APP太简单被拒绝，苹果给的理由是应用过于简单，建议用HTML网页实现。其实APP界面跳转挺多的，只是意见反馈和教程讲解占了大部分功能，苹果认为这两个功能应用性太低，所以将其归类于太简单。然而你却没有权利反驳。</p>
<p>App Store上应用繁多，有好多APP的内容或功能违反了苹果审核条例，比如：盛名列车时刻就存在软件更新功能。但是这些并不是你可以这么做的理由。我曾经因APP被拒，向苹果审核人员抱怨：“有的应用就是这么做的。”结果被直接怼回来了：“如果你认为有应用存在违规，可以举报，但你的应用违反审核条例，不能上架。”</p>
<p>其实苹果也有宽宏大量的时候，我曾上架过一款TCP通讯的APP，需要和Windows客户端配合使用。APP打开只有一个登录界面，需要Windows客户端配合生成登录校验码，才能登录。使用时也需要开启Windows客户端，并输入Windows的IP和端口进行TCP通讯。</p>
<p>上架前曾绞尽脑汁考虑，怎么让苹果使用并审核APP呢？最后我拍了一段500M的视频，详细记录了使用过程，在提交APP的备注里加上视频地址。结果是APP审核通过，顺利上架。那一刻简直想高呼苹果万岁。</p>
<p>好人多吐槽过苹果的审核时间，APP上架会经历这几种状态：准备提交，等待审核，审核中，审核通过或被拒。APP提交后，等待审核这个阶段是最漫长的，平均一周左右。苹果审核太慢也是导致JSPatch等热更新技术兴起的一大原因。今年苹果明令禁止上架APP采用热更新技术，同时审核速度有所提高，运气好的话通常一两天就可以审核完成，运气不好就没准了。</p>
<p>我经历的APP审核绝大多数是在晚上，通常半夜睡觉前会收到进入审核状态的通知，第二天会收到通过或被拒的通知。而且发现周五晚上进入审核状态的几率比较高。感觉macOS应用比iOS应用审核快，我经历过最快的一次macOS应用审核，从APP提交到审核通过只用了2小时16分。</p>
<p>苹果的应用审核机构神秘莫测，鲜为人知；审核手段大道无形，难以捉摸。惹不起，惹不起。</p>
<p>做iOS开发，你不仅惹不起，还躲不起。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前两天看图神发了一篇文章&lt;a href=&quot;https://imtx.me/archives/2399.html&quot;&gt;谈谈 Apple 的「审核玄学」&lt;/a&gt;，看完之后深以为然，苹果的APP上架审核堪称不可捉摸的玄学秘术。我也曾就这个问题吐槽过：&lt;a href=&quot;http://markmiao.com/2017/08/12/talkingtoapple/&quot;&gt;被苹果爸爸完全碾压的通话记录&lt;/a&gt;，也记录过因各种问题被拒的经历：&lt;a href=&quot;http://markmiao.com/2016/11/10/%E6%8F%90%E4%BA%A4%E5%BA%94%E7%94%A8%E5%88%B0AppStore%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/#%E4%B9%8B%E5%89%8D%E4%B8%8D%E5%B9%B8%E8%B8%A9%E8%BF%87%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91%EF%BC%8C%E8%A2%ABAppStore%E6%8B%92%E4%BA%86&quot;&gt;之前不幸踩过的一些坑，被AppStore拒了&lt;/a&gt;、&lt;a href=&quot;http://markmiao.com/2017/07/27/macosapprejected/&quot;&gt;macOS应用上架被拒&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="程序人生" scheme="http://markmiao.com/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="短文" scheme="http://markmiao.com/tags/%E7%9F%AD%E6%96%87/"/>
    
      <category term="AppStore" scheme="http://markmiao.com/tags/AppStore/"/>
    
      <category term="应用" scheme="http://markmiao.com/tags/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>macOS开发笔记(1)</title>
    <link href="http://markmiao.com/2017/12/07/macosdevelnote1/"/>
    <id>http://markmiao.com/2017/12/07/macosdevelnote1/</id>
    <published>2017-12-07T08:05:19.000Z</published>
    <updated>2018-12-24T07:59:56.614Z</updated>
    
    <content type="html"><![CDATA[<p>旧坑不填，喜开新坑。这两天又计划开发一款macOS应用，之前开发的<a href="http://markmiao.com/2017/07/26/stenonote/">速记</a>完全是练手，反正现在是不想填坑了，索性再开一个。实际做一个项目，是学习的最佳途径。本文记录了我在开发中遇到的各种问题，以及找到的解决办法，权当以后查阅的笔记。如果能给某位朋友带来帮助，是我的荣幸。如果发现问题，敬请评论吐槽。</p>
<a id="more"></a>
<p>开发环境：<strong>Xcode 9.1 + Swift4</strong></p>
<h2 id="StatusBar"><a href="#StatusBar" class="headerlink" title="StatusBar"></a>StatusBar</h2><h3 id="设置按钮"><a href="#设置按钮" class="headerlink" title="设置按钮"></a>设置按钮</h3><p>在<code>applicationDidFinishLaunching</code>方法中调用下面代码，设置StatusBar按钮</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">createButtonStatusBar</span><span class="params">()</span></span> &#123;</div><div class="line">   <span class="keyword">let</span> statusBar = <span class="type">NSStatusBar</span>.system</div><div class="line">   <span class="keyword">let</span> item = statusBar.statusItem(withLength: <span class="type">NSStatusItem</span>.squareLength)</div><div class="line">   item.button?.target = <span class="keyword">self</span></div><div class="line">   item.button?.action = #selector(itemActionShowView(<span class="number">_</span>:))</div><div class="line">   <span class="keyword">let</span> image:<span class="type">NSImage</span> = <span class="type">NSImage</span>(named: <span class="type">NSImage</span>.<span class="type">Name</span>(rawValue: <span class="string">"mremindbaricon"</span>))!</div><div class="line">   image.isTemplate = <span class="literal">true</span></div><div class="line">   item.button?.image = image</div><div class="line">   statusItem = item;</div><div class="line">&#125;</div><div class="line"><span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">itemActionShowView</span><span class="params">(<span class="number">_</span> sender: NSStatusBarButton)</span></span> &#123;</div><div class="line">   <span class="built_in">print</span>(<span class="string">"点击"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>itemActionShowView</code>是实现的点击方法，Swift4.0之后，必须增加<code>@objc</code>修饰符，是因为Swift4.0之后去掉了Swift3.x对隐式类型推断的特性，必须手动管理<code>@objc</code>，保证oc和Swift代码能互相调用。</p>
<h3 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h3><p>在<code>Main.storyboard</code>的<code>Application Scene</code>中拖入<code>NSMenu</code>，将<code>NSMenu</code>拖线到<code>AppDelegate</code>中。如同上面设置statusBar按钮一样，不需要设置按钮的<code>target</code>和<code>action</code>，需要设置<code>menu</code>。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> toolMenu: <span class="type">NSMenu</span>!</div><div class="line"></div><div class="line">...</div><div class="line"></div><div class="line">item.menu = toolMenu</div></pre></td></tr></table></figure>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/2017-12-04-15-48-40.png" alt="添加NSMenu"></p>
<p>添加<code>NSMenu</code>的点击事件，直接拖线<code>action</code>即可。</p>
<h2 id="Dock和Window"><a href="#Dock和Window" class="headerlink" title="Dock和Window"></a>Dock和Window</h2><h3 id="隐藏Dock上的应用图标"><a href="#隐藏Dock上的应用图标" class="headerlink" title="隐藏Dock上的应用图标"></a>隐藏Dock上的应用图标</h3><p>开发statusBar应用，不需要弹出Window界面，可以在<code>Main.storyboard</code>中的<code>Window Controller Scene</code>中取消<code>Is Initial Controller</code>的勾选。</p>
<p>不需要在Dock上出现应用图标，<code>Info.plist</code>中添加Key - Value：<code>Application is agent (UIElement)</code> - <code>YES</code></p>
<h3 id="Window居中"><a href="#Window居中" class="headerlink" title="Window居中"></a>Window居中</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">window.center()<span class="comment">//居中</span></div></pre></td></tr></table></figure>
<h3 id="Window的层级关系"><a href="#Window的层级关系" class="headerlink" title="Window的层级关系"></a>Window的层级关系</h3><p>Window有一个<code>level</code>属性，标识Window的层级关系。设置Window的<code>level</code>：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">self</span>.window?.level = .floating <span class="comment">//Window设置为浮动的</span></div></pre></td></tr></table></figure>
<p>还有好多其他层级关系，诸如<code>normal</code>、<code>submenu</code>、<code>tornOffMenu</code>……</p>
<h3 id="启动Window"><a href="#启动Window" class="headerlink" title="启动Window"></a>启动Window</h3><p>弹出一个Window页面，并将其设置为<code>keyWindow</code>（第一响应者的Window窗口）：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//将addWindowController.window启动，并设置为keyWindow</span></div><div class="line">addWindowController.window!.makeKeyAndOrderFront(<span class="keyword">self</span>)</div></pre></td></tr></table></figure>
<p>有时候该方法只能将Window显示出来，并不能设置为keyWindow，如果是<code>normal</code>层级的Window，Window都不能覆盖其他应用窗口，只会在其他应用窗口下面显示。特别是statusBar应用，在其他应用窗口为<code>keyWindow</code>时，点击工具条上的statusBar，启动Window，无法完成<code>keyWindow</code>设置。</p>
<p>需要调用下面代码，将其他应用都取消<code>keyWindow</code></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="type">NSApp</span>.activate(ignoringOtherApps: <span class="literal">true</span>)</div></pre></td></tr></table></figure>
<h2 id="NSTextField"><a href="#NSTextField" class="headerlink" title="NSTextField"></a>NSTextField</h2><h3 id="输入时隐藏蓝色边框"><a href="#输入时隐藏蓝色边框" class="headerlink" title="输入时隐藏蓝色边框"></a>输入时隐藏蓝色边框</h3><p><code>xib</code>中在<code>Focus Ring</code>中选择<code>None</code></p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/2017-12-05-10-45-36.png" alt="隐藏蓝色边框"></p>
<p>或者在代码中执行：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">textField.focusRingType = .<span class="keyword">none</span></div></pre></td></tr></table></figure>
<h3 id="文本框第一响应者"><a href="#文本框第一响应者" class="headerlink" title="文本框第一响应者"></a>文本框第一响应者</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">self</span>.window?.makeFirstResponder(textField)<span class="comment">//设置为第一响应者</span></div><div class="line"><span class="keyword">self</span>.window?.makeFirstResponder(<span class="literal">nil</span>) <span class="comment">//取消第一响应者</span></div></pre></td></tr></table></figure>
<h2 id="获取版本号"><a href="#获取版本号" class="headerlink" title="获取版本号"></a>获取版本号</h2><h3 id="macOS版本号"><a href="#macOS版本号" class="headerlink" title="macOS版本号"></a>macOS版本号</h3><p>macOS10.10及以上，使用下面的方法：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> version = <span class="type">ProcessInfo</span>.processInfo.operatingSystemVersion</div><div class="line"><span class="built_in">print</span>(<span class="string">"<span class="subst">\(version.majorVersion)</span>.<span class="subst">\(version.minorVersion)</span>.<span class="subst">\(version.patchVersion)</span>"</span>)</div></pre></td></tr></table></figure>
<p>还有如下方式（已弃用）</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#<span class="keyword">import</span> &lt;CoreServices/CoreServices.h&gt;</div><div class="line"></div><div class="line"><span class="type">SInt32</span> major, minor, bugfix;</div><div class="line"><span class="type">Gestalt</span>(gestaltSystemVersionMajor, &amp;major);</div><div class="line"><span class="type">Gestalt</span>(gestaltSystemVersionMinor, &amp;minor);</div><div class="line"><span class="type">Gestalt</span>(gestaltSystemVersionBugFix, &amp;bugfix);</div><div class="line"><span class="built_in">print</span>(<span class="string">"<span class="subst">\(major)</span>.<span class="subst">\(minor)</span>.<span class="subst">\(bugfix)</span>"</span>)</div></pre></td></tr></table></figure>
<p>其他方式请见：<a href="https://stackoverflow.com/questions/6492038/find-mac-os-x-version-number-in-objective-c" target="_blank" rel="external">查找Mac OS X版本号</a></p>
<h3 id="app版本号"><a href="#app版本号" class="headerlink" title="app版本号"></a>app版本号</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> version = <span class="type">Bundle</span>.main.object(forInfoDictionaryKey: <span class="string">"CFBundleShortVersionString"</span>)</div><div class="line"><span class="keyword">let</span> bundle = <span class="type">Bundle</span>.main.object(forInfoDictionaryKey: <span class="string">"CFBundleVersion"</span>)</div></pre></td></tr></table></figure>
<h2 id="设置快捷键和关闭退出应用"><a href="#设置快捷键和关闭退出应用" class="headerlink" title="设置快捷键和关闭退出应用"></a>设置快捷键和关闭退出应用</h2><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>xib或storyboard设置快捷键很方便，直接在<code>Key Equivalend</code>输入快捷键即可。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/2017-12-07-15-42-28.png" alt="设置快捷键"></p>
<h3 id="退出应用"><a href="#退出应用" class="headerlink" title="退出应用"></a>退出应用</h3><p>从<code>action</code>拖线到<code>Application</code>，选择<code>stop:</code>方法即可：</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/WX20171207-154727.png" alt="拖线到Application"></p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/2017-12-07-15-48-21.png" alt="选择stop:方法"></p>
<p>或者拖线到<code>First Responder</code>，选择<code>terminate:</code>方法</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/WX20171207-155548.png" alt="拖线到First Responder"></p>
<p>或者调用代码：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="type">NSApplication</span>.shared().terminate(<span class="keyword">self</span>)</div></pre></td></tr></table></figure>
<h3 id="关闭应用"><a href="#关闭应用" class="headerlink" title="关闭应用"></a>关闭应用</h3><p>拖线到<code>First Responder</code>，选择<code>performClose:</code>方法</p>
<h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><h3 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h3><p>使用<code>NSSharingService</code>调用macOS邮件应用，发送邮件。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> emailService = <span class="type">NSSharingService</span>(named: <span class="type">NSSharingService</span>.<span class="type">Name</span>.composeEmail)!</div><div class="line">emailService.recipients = [<span class="string">"i@markmiao.com"</span>]</div><div class="line">emailService.subject = <span class="string">"邮件内容"</span></div><div class="line"><span class="keyword">if</span> emailService.canPerform(withItems: [<span class="string">"邮件内容"</span>]) &#123;</div><div class="line">  emailService.perform(withItems: [<span class="string">"邮件内容"</span>])</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  <span class="built_in">print</span>(<span class="string">"没配置邮件账户"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="在浏览器中打开网页"><a href="#在浏览器中打开网页" class="headerlink" title="在浏览器中打开网页"></a>在浏览器中打开网页</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="type">NSWorkspace</span>.shared.open(<span class="type">URL</span>(string: <span class="string">"http://markmiao.com"</span>)!)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;旧坑不填，喜开新坑。这两天又计划开发一款macOS应用，之前开发的&lt;a href=&quot;http://markmiao.com/2017/07/26/stenonote/&quot;&gt;速记&lt;/a&gt;完全是练手，反正现在是不想填坑了，索性再开一个。实际做一个项目，是学习的最佳途径。本文记录了我在开发中遇到的各种问题，以及找到的解决办法，权当以后查阅的笔记。如果能给某位朋友带来帮助，是我的荣幸。如果发现问题，敬请评论吐槽。&lt;/p&gt;
    
    </summary>
    
      <category term="macOS开发" scheme="http://markmiao.com/categories/macOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="macOS" scheme="http://markmiao.com/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>APP国际化</title>
    <link href="http://markmiao.com/2017/12/01/duoyuyan/"/>
    <id>http://markmiao.com/2017/12/01/duoyuyan/</id>
    <published>2017-12-01T06:53:14.000Z</published>
    <updated>2018-12-24T07:58:27.089Z</updated>
    
    <content type="html"><![CDATA[<p>旧文新录，好多主流app都支持多语言(或者叫本地化/国际化)，有的是自动适应系统语言，有的是用户选择修改。比如微信支持如下语言，可以根据系统自适应，也可以用户更改。</p>
<a id="more"></a>
<p><img src="https://github.com/mxdios/notebook/blob/master/notebooks/images/QQ20161117-0.png?raw=true" alt="微信支持的语言环境"></p>
<h2 id="创建多语言文件"><a href="#创建多语言文件" class="headerlink" title="创建多语言文件"></a>创建多语言文件</h2><p>在工程中<code>command + n</code>创建文件，选择<code>iOS</code> -&gt; <code>Resource</code> -&gt; <code>Strings File</code>文件，自定义文件名，创建完成。</p>
<h2 id="添加多语言"><a href="#添加多语言" class="headerlink" title="添加多语言"></a>添加多语言</h2><p>选中新创建的多语言文件，展开右侧的侧边栏，在侧边栏里，点击<code>Localization</code>下的<code>Localize...</code>按钮，选择<code>English</code>，点击<code>Localize</code>。</p>
<p>选中工程在<code>PROJECT</code>里面的<code>Localizations</code>，添加语言。</p>
<p>每添加一个，在新建的多语言文件下就会多一个以<code>.strings</code>为后缀名的文件，这就是每个语言对应的语言文件。里面存放的语言文字是以<code>key - value</code>形式保存，每个文件中<code>key</code>是一样的，<code>value</code>对应着该语言下的文字。比如：</p>
<p>中文简体文件<code>File.strings(Chinese(Simplified))</code>里面存放的是：</p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"text"</span>=<span class="string">"世界，你好。"</span><span class="comment">;</span></div></pre></td></tr></table></figure>
<p>英文文件<code>File.strings(English)</code>里存放的是：</p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"text"</span>=<span class="string">"hello,world."</span><span class="comment">;</span></div></pre></td></tr></table></figure>
<p><code>key</code>值保持一致<code>text</code>，<code>value</code>对应该处文本的每种语言翻译。</p>
<h2 id="适应系统语言"><a href="#适应系统语言" class="headerlink" title="适应系统语言"></a>适应系统语言</h2><p>访问语言文件的宏定义</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#define NSLocalizedString(key, comment) \</div><div class="line">	    [NSBundle.mainBundle localizedStringForKey:(key) value:@&quot;&quot; table:nil]</div><div class="line">#define NSLocalizedStringFromTable(key, tbl, comment) \</div><div class="line">	    [NSBundle.mainBundle localizedStringForKey:(key) value:@&quot;&quot; table:(tbl)]</div><div class="line">#define NSLocalizedStringFromTableInBundle(key, tbl, bundle, comment) \</div><div class="line">	    [bundle localizedStringForKey:(key) value:@&quot;&quot; table:(tbl)]</div><div class="line">#define NSLocalizedStringWithDefaultValue(key, tbl, bundle, val, comment) \</div><div class="line">	    [bundle localizedStringForKey:(key) value:(val) table:(tbl)]</div></pre></td></tr></table></figure>
<p>使用<code>NSLocalizedStringFromTable(key, tbl, comment)</code>宏定义赋值显示多语言的控件，<code>key</code>是多语言文件里的<code>key</code>值，<code>tbl</code>是多语言文件名，<code>comment</code>是注释，可空填nil。使用方式如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">_label.text = NSLocalizedStringFromTable(@&quot;text&quot;, @&quot;File&quot;, nil);</div></pre></td></tr></table></figure>
<p>还可以使用宏<code>NSLocalizedString(key, comment)</code>，没有<code>tbl</code>文件名参数，这时工程里的多语言文件名必须为<code>Localizable</code>。</p>
<h2 id="手动设定语言"><a href="#手动设定语言" class="headerlink" title="手动设定语言"></a>手动设定语言</h2><p>语言文件在工程内是以<code>.lproj</code>格式存储的，比如简体中文是<code>zh-Hans.lproj</code>，繁体中文是<code>zh-Hant.lproj</code>，英文是<code>en.lproj</code>。</p>
<p>手动设定语言就是让工程访问哪个文件。要保留app的语言设置，下次打开app还是上次设置好的语言环境。语言设置属于偏好设置，一般用<code>NSUserDefaults</code>存储。</p>
<p>保存环境设置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">NSUserDefaults *userd = [NSUserDefaults standardUserDefaults];</div><div class="line">[userd setObject:@&quot;zh-Hans&quot; forKey:@&quot;appLanguage&quot;];//以简体中文为例</div><div class="line">[userd synchronize];</div></pre></td></tr></table></figure>
<p>设置语言环境：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">NSString *lanType =[NSString stringWithFormat:@&quot;%@&quot;, [[NSUserDefaults standardUserDefaults] objectForKey:@&quot;appLanguage&quot;]];</div><div class="line">NSString *path = [[NSBundle mainBundle] pathForResource:lanType ofType:@&quot;lproj&quot;];</div><div class="line">NSString *showValue = [[NSBundle bundleWithPath:path] localizedStringForKey:@&quot;showTxt&quot; value:nil table:@&quot;File&quot;];</div><div class="line">_label.text = showValue;</div></pre></td></tr></table></figure>
<h2 id="第一次打开app"><a href="#第一次打开app" class="headerlink" title="第一次打开app"></a>第一次打开app</h2><h3 id="手动设置默认语言"><a href="#手动设置默认语言" class="headerlink" title="手动设置默认语言"></a>手动设置默认语言</h3><p>第一次打开app，本地UserDefaults没有存储语言信息，这时可以代码存入一个，后续即可正常访问。</p>
<p>在<code>didFinishLaunchingWithOptions</code>里简单判断一下即可。如果没有，即存入简体中文</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">NSUserDefaults *userd = [NSUserDefaults standardUserDefaults];</div><div class="line">if (![userd objectForKey:@&quot;appLanguage&quot;]) &#123; </div><div class="line">     [userd setObject:@&quot;zh-Hans&quot; forKey:@&quot;appLanguage&quot;];</div><div class="line">     [userd synchronize];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="显示系统语言设置"><a href="#显示系统语言设置" class="headerlink" title="显示系统语言设置"></a>显示系统语言设置</h3><p>首先要获取系统环境的语言，然后与app支持的语言做比较，如果app支持的语言里有目前系统语言，则显示该语言，如果没有则显示默认语言。</p>
<p>获取系统环境语言：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">NSString *language = [[NSLocale preferredLanguages] objectAtIndex:0];</div></pre></td></tr></table></figure>
<p>具体实现：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">NSUserDefaults *userd = [NSUserDefaults standardUserDefaults];</div><div class="line">if (![userd objectForKey:@&quot;appLanguage&quot;]) &#123;//如果本地没有设置语言</div><div class="line">    NSString *language = [[NSLocale preferredLanguages] objectAtIndex:0];//获取系统语言环境</div><div class="line">    if ([language hasPrefix:@&quot;zh-Hans&quot;]) &#123;//简体中文</div><div class="line">        [userd setObject:@&quot;zh-Hans&quot; forKey:@&quot;appLanguage&quot;];//设置为简体中文</div><div class="line">    &#125; else if ([language hasPrefix:@&quot;zh-TW&quot;] || [language hasPrefix:@&quot;zh-HK&quot;] || [language hasPrefix:@&quot;zh-Hant&quot;]) &#123;//台湾繁体，香港繁体和繁体</div><div class="line">        [userd setObject:@&quot;zh-Hant&quot; forKey:@&quot;appLanguage&quot;];//设置为繁体</div><div class="line">    &#125; else if ([language hasPrefix:@&quot;en&quot;]) &#123;//英文</div><div class="line">        [userd setObject:@&quot;en&quot; forKey:@&quot;appLanguage&quot;];//设置为英文</div><div class="line">    &#125;else&#123;//没有支持的语言</div><div class="line">        [userd setObject:@&quot;zh-Hans&quot; forKey:@&quot;appLanguage&quot;];//设置为简体中文</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="多语言开发的坑"><a href="#多语言开发的坑" class="headerlink" title="多语言开发的坑"></a>多语言开发的坑</h2><p><code>LaunchScreen</code>不支持多语言开发，苹果建议不要对启动页进行多语言开发。在<code>LaunchScreen.strings</code>文件中更改不同语言环境下的字符串，并没有效果。</p>
<p>解决办法：删除这些没用的<code>LaunchScreen.strings</code>文件</p>
<p>每种语言添加一个<code>LaunchScreen.storyboard</code>。比如英文对应：<code>LaunchScreen_en.storyboard</code>，繁体中文对应<code>LaunchScreen_zhHant.storyboard</code>。</p>
<p>在<code>InfoPlish.strings</code>下面对应的语言文件中，分别添加如下字段：</p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">UILaunchStoryboardName</span> = <span class="string">"LaunchScreen_en"</span><span class="comment">;//英文文件下添加的</span></div></pre></td></tr></table></figure>
<p>其实这样做也有局限性，在首次安装启动时能选择正确的语言显示，手动更改手机语言环境，重新打开app则无法显示更改后的语言。—— 在模拟器上测试</p>
<h2 id="storyboard和xib多语言"><a href="#storyboard和xib多语言" class="headerlink" title="storyboard和xib多语言"></a>storyboard和xib多语言</h2><p><code>storyboard</code>和<code>xib</code>多语言只支持跟随系统，不支持手动切换。</p>
<p>选中<code>storyboard</code>或<code>xib</code>文件，在右侧面板的<code>Localization</code>中添加语言文件，语言文件会自动检测该<code>storyboard</code>或<code>xib</code>文件中哪些地方进行多语言化。并在文件中给出类似下面的内容，只需要在相应语言文件中修改<code>&quot;title&quot;</code>文本即可</p>
<figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/* <span class="keyword">Class</span> = <span class="string">"NSMenuItem"</span>; title = <span class="string">"Item 1"</span>; ObjectID = <span class="string">"sxW-84-y91"</span>; */</div><div class="line"><span class="string">"sxW-84-y91.title"</span> = <span class="string">"title"</span>;</div></pre></td></tr></table></figure>
<p><code>storyboard</code>和<code>xib</code>的多语言化是根据<code>ObjectID</code>来区分的。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/2017-12-05-11-49-56.png" alt="ObjectID"></p>
<h3 id="国际化自动脚本"><a href="#国际化自动脚本" class="headerlink" title="国际化自动脚本"></a>国际化自动脚本</h3><p>有一个很大的问题是多语言文本不能实时更新，当你新拖入一个控件，多语言文件中并不会更新该控件的<code>ObjectID</code>。添加脚本，实现编译工程多语言文件实时更新。</p>
<ol>
<li><p>Xcode中添加脚本，脚本地址和添加脚本的方法：<a href="https://github.com/onezens/AutoLocalization" target="_blank" rel="external">AutoLocalization</a></p>
</li>
<li><p>终端运行脚本，首先更改脚本文件中的<code>filePath</code></p>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#如果在终端运行，注意要修改自己需要国际化的项目文件夹的路径！</span></div><div class="line">filePath = <span class="string">'/Users/inspiry/Desktop/work/workCode/XDProject/mremind/mremind'</span></div></pre></td></tr></table></figure>
<p>然后在终端中执行Python文件</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">python</span> AutoGenStrings.<span class="keyword">py</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;旧文新录，好多主流app都支持多语言(或者叫本地化/国际化)，有的是自动适应系统语言，有的是用户选择修改。比如微信支持如下语言，可以根据系统自适应，也可以用户更改。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://markmiao.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://markmiao.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>十一长假旅行记</title>
    <link href="http://markmiao.com/2017/11/26/sycjlxj/"/>
    <id>http://markmiao.com/2017/11/26/sycjlxj/</id>
    <published>2017-11-26T07:09:52.000Z</published>
    <updated>2018-12-24T08:01:32.358Z</updated>
    
    <content type="html"><![CDATA[<p>这是我迄今为止写的最长的一篇游记，详细记录了我们这次旅行的所有事情。为的是我们老的那一天，可以拿出来自己回忆，或者给孩子们讲讲我们年轻时的故事。开篇之前，感谢晓带我去了那么多地方，也感谢你一直陪着我，我们一起面对了那么多事。以后，你负责带我玩，我负责记录玩的故事。</p>
<p>开始吧，一万五千多字呢！加油，读到结尾。</p>
<a id="more"></a>
<h2 id="出发之前"><a href="#出发之前" class="headerlink" title="出发之前"></a>出发之前</h2><p>今年国庆和中秋在一起，十一长假比往年多了一天。晓没有假期，但玩心可比我这有假期的大多了。不安分的小心思又开始蠢蠢欲动：“咱们放假去哪玩？”我说：“你十一有假？”“我可以换班。”“……”</p>
<p>在决定去三亚之后，我没拖延便订了往返机票。10月06日-10月9日4天3晚，三亚畅快浪一圈。晓纠结了好几天，最后在大东海附近，订了一家依山傍海、自带泳池的酒店。看来这次挥霍是要可劲儿地往腐败里造了。</p>
<p>在出发前一周的时候，我贱嗖嗖的看了一眼某程上的机票，这一看不要紧，直接导致了珠海之行。</p>
<p>我发现返程机票比预定的便宜了近2000块钱，谁能了解一个资深的、抠搜的穷逼，此刻的心情？我急急忙忙向晓汇报了这个重大发现，她估计是忙，让我自己思量着办。</p>
<p>我有一个大胆的想法：“退了重买！”退票需要花700多的退票费。我看过改签，改签花的更多不合适。思前想后，退了重买还能省1000多！赚大了啊！按耐不住激动心情的同时，我仍不失谨慎地仔细核对了航班的起飞时间、地点，反复刷新了几次，确实是5折低价机票。</p>
<p>机不可失，时不再来，不再犹豫地点了退票……然后，然后就掉坑里了。</p>
<p>当时为什么不去某猪上看一下此次航班的票价呢？为什么不让晓核实一下？为什么不先买后退呢？事后的这些扪心自问还有什么用？最应该自问的是：已经订完了，为什么还要去看机票？贱不贱！</p>
<p>后续情节：我退了票，再去看的时候，5折低价已经不见了，取而代之的是8折，比我买的时候更贵了！“这可怎么办？”刹那间，如坠冰窟，脑袋嗡嗡的，有种凉飕飕的憋屈感。太坑了！紧接着我意识到一个更恐怖的问题——怎么跟晓交代？</p>
<p>晓没有怪我，我也该长记性：买完的东西，别贱嗖嗖的再去看价格！以后的几天，各种比价机票，加降价提醒。结果很明显，5折低价再也没出现。后来打算在珠海转机回京，这样相对便宜。我说：“都这样了，索性去珠海玩一天。你想去哪玩？”“长隆！”晓脱口而出，地铁上滚动播出的广告还是有效果的。于是在某猪（对某程怀恨在心）分别订了三亚到珠海，珠海到北京的机票。</p>
<p>事后我猜，某程是不是有诱导退票的嫌疑？对已购航班显示大折扣低价，诱导退票重买，赚取退票费。当退完之后，低价立马回升。对于某程，使这么阴暗的手段不是没可能。或者换个高大上的说法：对于已购航班，某程鼓励低价增加乘机人，让利用户。我不知道是哪种，也没研究过。但确实是退票之前存在低价机票，退票之后折扣就变了。</p>
<h2 id="启程"><a href="#启程" class="headerlink" title="启程"></a>启程</h2><p>10月6日早7:25的飞机。晓从单位出发，我从家里带着行李出发。我原本计划坐地铁，起得有点晚，安检测出行李箱中有喷雾，开箱检查，因此又错过了一班地铁，下一班地铁到了已经5点半了。我算了一下：再坐一个半小时地铁，7点多，飞机舱门都关了。我当机立断：出地铁，打车去！早干嘛去了？</p>
<p>晓从单位出发稍微近点，我走的早一些，比她早到了几分钟。打印登机牌，办理行李托运，飞机准时起飞，除了没来得及吃早餐，一切完美。</p>
<p>11:35到三亚凤凰机场，下飞机的时候正在下雨。从我们准备去三亚，我就一直关注天气，我们玩的这几天，天气预报一直显示下雨。比起机票，我更纠结的是三亚的天气。可万万没想到的是：最坑我们的不是三亚的雨，而是北京的一场雨。</p>
<p>从机场坐出租车到酒店，一路上都在下雨。我们的心情也随着这场雨越来越低落，看看这阴雨连绵的天，难道要在酒店度假了？</p>
<p>到酒店已经12点多了。虽然在飞机上吃了点，但这时也饿的前心贴后背了。在网上搜到一家“鹿港海鲜店”，步行1公里，中间要乘坐轮渡。抱着对乘船的向往去了渡口。渡口空无一人，有点废弃的样子，我看了一下地图，这里是“三亚河”和“临春河”的入海口，到对岸也就20米的距离，没有桥，只有轮渡2元一位。等了几分钟丝毫没有船过来的意思，我去旁边店铺问店主，船什么时候会来。店主不耐烦的嘟嘟囔囔的说了一大堆，我大概听懂的意思是：“人够了才有船，俩人都不够油钱……”得了，打车吧。</p>
<p>打车绕了一大圈，终于到了所谓的“鹿港海鲜店”。我俩下车，四处张望，一片破败萧条，到处都是拆了一半的房子。海鲜店不会被拆了吧？我们在电线杆上发现“鹿港海鲜店”的牌子，下面一个箭头指向小巷深处。我俩战战兢兢地走进小巷，一排低矮的门房像是后厨，这什么玩意？网上的五星好评和光鲜亮丽的海鲜餐厅去哪了？我俩四目相对，从对方的眼神中都能看到饥饿如火。</p>
<p>好在附近有一个“三亚国际购物中心”，这里应该有吃的。在购物中心里找到一家“匠子烤鱼”，美美的吃了一顿带汤的烤鱼。汤不是烤鱼的汤汁，是差点没过鱼的汤水，这煮烤兼备的做法还是第一次见，更突兀的是上面立着的两根麻花，我咬了一口，硌牙。值得称赞的是鱼很嫩，很鲜，味道很好。这是抵达三亚的第一餐。</p>
<h2 id="三亚湾"><a href="#三亚湾" class="headerlink" title="三亚湾"></a>三亚湾</h2><p>在我的计划里，今天下午要去：鹿回头、大东海、三亚湾、椰梦长廊、天涯海角。吃完饭，逛了一会儿，还是一直下雨，然后决定回酒店睡觉，计划不如变化快嘛。雨天睡觉是最惬意的，这一觉睡到晚上七点多，雨已经停了。走吧，去体验三亚的夜生活，我们去了三亚湾。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/WechatIMG156.jpeg" alt="酒店夜景"></p>
<p>这个夜晚终于有了度假的样子：品尝海鲜大排档，欣赏海南广场舞，参加海滩大捕鱼，对了，还吃了个特别甜的大芒果。</p>
<p>晓说来三亚必须要吃一次海鲜大排档，在玻璃柜里有供人选择的各式各样的活海鲜，现场称重，现场做。我们要了一只大螃蟹、一盘大虾，一盘扇贝、一个椰子，海鲜并没有想象中的那么好吃，但是很新鲜。打车的时候，司机师傅告诉我们：“三亚是个旅游消费城市，现在没有宰客现象，都是明码标价的贵。”在这里想要实惠？不存在的。游客的尝鲜心理才是卖点，贵不贵、好不好吃另说，不尝一口总有些遗憾，卖的就是这个体验。</p>
<p>吃完海鲜，满嘴的腥气油腻。晓买了一个大芒果，我觉得以前的芒果都白吃的，这才是芒果该有的味道。吃着芒果向海边走去，远远便听到有音乐声。原来是一群中年男人围着一个音响在跳舞，一个个的上下扭动着身子，像被音乐控制了的印度蛇一样，那妖娆的身段，真骚。我说：“这广场舞跟咱们那果然不是同一个舞种。”</p>
<p>海边的夜景很美，霓虹璀璨，映照海面。一浪一浪的海水冲刷着海滩，还有一些人在海里游泳。远处的高楼大厦灯光闪烁，组成了各种图案。为了腾出手拍照，我三下五除二把最后一块带核的芒果肉吃完，吃的这个爽，我觉得比刚才的大螃蟹好吃。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01042.JPG" alt="大东海夜景"></p>
<p>沿着海边走了一段，发现有人在从海里往海滩上拽绳子，游客也帮着拽。渐渐地海里的网露出来了，有人在捕鱼。这是一张很长的网，呈扇形埋在海里，两头两拨人在往上拽。拽的人大部分都是游客，看来捕鱼的人也是为了玩。好多人聚拢过来，网里出现一只螃蟹，一条鱼都会引发阵阵惊叫。晓对这个兴趣颇大，拿着手机帮忙照明，晓一发现有海鲜，就急忙招呼我：“那、那、那……照相、照相、拍视频啊！”我手忙脚乱的摆弄着相机和手机，差点把手机掉海里。网被拉上来了，这一网没有多少海鲜，几只到处跑的螃蟹，几条带鱼，其中一条比较惨，拦腰折了，还有一些小鱼小虾。</p>
<p>我们沿着海岸线走了很长一段，玩到尽兴，9点多才回酒店。</p>
<h2 id="国际免税城"><a href="#国际免税城" class="headerlink" title="国际免税城"></a>国际免税城</h2><p>第二天的计划是蜈支洲岛和三亚国际免税城。我们住在鹿回头，离蜈支洲岛有一个多小时的车程。酒店有到免税城的免费巴士，我们坐巴士到免税城，逛完之后再去蜈支洲岛。这是今天的行程安排。</p>
<p>早上7点多起床，外面阳光明媚，下着瓢泼大雨，没错，晴天下大雨。没一会儿雨就停了，天空中挂起了两道彩虹，好似从海面升起，跨在绿树葱葱的山上。蜈支洲岛和免税城是三亚之旅的重头戏，清晨的雨后彩虹让我们心情大好，酒店供应的早餐让我们吃的十分满足。多么完美的早晨，让我们对即将到来的购物和游玩充满了期待。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01093.JPG" alt="雨后双彩虹"></p>
<p>9点免费巴士准时到了酒店，我们乘坐巴士向三亚国际免税城出发。在车上，有一位小哥给我们详细讲述了免税城的购物限制、购物方式、提货方式、商品分布等等。只有凭返程航班才能在免税店购物，称为“离岛免税”。每个人都有额度限制，可以现场提货或者机场提货。免税城分AB区，A区几乎全都是女士化妆品，B区有手表、衣服、进口食品等。在这里，你能买到超贵的，但又比其他地方便宜。这种诱惑让三亚国际免税城成为游客必到之处，不来挥霍一点，都不好意思说你来过三亚。</p>
<p>1小时10分钟，到了三亚国际免税城。首先进去的是B区，然后就直接穿过，去了A区。毕竟A区的商品才是晓关心的，我只负责拎包，其他的说了也不算，唉……只能在游记里吐槽一下怨念了。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01099.JPG" alt="三亚国际免税城"></p>
<p>偌大一个A区，全都是女士化妆品，什么迪奥、香奈儿、雅诗兰黛应有尽有，晓两眼放光，看的眼花缭乱，毕竟年轻呐，low相毕露。相反我就比较沉稳，因为我一个牌子都不认识。晓边逛边说：“这个好便宜啊，在外面多少钱多少钱……这个这么便宜！我之前买的多少钱多少钱……哇，还有这个呢……这个我喜欢，这个我也想要……”我没看出哪便宜，价格没有低于三位数的。跟着晓欢快的步子，我迈着重重的步伐，像个思考人生的木偶：我是谁？我在哪里？我在干什么？我身上怎么有个这么重的包？</p>
<p>对于晓来说，逛街总是愉快的。对于我来说，逛街总是饿得快。两个小时过去了，A区全逛了一遍，晓并没有买多少东西，但依旧很开心。我也很开心，因为终于逛完了，该吃饭了。在B区二层点了一份海南鸡饭，一份排骨饭。海南鸡饭号称海南美食，我怎么觉得还没有酒店供应的早餐好吃呢。</p>
<p>吃完饭都12点多了，晓说：“走，陪你在B区逛逛？”我说：“不逛了，咱们赶紧去蜈支洲岛吧，都12点多了。”“真不逛了？什么也没给你买，心里能平衡？”这阴阳怪气的语气，我说：“切，我是那种人吗？我都看了，这里没电子产品，没有我感兴趣的。劳力士，江诗丹顿我也买不起。”“嗯……不仅买不起，你也没那范儿。”“……”</p>
<p>晓买的化妆品全部由免税城打包寄往机场，我们走的时候从机场取货就可以了，购物游玩两不误，花了钱服务就是好。我们在B区溜达了一圈，然后打车去蜈支洲岛。</p>
<h2 id="蜈支洲岛"><a href="#蜈支洲岛" class="headerlink" title="蜈支洲岛"></a>蜈支洲岛</h2><p>蜈支洲岛在三亚海棠湾，远离陆地，是海上的一座小岛，号称“中国的马尔代夫”。</p>
<p>我们1点半抵达蜈支洲岛售票处，天已经下起了毛毛细雨。上岛需要乘坐游轮，我们取了票，去乘船码头。可能是因为天气或已经下午的原因，人并不是很多。登上游轮，工作人员喊话：“有晕船的坐后面啊。”记忆中我好像没晕过船，当然我也没坐过几次船，最近一次还是和晓在香港维多利亚港坐天星小轮。除此之外，就是小时候坐人工撑的小木船渡河去姥姥家。</p>
<p>游轮挺大的，只是有些破旧。我们找了个靠窗的位置坐下，看着窗外毛毛细雨慢慢变大，起伏的海水上布满了雨点，大海像长了麻子一样。望向远处的蜈支洲岛，岛上弥漫着厚厚的乌云，我有一种不详的预感。晓完全没有半点不安，随着游轮起伏，坐在位子上开心的像个傻子——不对——孩子，还问我：“激动不？”</p>
<p>船开了，今天的风浪很大，船十分颠簸。离陆地越远，颠簸的越厉害，我有种坐过山车的感觉。船上的游客都十分激动，随着起伏发出阵阵惊呼，我也激动的有些“上涌”。终于有人支持不住了“呕……哇……哇……”，幸运的是我们没看见，只听见工作人员喊道：“唉呀，去后面，晕船的坐后面。大家都抓好了，今天浪比较大。”我好像明白了，刚才走过来的时候，为什么有的地方有些粘脚了。想到这，“上涌”的劲儿更大了。</p>
<p>游轮行驶了半个多小时，终于到了蜈支洲岛。这时雨已经停了，空中的云依旧有种随时下雨的气势，我都有祷告的冲动了：云爷，高抬贵手，先别下雨，让我们玩半天吧，然而并没有什么卵用。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01130.JPG" alt="蜈支洲岛的海滩"></p>
<p>上岛的第一印象是：没有照片中那么漂亮（好像所有景点都是这样）。人也没有想象的那么多，海滩上都没有下饺子的感觉，更别提比基尼美女了，穿泳衣的都很少。蜈支洲岛的美有一半是由阳光映照出来的吧，现在阳光被乌云遮住了，马尔代夫变成了荒山野岛。</p>
<p>虽然没有阳光，但海岸毕竟还是蜈支洲岛的海岸，盛名之下，其实——还是挺令人激动的。我们在海滩上溜达了一会儿，穿泳衣的虽不多，但也有。我俩有些按耐不住了，来蜈支洲岛游海泳，是我俩盘算好久了的。事后发现，我们既高估了自己的泳技，又低估了海浪的大小。以为在泳池面对人工浪能来去自如，在大海里就能劈波斩浪了。还是太年轻了。</p>
<p>我们找了个可以冲澡换泳衣和寄存衣服的地方，换完泳衣发现这边的海边不让游泳，我们穿着泳衣往让游泳的海水浴场走去。我这四百度近视看啥都模糊，为了游泳把眼镜也一块寄存了，只能戴着有点度数的泳镜还能看清楚点，跟个奥特曼似的。到海水浴场挺远的，模糊的视线导致我对这段的记忆都有些模糊。</p>
<p>终于到了海水浴场，浪挺大的，好多人都带着游泳圈。我俩对视了一眼，想了想只会狗刨的我和只会乱扑腾的晓，不由得有些打怵。走这么远过来，水都不下，都对不起我这亮相了一路的奥特曼造型。后来发现，这种不甘心，呛一口水就治好了。</p>
<p>我俩战战兢兢的下了水，哎呦……哎呦呦……呦呦呦……海水可凉可凉了。我俩都是第一次游海泳，小浪头一浪一浪的，晃晃悠悠倒是能站住。“这和在泳池里也差不多嘛，我先游为敬……”我边说边往里游，晓也大着胆子在浅水区游了两下。一个浪头迎面盖过来，我急忙往上扑通，“卧次——咕噜——奥——”，真咸、真苦、真涩，这口海水虽然没咽进去，但也漱口了。终于切身体会到了为什么海水不能喝，这根本咽不下去好不好。</p>
<p>晓看我被浪拍了，急忙问我：“呛到了吗？”我说：“没有，漱口了。”“什么味？”“你舔一下嘴唇。”“哦？呸——”看来是尝到了，不尝一口海水怎么能算游过海泳呢。</p>
<p>这边海水浴场走几步就到深水区，我试了一下能没过头顶。今天的风浪确实挺大，我俩游了一会儿，各呛了一口水。呛水的感觉比淡水中刺激多了，鼻腔刺挠，喉咙噎得慌，喘不动气，阵阵反胃，眼泪都能呛出来了。我咳了半天，口水都吐干了，才缓过来。我说：“上岸吧，不游了。”晓十分赞同，一口水呛掉了我俩对海泳的所有向往。</p>
<p>上岸往回走，又开始下雨了，下的并不大，我俩一身泳衣也用不着躲雨，没下两分钟又停了。路过用枯树枝摆成的HAPPY、KISS、LOVE的海滩，也并没有图片上那么有意境，但还是好多人在照相。我们让一对情侣帮忙拍了张合影，我一看，“我的肚子这么大了吗？”晓给了我一个白眼：“你以为呢。”后来说给我P一下再发朋友圈，原来只是拿个图给我盖住。</p>
<p>回去换回衣服，算是告别海泳了。蜈支洲岛有好多海上娱乐项目，比如潜水、摩托艇、电动船、水上自行车等，现在的天气和海浪根本不适合玩这些项目。剩下的时间就是领略蜈支洲岛的美丽景色，虽然没有想象中的那么惬意，但也美景怡人，偶尔的小阵雨不仅不扫兴，还增加了些小情调呢。后来发现，还是高兴的太早了。</p>
<p>冯小刚的电影《私人订制》里有个漂亮的泳游池，碧蓝的泳池、绿色的草坪、挺拔的椰子树、巨大茶壶状的藤编房子，旁边当然还立着那个电影里出现的“私人订制”的大牌子。我们在“茶壶”里的藤椅上坐了一会儿，这漂亮到有点小资情调的景致真让人有点不想走。美中不足的是不让进泳池游泳，立了个正在维修的牌子。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01147.JPG" alt="私人订制里的泳池"></p>
<p>我们沿着小路溜达着，走一会儿就会有一片海滩，海滩上都会有一些巨大的石头，有些石头像是沙滩里凸起的一座小山丘，有些则层层靠在一起，还有些半身没在海里，被海浪拍打着。拍照自然是必备任务，我贱嗖嗖的站在了一块被海浪反复冲刷的岩石上，照还没拍完，一个浪差点打湿我半条短裤。</p>
<p>有个叫情人岛的地方，传说龙王被一对秀恩爱的情侣塞狗粮了，一怒之下将情侣变成了两座大山石——去你的海枯石烂吧。这里有一大片珊瑚石，各式各样的。这些珊瑚石上面都是密密麻麻的小窟窿，看着有点起鸡皮疙瘩，但还是捡了两块带回来了。</p>
<p>沿着海岸线到了观海长廊，观海长廊是沿着海岸，在礁石上修建的木质走廊。海面上的云压得很低，海风也变大了，远处开始打雷了，好几次看到乌云中一道闪电直击海面。只可惜没能拍下来，不能将雷神电鱼的劳动场景保留下来，很遗憾。感觉海风越来越大了，观海长廊的下面海浪击打着礁石，发出阵阵轰鸣声。山雨欲来风满楼啊。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01197.JPG" alt="要下雨了"></p>
<p>时间不早了，我们没再多待，坐上回程摆渡车，回到我们寄存衣物，也就是靠近进出岛屿的地方。刚到地方就开始下雨了，不是那种不扫兴的小阵雨了，是桶浇般的大暴雨啊，比瓢泼还猛。我俩买了点吃的，躲避在一个餐桌的太阳伞下。眼前都下白了，像发怒的龙王用海水冲刷蜈支洲岛一般，大雨滂沱啊。</p>
<p>过了好一会儿雨才渐渐变小，我将寄存的包取回来，已经5点多了，该离岛了。码头上，离岛的人早就浩浩荡荡地排起了长队，没办法，排队吧。</p>
<p>进岛时不详的预感应验了，终究没躲过这场大雨。排着队，大雨一阵阵袭来，你能体会到一群撑着伞的人挤在一起时的感觉吗？说不定谁的伞角就抵在我的后脖颈子上了，雨水顺流而下，凉飕飕地一激灵，偶尔的炸雷让人群更骚乱，晓比小孩还害怕打雷，滋儿哇乱叫的。还有带孩子来的，大人将雨伞盖在婴儿车上，但是雨太大，只能遮挡孩子上半身不被雨淋，腿都湿了，可怜的娃。</p>
<p>晓抱怨说：“为什么每次都能遇上下大雨，去香港迪士尼遇上台风大雨，来蜈支洲岛又遇上大雨。”我说：“龙行雨，虎行风。说明我是真龙天子。”“嗯，这个牛逼吹的稳，淋死你都不冤枉。”</p>
<p>足足排了半个小时的队，终于上船了，几乎浑身湿透。回程的游轮底部中间凹两边吃水，稳当多了，没有呕吐事件发生。上岸后便没有雨了，好像只有蜈支洲岛那边在下雨。我的祷告没用，云爷还是欺负了我们。</p>
<p>晚上在“大菠萝”（大东海国际购物中心）对面的一个小吃街吃的饭，干炒牛河、蛏子、烤鱿鱼、扇贝，味道挺好的，虽然不是很贵，但也谈不到实惠。吃完饭去“大菠萝”买了一大堆吃的，还买了个椰子冻。对于爱吃甜品和果冻的我来说，椰子冻真是特别好吃，乳白色果冻状，吃一勺满嘴椰香，回味无穷。晓对此就没啥兴趣，她不爱吃甜食，吃了一勺就没再吃。所以便宜了我，她如果爱吃，我也就能吃一勺。</p>
<h2 id="森林公园"><a href="#森林公园" class="headerlink" title="森林公园"></a>森林公园</h2><p>转眼到第三天，也是我们在三亚的最后一天，明天就要去珠海长隆了。今天的天气很好，蔚蓝的天空，洁白的云，今天的行程安排是“亚龙湾热带天堂森林公园”。最后一天了，不想那么赶，在酒店吃了早餐，10点多到了森林公园。</p>
<p>出发前在网上订的门票，森林公园的门票要提前1小时预订，不知道为什么会有这个规定。我取票的时候，售票员告诉我还差6分钟。等了一会儿，取完票，开始了“亚龙湾热带天堂森林公园”的旅程。</p>
<p>由于今天是十一假期的最后一天，游玩的人不多。门票是包含游览车的，因为公园很大，山路陡峭崎岖，单靠俩腿可走不完。就像九寨沟一样，游玩的景点错落分布在山上，逛完一个景点，直接坐游览车去下一个景点。游览车的司机技术超牛，两辆车宽的山路七扭八拐地，有些地方斜坡近45度了，一边是悬崖，一边是高山，坐上面跟坐过山车一样。我们还发现，当两车相遇的时候，下山的车会主动停下来，让上山的车先过，是因为上山的车停下来很难再起步吧，如果溜车的话会很危险。</p>
<p>森林公园植被繁茂，在里面感觉特别闷热潮湿，而且还有蚊子。晓抱怨为什么没把驱蚊液带上，昨天去蜈支洲岛也忘记带了。</p>
<p>第一站是”兰花谷“，可能由于刚下过雨，一座石板浮桥已经被水没过了，溪水潺潺，只能脱鞋趟水。浮桥上游是一个莲花池，池子里并没有多少荷叶莲花，旁边有一排吐水的动物石雕，但个别的已经吐不出水了。对面有个凉亭，凉亭旁的池子里还有个骑水牛、吹笛子的牧童石雕。这算是一个陈旧的中国风公园景观。比起这些，感觉周围的茂密的热带丛林更有吸引力。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01241.JPG" alt="莲花池"></p>
<p>往前走一段，是一片茂密的竹林。竹子都有大碗口那么粗，中间是并排的大石条延伸进去的小路。导游说这里还没完全开发，建议不要进去，以免迷路。这个比刚才的公园吸引人多了，我俩顺着这曲径通幽的小路往里走了一段，发现这条小路能延伸到很远。我们没再往深了探索，怕走丢了。</p>
<p>森林公园有个“飞跃雨林”的项目，有4段滑索和一些过关项目。我订的只是门票，并不包含这些娱乐项目。我俩觉得只看景色过于平淡，和我们年轻人的青春活力有些不符（我还没开始保温杯泡枸杞呢，还年轻），不安分的玩心又开始蠢蠢欲动了。在导游的撺掇下，买了“飞跃雨林”的票。建议去玩的朋友提前在网上订通票，会便宜些。</p>
<p>“飞跃雨林”的起始点是山顶，导游说玩这个会有照片赠送，后来才发现，原来是今天所有游玩的人都加入一个微信群，所有照片发到群里，自己找去吧。当晚，从几百人的群里翻找几千张照片，终于从中找出十几张我们的。为了玩“飞跃雨林”，中间索桥的景点都没过去，打算下山时再去看看。我们到了山顶，把包寄存起来，在身上绑上那些绳绳套套的，戴上头盔，像给大厦擦玻璃的蜘蛛人。然后就签了一张“生死状”，慷慨赴玩！</p>
<p>有漫步人生、速度与激情、飞跃龙门、步步惊心、空中飞度、荆棘人生、太极梅花桩、空中单骑、极限挑战、翻山越岭、地动山摇、时空穿越等十二个丛林拓展体验项目。这么唬人的名字我哪记得住，是从网上抄的。其实就是一些攀爬过障碍的体验，过横梯、踩木板、踩钢索、过栅栏、蹬自行车、滑索道……恩，还是这些接地气的名字比较符合实际。安全措施挺完善的，下面有安全网，上面有安全绳，有部分项目需要体力。结束后，晓直呼胳膊都酸了。其实还是蛮刺激的，特别是乘坐索道，飞过丛林时的速度体验，这就是心跳的感觉吧？头顶上滑轮的刺啦声真令人不安。</p>
<p>结束”飞跃雨林“的体验，直接乘坐游览车返回山顶。山顶有云顶咖啡体验，有炭烧咖啡、椰奶咖啡、白咖啡，还有个咸味的海盐咖啡，说在外面喝不到的。我也没喝出那种高端人士的范儿，感觉不如给我来一碗薏米红豆粥。晓老嫌弃我喝这种益气补血的养生粥，我是不是真的老了？</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01307.JPG" alt="山顶"></p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01332.JPG" alt="龙行天下广场"></p>
<p>山顶视野非常好，极目望去，海天一色，景色美不胜收。左边矗立着南海第一楼——沧海楼，右边是龙行天下广场，紫铜浇筑的巨大龙雕，俯瞰天下第一湾——亚龙湾。烟波浩渺，凭海临风，意气风发，胸怀天下。此刻的我们不禁感觉到——有点渴，走，去买两个小菠萝。</p>
<p>小菠萝挺甜的，买的时候旁边的游客问店家：“菠萝是这山上摘得不？”我一愣，咋这么天真呢？店家明显没顾忌到游客的天真无邪，耿直地说：“山上哪有菠萝，都是果园里的。”听得我们直想乐。吃着小菠萝逛一逛山顶的小店，有卖手鼓的，我们体验了一把，完全敲不到点上。还有一个卖字画的，大叔一笔写名字，还可以写反字，在镜子里看才是正过来的，感觉好厉害。</p>
<p>山顶还有《非诚勿扰2》的试婚房，能一览错落分布的鸟巢度假村。下山的时候去了“千里伞”，是在巨石上搭建的圆形平台，上有一个伞盖，站在平台上可以看到下面的“峭壁天池”，都是《非诚勿扰2》的主要拍摄地。最终还是没去索桥，上山爬高走的实在是太累了。</p>
<p>下午2点多离开了“亚龙湾热带天堂森林公园”，午饭又是在大菠萝对面小吃街解决的。晚上六点多去了大东海，我发现海泳如果不呛水也挺好。</p>
<h2 id="大东海"><a href="#大东海" class="headerlink" title="大东海"></a>大东海</h2><p>明天早上就要走了，今晚计划去大东海逛一逛，吃个晚饭，休闲一下。我们根本没打算游泳，毕竟在蜈支洲岛游泳呛水的感觉还记忆犹新。所以也没带泳衣，穿个拖鞋，背个包就出来了。</p>
<p>大东海海水浴场里人挺多的，大人小孩好多都在游泳。晓看出来我也想下水游泳，说：“给你买个泳裤，下去游会吧。”我十分扭捏地说：“不了吧，咱们逛逛算了，不游泳了。”晓说：“去吧，一看你就想游。”泳裤60块钱一条，顿时感觉太贵不值得，加上之前游泳呛水，晓又不和我一起下水，我也没有太大的游泳欲望了。晓一直催促我：“去游吧，最后一下午了，明天咱就走了，想游都没的游了。”纠结了半天，最后——穿短裤直接下水了，穷人最后的倔强。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01412.JPG" alt="大东海"></p>
<p>大东海的海水浴场有很长很长的浅滩区，我往里游了很远，水还是只没过腰部。今晚的浪很小，这种小幅度的起伏，我的狗刨完全应付得了。为了看的清楚，全程眼镜也没摘，也没有呛水，游了大概十多分钟。忽然觉得这才是我们梦想中的海泳，在蜈支洲岛时风大浪大，真不适合游泳。</p>
<p>海滩上摆放着供游客休息的躺椅，我们躺在上面，静静地听着海风卷起一股股海浪，海浪哗啦哗啦冲刷着海滩，夕阳的余晖洒在海面，波光荡漾，一切都是那么的静谧幽美，这才是享受生活嘛。此刻我内心深处只有一个想法——我的短裤什么时候能干？</p>
<p>夕阳终于消失在海平面，天慢慢黑了，灯慢慢亮了，海滩上各式各样的餐馆早就如火如荼的开始营业。我们点了两杯“超级芒果冰”，几串鱿鱼、海螺、扇贝、土豆片等烤串，开始慢慢品尝在三亚的最后一顿晚餐。还遇到一只躺在地上懒萌懒萌的小柯基，一个玩直播搭讪妹子的东北大哥。</p>
<p>在大东海吃完晚餐，回到酒店。我们到三亚三天了，还一直没去酒店的泳池游泳。最后一晚了，本着不能留遗憾的态度，去泳池游了个畅快。泳池有浅水区、深水区，还有专门供孩子游泳的小泳池。晚上有点凉，但在泳池里感觉不到凉。游泳的人还挺多，泳池对面有个大屏幕，放着英叔的僵尸片。我们租了一个游泳圈，游累了坐在游泳圈里歇一会儿。我们也算游了N多次泳了，晓一直没学会潜泳，说潜不下去，往水底钻，扒拉两下就漂上来了。人都是漂不上来，你这潜不下去。</p>
<h2 id="珠海"><a href="#珠海" class="headerlink" title="珠海"></a>珠海</h2><p>10月9日，我们十一之旅的最后一天，也是行程最赶、玩的最爽、囧事最多的一天，总的来说是这次旅程中最精彩的一天。</p>
<p>8:10从三亚凤凰机场飞往珠海金湾机场。我们5:30从酒店出发，走的时候三亚还下着小雨，约的送机服务是位女司机，一辆小车开的四平八稳。6:40到机场，过安检，打印登机牌，托运行李，去cdf(三亚国际免税城提货点)取在免税城买的东西，在汉堡王买了俩汉堡，然后就开始检票登机了。</p>
<p>8点刚过，飞机就急匆匆地起飞了，也就是说这趟航班提前起飞了。着急到什么程度呢，空姐刚说完安全须知，行李架都没检查一遍就起飞了，导致起飞的时候一个行李架的盖子开了，幸运的是没有行李跌落。这么着急起飞一直令我惴惴不安，我胡思乱想：不会有人劫机，逼机长提前起飞吧？这些乱七八糟的想法也一直没告诉晓。</p>
<p>9:20飞机平稳降落在珠海金湾机场，我提起的心也彻底落地了。原来这趟航班大多数乘客都转机，估计是这个原因才提前起飞的。</p>
<p>从金湾机场到“珠海长隆海洋王国”有一个小时的车程，我们计划将行李箱寄存在机场，打车去长隆。晓去了洗手间，我发现机场有好多巴士站，便问了一下。果然有直达长隆海洋王国的巴士，给晓发了个微信就买了最近的一班，买完后发现9:45发车，还有5分钟。这一早上，飞机这么着急，巴士也这么着急。</p>
<p>我急忙给晓发微信催她快点，晓出来就给我一顿乱批：“催什么催，你怎么不跟我商量就订了，也不提前问问几点发车，你行李寄存了吗？”我忽然发现手里还拉着个大行李箱，忘了寄存行李了。急忙去旁边的行李寄存处，他们说大件行李得去楼上寄存，坑我啊。门口有人喊：“去长隆的两位，抓紧检票，发车了。”我晕……</p>
<p>最终还是拎着大行李箱上了巴士，晓一路上都在生我的气。巴士上播放小品，我看小品都憋着不敢笑。车到站了，晓也终于消气了，这煎熬的一路……</p>
<p>车停在“长隆海洋王国”旁边的横琴湾酒店，到景区有几百米的距离。不在酒店住也没法将行李寄存在酒店，幸运的是景区内有行李寄存，只不过是付费的。每半小时就有一班到金湾机场的巴士，下午逛完“海洋王国”坐巴士直接到机场，19:20乘坐从金湾机场到北京首都机场的飞机，22:30抵达北京首都机场，0点之前能到家睡觉。这计划是多么的完美，岂不知计划有多么完美，变化就有多么残忍。</p>
<h2 id="海洋王国"><a href="#海洋王国" class="headerlink" title="海洋王国"></a>海洋王国</h2><p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01442.JPG" alt="长隆海洋王国"><br><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01453.JPG" alt="长隆海洋王国"></p>
<p>“长隆海洋王国”的景观用一个字形容就是：大！各种巨大的海洋动物建筑，让你感觉像是真的走进海底，进入一个陆地上不存在的“海洋王国”。景区入口上面就趴着一只巨大的“蓝色鳐鱼”，从“鳐鱼”下面穿过就到了景区内。“鳐鱼”腹部是一个巨大的弧形显示屏，上面播放着海洋奇观。北京世贸天阶的天幕号称世界第一，但我感觉远没有这个漂亮、震撼。从踏入景区的一刹那开始，我俩心情就变得格外舒畅，路上的不愉快早已忘得一干二净，剩下的就是一个字——玩，痛痛快快地玩。</p>
<p>进门左转，第一站“海象山”。名副其实真的是山，石头垒成的两只巨大海象，足有几十米高，如同两座对立的山峰，中间是倾斜的滑道直达水面，是一个叫“超级激流”的水上项目。我俩按耐不住激动，先玩一把刺激刺激。今天已经是工作日了，所以游客特别少，去哪都不用排队，这种感觉真爽。</p>
<p>“超级激流”会溅一身水，入场前需要买雨衣穿上。如果想湿身，不穿也行。我俩穿着薄到透明的小雨衣，坐在第一排，向“海象山”进发。开始是随着水流往前漂，漂到爬坡的地方有链条往上拽。到了坡顶，滑道分明在右侧，船竟然往左转——倒着下去！刚反应过来，身体像是被猛拽下去，耳畔尖叫声骤然而起。急速下降、上升，船停在了两座“大海象山”中间，“超级激流”的最高点。最刺激的要来了，我和晓对望一眼，深吸一口气，大吼一声：“啊——”，我感受到了自由落体，跟跳悬崖似的，穿过“海象山”上的小瀑布，撞开滑道上的水平面，“嘭——”的一声，水溅起了足有三四米高，“哗啦——”洒了一身，多亏了小雨衣。</p>
<p>两座“海象山”是中空的，里面是海象、海狮等海洋动物馆。现在回想起来，我们去过好几个海洋馆了：香港海洋公园，蓬莱海洋极地世界，长隆海洋王国。感觉长隆这次是最好玩的，见到的海洋景观也是最美的。“长隆海洋王国”正式列为第二个有孩子后要带他来的地方，第一个是香港迪士尼。真的适合孩子玩。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01468.JPG" alt="海象山"></p>
<p>从“海象山”里出来，去了“海鸟世界”。这里有各式各样的海鸟，看标牌也叫不上名字。有大长腿的，有大长嘴的，有的看见游客过来就凑上来，伸着长喙要吃的。我们没吃的，太靠近它估计会被啄，那大块头比社会鹅大多了，惹不起，惹不起。</p>
<p>海鸟世界不止有海鸟，还有各种半水栖动物。我们第一次见水豚，像特大个的老鼠，感觉如同老鼠跟猪的后代一样。这里还有各种龟类，有水里的大海龟，陆地上的象龟。我们有幸目睹了两只象龟做羞羞的事情，象龟的壳像个大面包，圆鼓鼓的，爬起来相当费劲。那只公象龟十分艰难地爬上去，却不小心摔了下来。唉……我十分替它惋惜。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01514.JPG" alt="不可描述"></p>
<p>从“海鸟世界”出来，在“缤纷世界”的鳐鱼池附近有小丑表演，在音乐地伴奏下跳舞耍杂技，表演搞笑。围观的游客慢慢多起来，小丑表演经典杂技，同时扔四个球、五个球。游客也不吝啬掌声、呼喊声，大家玩的就是开心。中途邀请游客上去配合表演，晓如愿以偿地被选中了。让她站在中间，两个小丑互相扔道具，晓看着眼前的道具翻飞，也不敢喝彩。表演结束，晓收到了一朵气球小花，开心的像个孩子（这次不是傻子）。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01526.JPG" alt="表演的小丑"></p>
<p>下一站是“极地探险”，这里有企鹅馆、白鲸馆、北极熊馆。在企鹅馆里看到各式各样的企鹅，全球有18种企鹅，体型最大的是帝企鹅。我们还看到了刚出生的小帝企鹅，毛绒绒地，完全没有威风凛凛的样子。它们周围倒是站了一圈身高1米的帝企鹅，如同护卫一般。</p>
<p>出企鹅馆的时候路过一段山洞，山洞后面有个石台上站了两只企鹅雕塑，我俩没在意，突然“嗷——”的一声，一只大蜥蜴向着企鹅，张着大口就蹿出来了。晓被吓得“啊——”的嗓子，比蜥蜴叫声还大，我被吓得一哆嗦。我俩拔腿就要跑，这才回过神来，明显是假的嘛。再去看时，那只假蜥蜴慢慢地缩回去了。我俩被吓够呛，企鹅馆这么萌的地方，为啥设计这么个玩意，神经病啊！</p>
<p>出了企鹅馆就是北极熊馆，北极熊馆有内外两个场地，室外是棕熊，室内是北极熊。在室外，威武雄壮的棕熊正在向游客作揖要吃的呢。有的游客会买两个苹果扔给它，幸运能接住就吃了，不幸运掉深沟里就没得吃了，这一天能为场馆创不少收。室内北极熊过得比较滋润，不用靠卖萌卖苹果，随时可以游泳、睡觉。室内还有因纽特人的冰屋，还有可爱的雪狐。</p>
<p>从“极地探险”出来已经1点多了，我俩找了个餐厅，大快朵颐地吃了一顿。出来玩的这几天，终于吃到大肉块+白米饭了，能让我吃到超满足的标配。“海洋王国”里的“海底餐厅”是最出名的，号称可以和一万多条鱼共进午餐。“海底餐厅”是在地下，有一整面墙是玻璃的，透过玻璃可以看到各种海洋动物，如同置身海底。我们没有去“海底餐厅”吃饭，想体验置身海底的感觉，“海底餐厅”的一面玻璃墙远不如四周和顶部全是玻璃墙的“海洋奇观”。</p>
<p>“长隆海洋王国”的地标性建筑——在鲸鲨馆旁边，一条高达68米的巨大蓝色鲸鲨，这里便是“海洋王国”里最出名的地方——“海洋奇观”。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01577.JPG" alt="巨大的鲸鲨"></p>
<p>我们在蓬莱极地海洋世界也感受过海底的玻璃走廊，看起来头晕，没什么惊艳的。这次不一样，我们真被惊艳到了。这种震撼力是跟场馆大小成正比的，体验的海底环境越大，感受到的震撼力越大，就越能被惊艳到。置身在四周全是玻璃墙，头顶是巨大圆形玻璃穹顶的水底，五光十色的海底世界，几万条鱼在水中游动，这可比躺在自家茶几底下看鱼缸惊艳的多。</p>
<p>除了这个玻璃穹顶，还有一面巨大的玻璃墙，里面是鲸鲨、魔鬼鱼这类大型海洋动物。这面玻璃足有近十米高，几十米宽，旁边有展示这玻璃的，这叫“亚克力玻璃“，厚度有0.65米，我看是有几十片玻璃合在一起，这得承受多大的水压。正对玻璃墙的是个宽阔场地，场地四周有珊瑚树、珊瑚石，还有野营帐篷，可以在这里住一宿。幽蓝的灯光透过海水映照着，太漂亮了。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/WX20171126-140338@2x.png" alt="魔鬼鱼"></p>
<p>“海洋奇观”里还有个“海底互动船”，是一个穿过各种海底奇观的实景互动体验项目。和香港迪士尼的“迷离大宅”类似，也是坐着一个小车上，随着小车前进，会看到各种神奇景观，只是主题不一样。“海底互动船”会穿过玻璃海底走廊、海盗沉船、海底旋涡、海底火山等等奇妙之地，我们看到大鲨鱼、水母游过，会感知到旋涡的旋转，火山的炙热。这绝对又是一次难忘的奇妙旅程。</p>
<p>下午3点有花车巡游，沿着景区内大道巡游表演。音乐响起，开路的小丑会和游客石头剪刀布，赢了的会给个气球，然后我们赢了三四个。后面有各种海洋动物扮演，有代表各个海洋馆主体的花车，有大鲨鱼车、珊瑚车、南极冰山车，还有各种载歌载舞的表演人员，有踩高跷的小丑、跳舞的公主、骑自行车的魔鬼鱼、跳舞的水母、玩滑板的水手，最后是一个巨大的鲸鱼花车。我们没赶上香港迪士尼的花车巡游，这次长隆巡游表演也算弥补了当时的遗憾。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/DSC01682.JPG" alt="花车巡游"></p>
<p>看完花车巡游，又去了海牛馆，这边有过山车和雨林升降塔。看到过山车就想起欢乐谷大爷了，“这年轻人胆子真大，这不是玩命吗？”我们也不年轻了，没敢去玩过山车。只坐了雨林升降塔，俯瞰一下“长隆海洋王国”。后来又去了“海豚馆”，看看晓最喜欢的海豚。这里也有白鲸表演，我们没去看。</p>
<p>这一天下来把我俩累够呛，但也玩的过瘾。出场馆的时候已经下午4点多了，我们是晚上7点20的飞机，路上得花1个多小时，该准备准备去机场了。</p>
<h2 id="回程"><a href="#回程" class="headerlink" title="回程"></a>回程</h2><p>我们本以为这将是十一长假旅行的完美结局。确实，完美的结束了，不完美的才刚刚开始……</p>
<p>回到横琴湾酒店，买了4:30去机场的巴士票。时间都过了，巴士迟迟不来。工作人员打电话咨询，说路上堵车会晚半个小时。怎么办？做决定的时候到了。我当机立断，把车票退了，打车去机场。晓说：“不等等了？”我说：“不等了。”这是我最坚决，也是我最正确的一次决定。</p>
<p>上了出租车，司机师傅说：“看看珠海大桥堵车吗？”我看了一下并不堵。我们丝毫没意识到这边也会堵车，而且堵得是特别厉害。多亏打车，我们在珠海大桥西向车道完全堵死之前过了桥，而接我们的大巴就堵在珠海大桥那，可不是晚半个小时的事。我们在车上看到从西向东的车道已完全堵死了，密密麻麻的车堵了足足六七里路，完全是一动不动，个别幸运的车在可掉头的地方直接掉头回去了，我俩都惊呆了。司机师傅说：“今天已经是工作日了，去机场的路没堵这么厉害，昨天没有四五个小时根本到不了机场。我曾经在这里被堵了七个小时。”我的天呐！</p>
<p>我俩长舒了一口气，如果堵在路上不得急死了。司机师傅也十分健谈，一路上净聊风土人情。他说话港台腔，我得仔细听才能听懂，晓的语言天分比我不知道高到哪里去了，我听不懂的她给我翻译一下。路上看见两辆挂双车牌的车，我们也是第一次见，上面一个广东牌照“粤”，下面一个香港牌照“港”，车的方向盘在右边，是港澳那边的车。司机师傅说这是两地车，可以自由出入香港。还告诉我们，光这一个车牌60万。</p>
<p>快到机场了，我们也没吃晚饭，本打算去机场随便吃点。司机师傅说：“我也没吃饭，前边有家快餐特别好，我去打包一份，你们也可以去尝尝。”我们也去打包了两份快餐，好多肉、好多菜、好多米饭，一份才十几块钱。而且味道特别好，比机场几十上百块的饭好吃多了。</p>
<p>美美的吃完这顿饭，开始了漫长的等待。我们在路上的时候就开始下雨了，机场外雨越下越大。我感觉：飞机不会晚点吧？恭喜我吧，我的感觉是对的。原定19:20起飞，22:30抵达北京。但现在22:30了，还没登机！没登机！</p>
<p>外面的雨早停了，候机厅里有些冷，晓盖了个毯子坚持不住睡着了，我就静静地等着，啥时候登机，啥时候起飞啊？俺想回家……</p>
<p>我问过好几次机场工作人员，他们说：“北京在下大暴雨，还没接到登机通知，请您耐心等待。”担心了半个月三亚会下雨，最后被北京的雨坑了，防不胜防啊。</p>
<p>终于等到登机通知，登机、起飞，一路平安。到北京已经凌晨3点了，天还在下雨，打出租车得排几百米的队，打滴滴得排在20分钟以后。怎么这么多人啊？最后没办法，找了一个拼车，价钱贼黑。没办法，俺想回家啊……</p>
<p>进家门的那一刻，我们俩对视了一下，不由得苦笑，简直是身心俱疲……</p>
<p>(对，这个结尾就是去香港时的游记结尾，完全适用)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是我迄今为止写的最长的一篇游记，详细记录了我们这次旅行的所有事情。为的是我们老的那一天，可以拿出来自己回忆，或者给孩子们讲讲我们年轻时的故事。开篇之前，感谢晓带我去了那么多地方，也感谢你一直陪着我，我们一起面对了那么多事。以后，你负责带我玩，我负责记录玩的故事。&lt;/p&gt;
&lt;p&gt;开始吧，一万五千多字呢！加油，读到结尾。&lt;/p&gt;
    
    </summary>
    
      <category term="记事" scheme="http://markmiao.com/categories/%E8%AE%B0%E4%BA%8B/"/>
    
    
      <category term="生活" scheme="http://markmiao.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="游记" scheme="http://markmiao.com/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>RxSwift学习笔记(1)</title>
    <link href="http://markmiao.com/2017/11/24/rxswiftlearn1/"/>
    <id>http://markmiao.com/2017/11/24/rxswiftlearn1/</id>
    <published>2017-11-24T06:32:44.000Z</published>
    <updated>2017-11-24T07:29:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/ReactiveX/RxSwift" target="_blank" rel="external">RxSwift</a>，是Swift的函数响应式编程框架，以函数为工具，绑定数据联动，数据改变实时反映到结果呈现。这对我来说是一种全新的编程思想，我想去了解，学习。</p>
<p>本文记录了我学习RxSwift的历程，包含遇到的各种问题和我的一些理解。</p>
<a id="more"></a>
<h2 id="运行官方示例"><a href="#运行官方示例" class="headerlink" title="运行官方示例"></a>运行官方示例</h2><p>从github上克隆RxSwift项目</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">clone</span> <span class="title">git</span>@github.com:ReactiveX/RxSwift.git</div></pre></td></tr></table></figure>
<p>双击打开<code>Rx.xcworkspace</code>，在工程中选择<code>RxExample-iOS</code>或<code>RxExample-macOS</code>，选择模拟器或真机，运行。</p>
<h2 id="项目集成RxSwift"><a href="#项目集成RxSwift" class="headerlink" title="项目集成RxSwift"></a>项目集成RxSwift</h2><p>将RxSwift集成到项目中，推荐使用CocoaPods的方式，pod版本<code>1.3.1</code>亲测有效：</p>
<ul>
<li><p>创建项目时勾选<code>Include Unit Tests</code>，包含单元测试。</p>
</li>
<li><p>创建<code>Podfile</code>文件，输入如下内容：</p>
</li>
</ul>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Podfile</span></div><div class="line">use_frameworks!</div><div class="line"></div><div class="line">target <span class="string">'工程名字'</span> <span class="keyword">do</span></div><div class="line">    pod <span class="string">'RxSwift'</span>,    <span class="string">'~&gt; 4.0'</span></div><div class="line">    pod <span class="string">'RxCocoa'</span>,    <span class="string">'~&gt; 4.0'</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="comment"># RxTests 和 RxBlocking 将在单元/集成测试中起到重要作用</span></div><div class="line">target <span class="string">'单元测试文件夹名字'</span> <span class="keyword">do</span></div><div class="line">    pod <span class="string">'RxBlocking'</span>, <span class="string">'~&gt; 4.0'</span></div><div class="line">    pod <span class="string">'RxTest'</span>,     <span class="string">'~&gt; 4.0'</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<ul>
<li>将工程名和单元测试名换成自己的，执行命令：</li>
</ul>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod <span class="keyword">install</span></div></pre></td></tr></table></figure>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>问题1. 可能由于CocoaPods版本过低，pod失败，建议更新后重试，执行更新命令：</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo gem <span class="keyword">install</span> cocoapods</div></pre></td></tr></table></figure>
<p>问题2. </p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">None <span class="keyword">of</span> your spec sources contain a spec satisfying the dependency: `RxSwift (~&gt; <span class="number">4.0</span>)`.</div></pre></td></tr></table></figure>
<p>执行命令：</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod <span class="built_in">setup</span></div></pre></td></tr></table></figure>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>RxSwift的本质是观察者模式，时刻观察者一个序列，当序列达到预定条件，执行某种操作。比如钟表时间是一个序列，当到6点时就下班。时间是一个被观察的序列，6点是预定条件，下班是操作。</p>
<p>Rx中用<code>observable</code>表示变化序列，也就是被观察者。到达预定条件的操作用<code>subscribe</code>表示，被称为订阅。订阅完成之后，要对其进行清理，清理方式是丢掉处理袋<code>DisposeBag</code>中。</p>
<p>这是一个基本的Rx执行流程。</p>
<h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><p>用RxSwift写一个基本的按钮点击事件。在<code>ViewController</code>中引入头文件：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> RxSwift</div><div class="line"><span class="keyword">import</span> RxCocoa</div></pre></td></tr></table></figure>
<p>在<code>Main.storyboard</code>中拖入按钮，并连线到<code>ViewController</code>：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> button: <span class="type">UIButton</span>!</div></pre></td></tr></table></figure>
<p>创建全局变量处理袋：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">let</span> disposeBag = <span class="type">DisposeBag</span>()</div></pre></td></tr></table></figure>
<p>给按钮添加点击事件：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">button.rx.tap</div><div class="line">	.subscribe(onNext: &#123;</div><div class="line">		<span class="built_in">print</span>(<span class="string">"点击"</span>)</div><div class="line">	&#125;).disposed(by: disposeBag)</div></pre></td></tr></table></figure>
<p>完整代码：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> UIKit</div><div class="line"><span class="keyword">import</span> RxSwift</div><div class="line"><span class="keyword">import</span> RxCocoa</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</div><div class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> button: <span class="type">UIButton</span>!</div><div class="line">    <span class="keyword">private</span> <span class="keyword">let</span> disposeBag = <span class="type">DisposeBag</span>()</div><div class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line">        <span class="keyword">super</span>.viewDidLoad()</div><div class="line">        button.rx.tap</div><div class="line">            .subscribe(onNext: &#123;</div><div class="line">                <span class="built_in">print</span>(<span class="string">"按钮点击"</span>)</div><div class="line">            &#125;).disposed(by: disposeBag)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">didReceiveMemoryWarning</span><span class="params">()</span></span> &#123;</div><div class="line">        <span class="keyword">super</span>.didReceiveMemoryWarning()</div><div class="line">        <span class="comment">// Dispose of any resources that can be recreated.</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>demo地址：<a href="https://github.com/mxdios/XDRxSwiftLearn" target="_blank" rel="external">XDRxSwiftLearn</a></p>
<p>学习资料：</p>
<p><a href="http://t.swift.gg/d/2-rxswift" target="_blank" rel="external">靛青K神出品RxSwift 学习指导索引</a></p>
<p><a href="https://beeth0ven.github.io/RxSwift-Chinese-Documentation/" target="_blank" rel="external">RxSwift中文本文档</a></p>
<p><a href="https://darkhandz.com/categories/iOS/Swift/" target="_blank" rel="external">RxSwift入门</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift&quot;&gt;RxSwift&lt;/a&gt;，是Swift的函数响应式编程框架，以函数为工具，绑定数据联动，数据改变实时反映到结果呈现。这对我来说是一种全新的编程思想，我想去了解，学习。&lt;/p&gt;
&lt;p&gt;本文记录了我学习RxSwift的历程，包含遇到的各种问题和我的一些理解。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://markmiao.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="swift" scheme="http://markmiao.com/tags/swift/"/>
    
      <category term="RxSwift" scheme="http://markmiao.com/tags/RxSwift/"/>
    
  </entry>
  
  <entry>
    <title>用apiDoc写接口文档</title>
    <link href="http://markmiao.com/2017/11/13/apidoc/"/>
    <id>http://markmiao.com/2017/11/13/apidoc/</id>
    <published>2017-11-13T09:44:16.000Z</published>
    <updated>2018-12-24T07:58:01.454Z</updated>
    
    <content type="html"><![CDATA[<p>作为移动端开发，接口文档看得多，写得少。最近对已开发完成的app进行接口文档整理，发现了<a href="http://apidocjs.com/" target="_blank" rel="external">apiDoc</a>这款神器。见识到接口文档也可以写的这么高大上，之前用markdown写弱爆了，用word的自杀吧。</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在安装<code>npm</code>的基础上，执行命令安装apiDoc</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> apidoc -g</div></pre></td></tr></table></figure>
<p>安装完成，Mac上便具备apiDoc环境，可以开始写文档了。用apiDoc写接口文档就是写注释，支持各种语言的注释，比如：C#、Go、Java、JavaScript、PHP等等。</p>
<h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>在任意位置创建存放文档的文件夹，在该文件夹内创建文件<code>apidoc.json</code>，这是apiDoc的配置文件。内容示例如下：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"name"</span>: <span class="string">"文档名称"</span>,</div><div class="line">  <span class="attr">"version"</span>: <span class="string">"0.1.0"</span>,</div><div class="line">  <span class="attr">"description"</span>: <span class="string">"文档描述"</span>,</div><div class="line">  <span class="attr">"title"</span>: <span class="string">"文档网页标题"</span>,</div><div class="line">  <span class="attr">"url"</span> : <span class="string">"https://api.github.com/v1"</span>,</div><div class="line">  <span class="attr">"sampleUrl"</span>: <span class="string">"https://api.github.com/v1"</span>,</div><div class="line">  <span class="attr">"header"</span>: &#123;</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"页眉"</span>,</div><div class="line">    <span class="attr">"filename"</span>: <span class="string">"header.md"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"footer"</span>: &#123;</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"页脚"</span>,</div><div class="line">    <span class="attr">"filename"</span>: <span class="string">"footer.md"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"template"</span>: &#123;</div><div class="line">  	 <span class="attr">"withCompare"</span>: <span class="literal">true</span>,</div><div class="line">  	 <span class="attr">"withGenerator"</span>: <span class="literal">true</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>字段解释：</p>
<ul>
<li><code>version</code>：文档版本号。</li>
<li><code>url</code>：域名的主地址，接口中不变的那一块。</li>
<li><code>sampleUrl</code>：测试API方法接口，如果设置，在每个接口下都有一个测试接口的表单。如果不想显示测试表单，需要在接口文档中增加<code>@apiSampleRequest off</code>。</li>
<li><code>header</code>、<code>footer</code>：页眉、页脚，可以不写。里面分别跟着页眉页脚的标题和markdown文件路径，markdown文件和<code>apidoc.json</code>同级目录。</li>
<li><code>withCompare</code>：版本比较，默认开启，<code>withGenerator</code>：生成器，页面底部显示apiDoc，默认开启。</li>
</ul>
<h2 id="创建接口源文档"><a href="#创建接口源文档" class="headerlink" title="创建接口源文档"></a>创建接口源文档</h2><p>我是以<code>js</code>文件写的接口文档，在配置文件<code>apidoc.json</code>统计目录下创建接口文件<code>接口.js</code>，文件名称自定义。</p>
<p>apiDoc最大的亮点是可以版本比较，接口更改过，可以通过接口右侧的版本号选择进行变化比较。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/2017-11-14-09-36-28.png" alt="版本比较"></p>
<p>这需要在源文档中保留每个历史版本，所以每个接口都可能对应N个历史版本，所以建议一个接口用一个文件。</p>
<h3 id="内容示例"><a href="#内容示例" class="headerlink" title="内容示例"></a>内容示例</h3><p>创建一个<code>编辑资料.js</code>文件，并输入以下内容：</p>
<figure class="highlight julia"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"><span class="meta">@api</span> &#123;POST&#125; users/userinfo.asp [编辑资料]</div><div class="line"><span class="meta">@apiVersion</span> <span class="number">0.1</span><span class="number">.0</span></div><div class="line"><span class="meta">@apiName</span> userinfo</div><div class="line"><span class="meta">@apiGroup</span> users</div><div class="line"><span class="meta">@apiSampleRequest</span> off</div><div class="line"><span class="meta">@apiDescription</span> 编辑用户资料</div><div class="line"></div><div class="line"><span class="meta">@apiParam</span> &#123;<span class="built_in">String</span>&#125; userid 用户id</div><div class="line"><span class="meta">@apiParam</span> &#123;<span class="built_in">String</span>&#125; username 用户名</div><div class="line"><span class="meta">@apiParam</span> &#123;<span class="built_in">String</span>&#125; usersex 性别</div><div class="line"><span class="meta">@apiParam</span> &#123;<span class="built_in">String</span>&#125; token token</div><div class="line"></div><div class="line"><span class="meta">@apiSuccess</span> &#123;Object&#125;   data  对象数据</div><div class="line"><span class="meta">@apiSuccess</span> &#123;<span class="built_in">String</span>&#125;   data.userheadimg     头像</div><div class="line"><span class="meta">@apiSuccess</span> &#123;<span class="built_in">String</span>&#125;   data.username     用户名</div><div class="line"><span class="meta">@apiSuccess</span> &#123;<span class="built_in">String</span>&#125;   data.userphone     手机号</div><div class="line"><span class="meta">@apiSuccess</span> &#123;<span class="built_in">String</span>&#125;   data.usersex     性别</div><div class="line"><span class="meta">@apiSuccess</span> &#123;<span class="built_in">String</span>&#125;   errorcode  错误码</div><div class="line"><span class="meta">@apiSuccess</span> &#123;<span class="built_in">String</span>&#125;   errormessage  信息</div><div class="line"></div><div class="line"><span class="meta">@apiExample</span> 返回示例</div><div class="line">HTTP/<span class="number">1.0</span> <span class="number">0</span> ok</div><div class="line">&#123;</div><div class="line">    data =     &#123;</div><div class="line">        userheadimg = <span class="string">"http://xxxxxxx/api/user/2017/11/13/5EC93450A72741FA92AB4E08D4A96710.jpg"</span>;</div><div class="line">        username = markmiao;</div><div class="line">        userphone = <span class="number">13000000000</span>;</div><div class="line">        usersex = <span class="string">"男"</span>;</div><div class="line">    &#125;;</div><div class="line">    errorcode = <span class="number">0</span>;</div><div class="line">    errormessage = <span class="string">"success"</span>;</div><div class="line">&#125;</div><div class="line">*/</div></pre></td></tr></table></figure>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/2017-11-14-09-52-10.png" alt="部署完成后的显示样式"></p>
<h3 id="字段解释"><a href="#字段解释" class="headerlink" title="字段解释"></a>字段解释</h3><p>文档中所有内容是包含在<code>/**   */</code>注释中的，用apiDoc写接口文档就是写注释。</p>
<p><code>@api {POST} users/userinfo.asp [编辑资料]</code> </p>
<ul>
<li>必需，<code>{}</code>内是接口请求方式，GET、POST、PUT等，后面的是接口地址改变部分，会与<code>apidoc.json</code>中的<code>&quot;url&quot;</code>组成完整接口地址显示。<code>[]</code>内是接口标题。</li>
</ul>
<p><code>@apiVersion 0.1.0</code></p>
<ul>
<li>接口版本号，如果接口改变了，需要将上面内容复制一份，修改版本号，修改接口内容，就可以在文档中进行版本内容比对。</li>
</ul>
<p><code>@apiName userinfo</code></p>
<ul>
<li>接口名称，不会显示在文档中，是每个接口的唯一标识，以此来区别接口。</li>
</ul>
<p><code>@apiGroup users</code></p>
<ul>
<li>接口组名，接口可以分组存放，将一类接口放到一组总，组名相同的会被归到一组。</li>
</ul>
<p><code>@apiSampleRequest off</code></p>
<ul>
<li>隐藏测试表单</li>
</ul>
<p><code>@apiDescription 编辑用户资料</code></p>
<ul>
<li>接口描述</li>
</ul>
<p><code>@apiParam {String} userid 用户id</code></p>
<ul>
<li>接口请求参数，<code>{}</code>内是参数类型，后面跟着参数字段名和字段描述。</li>
</ul>
<p><code>@apiSuccess {Object}   data  对象数据</code></p>
<ul>
<li>接口返回值，<code>{}</code>内是返回值类型，后面跟着返回值字段名和字段描述。要想出现返回值表格中缩进的样式，以<code>data.userheadimg</code>这种形式写，<code>userheadimg</code>会在<code>data</code>下面缩进，表示属于<code>data</code>对象中的元素。</li>
</ul>
<p><code>@apiExample 返回示例</code></p>
<ul>
<li>接口返回的数据结构示例</li>
</ul>
<h2 id="生成接口文档"><a href="#生成接口文档" class="headerlink" title="生成接口文档"></a>生成接口文档</h2><p><code>cd</code>到接口文件夹，使用命令：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apidoc -<span class="selector-tag">i</span> . -o doc/</div></pre></td></tr></table></figure>
<p>意思是使用当前文件夹(<code>. 代表当前文件夹</code>)下的所有文件，生成apiDoc文档放到<code>doc/</code>文件夹下。</p>
<p>命令执行完毕，在<code>doc/</code>目录下点击<code>index.html</code>，便可本地浏览用apiDoc写成的接口文档。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为移动端开发，接口文档看得多，写得少。最近对已开发完成的app进行接口文档整理，发现了&lt;a href=&quot;http://apidocjs.com/&quot;&gt;apiDoc&lt;/a&gt;这款神器。见识到接口文档也可以写的这么高大上，之前用markdown写弱爆了，用word的自杀吧。&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://markmiao.com/categories/HTML5/"/>
    
    
      <category term="文档" scheme="http://markmiao.com/tags/%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>被苹果爸爸完全碾压的通话记录</title>
    <link href="http://markmiao.com/2017/08/12/talkingtoapple/"/>
    <id>http://markmiao.com/2017/08/12/talkingtoapple/</id>
    <published>2017-08-12T08:14:28.000Z</published>
    <updated>2017-08-12T08:17:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>私情是介个样子滴~</p>
<p>最近公司开发了一款APP，是面向大众化的工具类应用。在上架App Store时遇到了阻挠，这对我来说都习以为常了，没有阻挠才奇怪呢。</p>
<a id="more"></a>
<p>这次被拒的原因之前没遇到过，但我大概预测到了：因为APP内容是属于大众化的工具类，核心功能与账户没有直接关系，所以不能在没使用APP之前强制用户登录，违反了App Store审核指南的第5.1.1条。</p>
<p>其实这条规则我也知道，并且知道如果给出了强制用户登录的原因，且原因具有说服力的话是可以这么做的。所以我在提交应用审核的备注里长篇大论的写了一百多字的说明，如此如此这般这般，所以我们采用了用户强制登录机制。</p>
<p>事实证明，这些都是废话，半毛钱说服力都没有。苹果爸爸直接拒绝，第5.1.1条规则打脸甩过来了。我还不死心，将原来备注里一多百字的说明扩充到两百字，详详细细的阐述了我们之所以这么搞，是有原因滴，然后给苹果发过去了。</p>
<p>苹果的回复是：你违反了第5.1.1条规则，后面分别用英文、简体中文、繁体中文说：“如果你不服，留下联系方式，来信砍。”当然苹果爸爸是用很文雅的语言描述了这个意思。我岂能示弱，留就留！</p>
<p>其实之前与苹果开发者客服电话联系过几次，都是些账号或应用的小问题，关于应用审核还是开天辟地头一遭。App Store应用上架审核一直是一个很神秘的机构，他们具体的工作流程和审核方法都鲜为人知。听说这个机构都在美国本土，还听说在中国台湾有个部门负责亚洲市场的应用审核。这些都是我听过的传言。之前与应用审核人员沟通都是用iTunesConnect里面的邮件，或者在Developer里面选择一项“我想干嘛”，给应用审核组发信息。从来没有电话或即时通讯这些快速的沟通途径，我曾经问过苹果开发者客服应用审核组的客服电话是多少，他直接告诉我没有。</p>
<p>没想到这次能电话联系到应用审核组！想想还有些小激动呢。</p>
<p>在我留下联系方式的三天后，也就是今天早上，我遛完狗回来接到了来自美国加利福尼亚圣何塞的电话。我清了清嗓子：“喂，您好。”</p>
<p>“喂，请问是xxx先生吗？”是一位普通话明显生硬的妹子，这样让我有些惊讶。</p>
<p>为了今天的通话，我是做了准备的。在经过友好的问候和审核问题确认之后，我率先发招：“我们的应用是有专门的用户群体，我们需要为每位使用者创建用户ID，便于后期工作展开。”我并没有在第一招就阐明这个后期工作，是希望在后面对方反驳后，再行祭出，已达到首尾呼应，加大谈判力度，我是多么的睿智。</p>
<p>“我们发现您的应用并不具备独立用户群的特性，因此在使用前不能强制用户登录，这违反了我们审核规则的第5.1.1条。”对方明显没get到我说的应用独特性，依旧强调规则。</p>
<p>“是这样的，我们会统计用户登录后使用的工具模板数量，后台大数据分析该用户经常使用哪几类，后期会对该用户着重推送这几类的工具模板。这是为用户提供更好的服务和更优质的体验，这些都是基于用户登录的。”以用户服务为向导，一切都是为了用户，有这么高大上的理由为依据，区区强制用户登录不会有问题啦，都是为了用户体验嘛。我都为我的机智和逻辑思维能力感到赞叹。</p>
<p>“不是不允许用户登录。对于针对普通用户群体的应用，在用户了解应用之前不可以强制用户注册登录，强制搜集用户信息。这违反了我们的应用审核规则。应用必须开放用户未登录时也可以使用部分功能，当使用涉及账号的功能时，再请求用户登录。否则无法上架。”对方如是说。</p>
<p>听不听爸爸的话？不听话你就别想上架。我有点委屈了，完全没考虑过人家的感受嘛。我做了一些妥协：“那这样吧，我们可以提供用户不登录的游客模式，但是只能浏览，不能使用工具模板。在使用时需要登录，这样便于我们后期有针对性的内容推送。”</p>
<p>“不可以，iOS是有本地存储机制的，用户不登录可以将工具模板保存到本地。如果用户想要将使用记录保存到服务器，同步到其他设备，这时可以让用户登录。”我的让步完全没有换来理解，反而换来了她的步步紧逼。太欺负人了！</p>
<p>“那这样一来很大一部分核心功能在用户未登录状态下都能使用，用户的登录欲望会大大降低，这不利于我们后期对用户进行有针对性的工具模板推送。”我还在做最后的挣扎，用户针对性内容是我自以为有力的筹码，我以此一再强调我们后期准备对用户的付出，想换来苹果爸爸的理解。</p>
<p>“当你们应用做得足够好，推广到位，我相信用户是会愿意主动注册登录的。”这分明是胜利后的嘲讽啊！听到她这句话时，我知道我说错话了，败得彻底，再也没有缓和的余地了。怎么让用户愿意登录不是苹果爸爸该考虑的，是我们该考虑的，想以强制用户登录来达到目的，苹果爸爸可不答应。别看她普通话略显生硬，欺负起我来，我竟毫无反驳的余地，稍微挣扎一点即被拍死。</p>
<p>“那好吧，我们对应用修改后再行上架。”我如一只斗败的公鸡，完全没有了开始时的底气和自信。这明显就不是一场势均力敌的谈判，而是爸爸教育儿子的完虐。一开始我就搞错了自己的身份地位，妄图说服苹果爸爸，这哪是胳膊拧大腿，简直是腿毛想扎大动脉，还妄图给苹果放血，太不自量力了。</p>
<p>君不见中国两大微——微信和微博，一个为了打赏，一个为了问答。微信关了iOS客户端的打赏功能，微博妥协了问答付费走内购。</p>
<p>我还是图样图森破。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;私情是介个样子滴~&lt;/p&gt;
&lt;p&gt;最近公司开发了一款APP，是面向大众化的工具类应用。在上架App Store时遇到了阻挠，这对我来说都习以为常了，没有阻挠才奇怪呢。&lt;/p&gt;
    
    </summary>
    
      <category term="程序人生" scheme="http://markmiao.com/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="短文" scheme="http://markmiao.com/tags/%E7%9F%AD%E6%96%87/"/>
    
      <category term="应用" scheme="http://markmiao.com/tags/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>那些年用过的Mac</title>
    <link href="http://markmiao.com/2017/08/03/mymacbooks/"/>
    <id>http://markmiao.com/2017/08/03/mymacbooks/</id>
    <published>2017-08-03T01:27:01.000Z</published>
    <updated>2017-08-03T01:39:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>旧文新录，这篇文是去年写的，一直放在简书上。今天把他放到blog里，日后翻出来看看也挺有意思。</p>
<a id="more"></a>
<p>记得是2014年年初接触iOS开发，作为一个资深穷逼，自然没有money去买Mac这种高端电子产品。说实话，在做iOS开发之前，我只在电视上见过MacBook，银白色金属质感，亮白的苹果logo灯，一切尽显高贵奢华。</p>
<p>多渴望拥有一台MacBook，哪怕摸摸也好啊。现在呢，每到秋冬季节，我碰都不愿碰它，静电把我快电出神经质了。但在那时候，MacBook就是我心中的白富美，让我摸摸，我可能会忍不住用舌头去舔它。</p>
<p>我一直认为MacBook是有钱人玩得起的，直到我晒出这张所谓的炫富图时，我发现自己并没有成为有钱人，依然是一个资深穷逼，真应了那句亘古不变的名言：穷玩车、富玩表、屌丝玩电脑。</p>
<p><img src="https://github.com/mxdios/notebook/blob/master/notebooks/images/WechatIMG99.jpeg?raw=true" alt="炫富图"></p>
<h2 id="ThinkPad上装的黑苹果"><a href="#ThinkPad上装的黑苹果" class="headerlink" title="ThinkPad上装的黑苹果"></a>ThinkPad上装的黑苹果</h2><p><img src="https://github.com/mxdios/notebook/blob/master/notebooks/images/20110913030805516.jpg?raw=true" alt="小黑本"></p>
<p>没有白富美的MacBook，但我有一台跟了我三年的小黑本ThinkPad E40。不能体验苹果本，体验一把苹果系统也不错，狠(fēi)下(cháng)心(yú)来(kuài)的给小黑本装黑苹果。</p>
<p>不知是我的小黑本菜，还是我菜，什么五国语言错误、驱动安装失败全让我遇到了，最后去中关村花了100大洋找人安装的(看起来还是我菜)。安装了OS X 10.9，这是Mac系统最后一代拟物化系统，10.10开始扁平化。此时的iOS7已经开始扁平化了。用黑苹果最大的问题就是卡，运行Xcode的时候简直卡的要死。</p>
<p>垂垂老矣的小黑本，本来运行win7都有些卡，现在硬塞进去一套Mac OS，还是Mac OS和Windows并存双系统，每次启动选择系统启动项。小黑本跟了我也算是遇人不淑，老了老了还被我这么糟蹋。</p>
<p>黑苹果玩了差不多半年，在我已经用iMac的时候。有一天晚上开着小黑本里的黑苹果系统，用迅雷下电影（强调是正经电影），勾选了迅雷上的下载完毕自动关机。以前也常这么搞，可见小黑本真是遇人不淑。第二天，无论如何都开不了机了，小黑本死了……</p>
<p>我眼前仿佛闪过小黑本跟我在一起的一幕幕，陪我上大学，陪我敲代码，陪我在宿舍看片，陪我在教室下电影……我的眼睛模糊了，终于忍不住了，我操！可以买MacBook了！</p>
<p>其实我还是想挽救小黑本的，想重装系统只安装一个win7，平时浏览网页，看看电影就行了，让它能安度晚年，寿终正寝。去ThinkPad售后服务点，当然保修期肯定过了，我想自费修一下也行。“主板坏了，修修1200，换一个1800”，其实让小黑本就此长眠，也不失为一种壮烈。</p>
<p>后来小黑本扔回了老家，老爸花了200块修了一下，能开机了。还没等我给它重装系统，在某次关机之后再也没打开过，就此长眠吃土。</p>
<h2 id="2012款iMac-21-5英寸"><a href="#2012款iMac-21-5英寸" class="headerlink" title="2012款iMac 21.5英寸"></a>2012款iMac 21.5英寸</h2><p>iMac是我上班后用的第一台Mac，就是第一张图中中间的那台iMac，其实当时的我是强烈期望公司给我配一台MacBook的。经过这几年频繁的换Mac电脑，我觉得就单纯开发体验来说，还是iMac用着舒服，想体验一把27英寸 Retina 5K屏的iMac开发，可惜目前为止还没有体验过。</p>
<p>之前对一体机没什么好感，我觉得要么用笔记本，要么用台式机，一体机算怎么回事？iMac改变了我的看法，银白色金属质感，深黑色屏幕边框，有笔记本只插一根电源线的简约，又有台式机大屏的酸爽。相比这些，我最爱的还是配备的原装Mac鼠标和Mac键盘。</p>
<p>Mac鼠标配备Mac系统的平面触摸、页面滑动、多点触碰，以及反Windows鼠标的页面滑动方向，甚至电池安装正负极同向都是这么的反正统。但是，用起来很爽。Mac键盘和MacBook上键盘一样，除了键盘灯。Mac键盘和普通键盘差别不大，除了独有的Command键。感觉Mac键盘用硬币拧开的电池盖设计很赞。</p>
<p>还有鼠标键盘与iMac的蓝牙连接，没有USB线的纠缠。我曾试验过用鼠标关了iMac的蓝牙，一瞬间鼠标键盘失效了，没办法控制iMac。那怎么打开蓝牙啊？有同事建议我找个普通USB鼠标连上打开蓝牙，其实用不着，过一会iMac会自动开启蓝牙，连接鼠标键盘。还发现当用普通USB鼠标连接Mac的时候，Mac里所有滚动条会一直显示，而用Mac鼠标时，滚动条会隐藏。Mac系统是有多讨厌普通鼠标？</p>
<p>Mac鼠标键盘唯一感觉不好的是电池用的太快，键盘鼠标各两节带聚能环的南孚电池，显然聚能环也抵挡不了压榨，电池用不了多久就用光了，键盘还好些，鼠标太费电。后来Apple发布了可充电鼠标键盘，键盘充电还好，鼠标充电的时候总感觉怪怪的，像是把充电线插入了不可描述的部位。</p>
<h2 id="MacBook-Pro-15英寸"><a href="#MacBook-Pro-15英寸" class="headerlink" title="MacBook Pro 15英寸"></a>MacBook Pro 15英寸</h2><p>2014年圣诞节前，购买了一台15英寸的MacBook Pro，就是第一张图中左侧的那台MacBook。也圆了我多年想拥有一台MacBook的愿望。买这台MacBook还得感谢下产品经理猫哥，以8折优惠价拿下了14288的MacBook Pro。</p>
<p>记得当时买了没多久就出了触摸板Touch ID功能和蝴蝶键盘的MacBook，对于电子产品，我从来都没有买了后出了新款会感觉亏了。就像2011年买的ThinkPad E40，当时也算中高配，现在成渣渣了。穷逼永远追不上电子产品的换代速度，索性坦然面对。要不然现在都出TouchBar的MacBook了，我能怎么样？</p>
<p>当时公司还是给我配备了iMac，但是刚入手MacBook的那种喜悦兴奋感，以至于让我每天背着4斤多的电脑从昌平到国贸上班，那台iMac当显示器用了。当时我还有个iPad Air，每天挤地铁拿着9.7英寸的iPad Air看&lt;行尸走肉&gt;，背上还有个4斤多的MacBook，现在想想真傻逼。以至于现在我十分抵触背电脑，给我电脑补助我也不背自己电脑上下班(其实还是给少了，一个月给我两千块，iMac我也背)。</p>
<p>MacBook用着虽然没有iMac大屏的酸爽(由于当时有台iMac当显示屏，完全没有MacBook小屏幕的憋屈感)，但是功能强大的触摸板，柔光闪亮的键盘灯，白光的苹果logo灯，和上就走、打开就用的便捷还是让我一用就倾心。2015年出的MacBook Air取消了logo灯，2016年出的MacBook Pro依旧没有了logo灯，白光的苹果logo灯也成了历史。MacBook越来越薄，删减的东西也越来越多，光驱没了，网线口没了，呼吸灯没了，logo灯没了，USB没了，功能键没了……以后会不会变为光影键盘和触摸板合一，无线充电取消全部接口，可以折叠放在皮鼓兜里呢？</p>
<p>入手MacBook后，是我用苹果产品最多的时候，MacBook Pro是主要编程工具，iMac作为显示器在旁边辅助，iPad Air上下班看视频和做测试，用了多年的Android机也丢掉换成iPhone6了，还有一台iPhone5s测试机。当时作为一个没有女朋友的屌丝，这些奢华的设备配置填补了我内心的小空虚。然而，一切并没有什么卵用。</p>
<p>后来我用一台2011年的Mac mini也没感觉有什么心理落差，我还是一个程序猿，还是敲代码。区别的是我有女朋友了，啊哈哈哈哈……</p>
<h2 id="MacBook-Pro-13英寸"><a href="#MacBook-Pro-13英寸" class="headerlink" title="MacBook Pro 13英寸"></a>MacBook Pro 13英寸</h2><p>后来离职去了另一家公司，当时我已经不愿背电脑上下班了。公司给我配了一台全新的13英寸MacBook Pro，之所以说全新，是因为包装都是我拆的。当时对电脑没有太大要求，给我台mini也可以(黑苹果就算了吧)，新旧就更不会太在乎了。好在我已经坦然了，上家公司那种Apple设备环绕的情景直至现在都没再现过，而且配备的设备越来越老旧，越来越次。</p>
<p>用习惯了15英寸，用13英寸感觉好小。Xcode全屏都感觉放不开，而且公司没有配备外接显示器，这就有点憋屈的尴尬了。好在Mac系统可以加多个桌面，切换起来也十分方便。其实编程有个外接显示器真挺重要，至少我看原型图不用切换桌面。</p>
<p>13英寸跟15英寸的一大设计区别就是音响位置，15英寸的在键盘两边，13英寸的在电脑底部。尴尬的是躺床上看电影，把电脑放腿上容易堵住音响口。</p>
<p>自我感觉，敲代码和商务办公来说MacBook比普通Windows好些。有人吐槽Mac的office软件兼容垃圾，可应用软件少，浏览器兼容差，Mac AppStore软件价格昂贵等等。其实都是事在人为，有钱的买正版，没钱的找破解版，Mac软件并不少，少的是你知道的搜索渠道。但对于那些只支持IE浏览器而你又不得不用的网站(比如某些官方考试报名网站)，我只能说：你个垃圾！说完之后默默地打开虚拟机用IE登录。不得不说Mac的系统性能体验，操作方式的独特化简约，超强的续航能力，这些都是选择Mac的原因，当然还有绝不可忽视的装逼体验。</p>
<p>买iPhone玩游戏是上策，iOS的游戏数量、质量、游戏体验都很不错。但是买Mac玩游戏那可算是失策了，Mac AppStore上的游戏不仅少而且贵，好多单机没有Mac版，一些网游都没有Mac版支持。我电脑游戏玩的少，这方面没什么体验。记得我同学当时换了MacBook玩DNF，没有国服只能玩美服，后来为了玩国服怒装虚拟机。</p>
<h2 id="2011款Mac-mini"><a href="#2011款Mac-mini" class="headerlink" title="2011款Mac mini"></a>2011款Mac mini</h2><p>那台13英寸的MacBook Pro我用了没多久就不用了，因为我离职了，公司不让带走，我就没再用。新公司如愿以偿的给我配了台mini(所以说flag不能随便立)，值得称赞的是显示器比较大，是28英寸的(我也是能习惯性的从不幸中找到幸运)。</p>
<p>第一次用mini不习惯，一时间差点没找到开机键在哪。还有隐藏在后面的各种插孔，每次连接手机数据线USB插口转三次才能摸索着插进去。插耳机总是不小心插进旁边的话筒插孔里，而且耳机孔太紧，位置又在后面，手滑的话根本拔不出来。我还比较庆幸，mini电源插头是国标的，我一个同事用的mini的电源线是英标插头，那硕大的插头，四四方方铜脚，都快把插排撑裂了才插上。</p>
<p>开始连接mini的键盘是普通键盘，没有command键只能用Ctrl，以前是拇指按command配合使用快捷键，现在小指按Ctrl配合使用快捷键，每次都是按完之后发现不对再改。后来实在受不了，在公司找了一个Mac键盘替换了。但是鼠标自始至终都是普通鼠标，不但所有的页面滚动条都一直显示，而且没办法用鼠标快速切换桌面或排列显示桌面所有打开应用，只能control + 方向键。还有一种方法设置桌面触发角，将鼠标移动到桌面某个角，会实现某种操作，这个太不方便了，鼠标总会不小心的移动到某个角落触发某个操作。</p>
<h2 id="2010款MacBook-Pro-17英寸"><a href="#2010款MacBook-Pro-17英寸" class="headerlink" title="2010款MacBook Pro 17英寸"></a>2010款MacBook Pro 17英寸</h2><p>后来因为工作需要，公司台式机统一换本。我换了台17英寸的MacBook Pro，这是我第一次见17英寸的MacBook Pro，有光驱，有呼吸灯，有网线接口，那么厚、那么大、那么重。这台17英寸的MacBook Pro是2010年年末出的，当时售价1.7万，有6斤重，现在已经停产了。给我的时候还没有硬盘，开了半天没开开，我以为坏了。安了个硬盘装了系统，用起来还是蛮不错的。</p>
<p>天真的我以为不用自己电脑就不用背电脑上下班了，现实给了我一个大耳光，醒醒吧，背着公司的本上下班，回家随叫随到敲代码！我就呵呵了，4斤的不想背，现在让我背6斤的，而且没有电脑补贴，因为你没用自己的本。好在上班离家近，不用挤地铁。但是每天背上贴着一个6斤的金属板蹬自行车，到公司内裤都湿了，时间一长说出大天来我也不想背了。再说了，我家里有本，公司都用git，哪个本不能敲代码，把本当爹了？天天背着上下班。</p>
<p>17英寸的MacBook分辨率比Retina屏的小，但是17英寸的MacBook上显示的内容比较小，这样一来屏幕中容纳的内容就比较多。虽然17英寸的屏幕不是很大(在笔记本里还是很大的)，但是用起来感觉不到憋屈，内容显示还是很宽松的。</p>
<p>虽然这个MacBook厚重些，但是相比用mini，感觉用本还是好点。毕竟键盘+触摸板比键盘+普通鼠标体验强太多了。MacBook的光驱是吸入式光驱，键盘右上角的键是推出光驱用的，开机键独立在右上角金属板上，后来去掉了光驱，开机键也取代了推出光驱键的位置。</p>
<p>虽然有光驱，但是我从来没用过，即便是我第一台电脑ThinkPad上的光驱也没用过几次。后来的MacBook去掉了光驱和网线口可谓明智之举，现在光盘几乎退出历史舞台，无线网遍布世界。为啥呼吸灯也去掉了？睡眠的时候一闪一闪挺有睡眠的样子的。</p>
<p>2016款MacBook去掉了USB3和Thunderbolt2接口，全换成了USB-C接口，不知道这次大刀阔斧的改进，在未来会有什么样的历史评价。但是现在最新款iPhone7不能直接连接到MacBook上，这到底几个意思？</p>
<h2 id="2011款MacBook-Pro-13英寸"><a href="#2011款MacBook-Pro-13英寸" class="headerlink" title="2011款MacBook Pro 13英寸"></a>2011款MacBook Pro 13英寸</h2><p>后来因为工作原因，17英寸MacBook Pro换成了13英寸的MacBook Pro。虽然尺寸变小了，但是厚度没变，因为这款MacBook还是2011款带光驱的。</p>
<p>iOS开发环境没有什么可配置的，安装一个Xcode基本就搞定一多半了。麻烦的是证书配置，要想真机测试，打包发布应用，必须经历一系列的证书配置。像我这种电脑里有3+以上个开发者账号，个人企业公司级全有，配置起来下一步下一步下一步，真是烦透了。可喜的是在换电脑的同时，硬盘也换了。我把17英寸MacBook上的硬盘拆下来，装在了13英寸的MacBook上了，亲测证明，系统还是原来的系统，证书还是原来的配方，一切都不用重新配置。只是在打包app的时候验证一下开发者账号密码即可。</p>
<p>细数这些年用过的Mac，几经变换，从未重复用过一款。落魄时用过黑苹果、Mac mini，辉煌时桌子上摆过苹果N件套，堂堂iMac当显示器用。一切皆浮云，我依旧是个玩电脑的穷逼程序猿。一直以来陪伴我的是15英寸那款MacBook Pro(因为是我掏腰包买的)，以前陪着我，现在陪着我，将来还会陪着我，我不会像糟蹋小黑本那样糟蹋你，其他的都是工具，而你是我朋友(自己掏钱买的就是不一样)。</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>从去年写这篇文章到现在，我一直用着这款13英寸的MacBook Pro，区别的是外接了一台Dell显示器，外加媳妇送的HHKB键盘和Magic Mouse 2鼠标。这台老破小Mac连接这些外设也算梅开二度、老木逢春。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;旧文新录，这篇文是去年写的，一直放在简书上。今天把他放到blog里，日后翻出来看看也挺有意思。&lt;/p&gt;
    
    </summary>
    
      <category term="程序人生" scheme="http://markmiao.com/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="macOS" scheme="http://markmiao.com/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>macOS应用上架被拒</title>
    <link href="http://markmiao.com/2017/07/27/macosapprejected/"/>
    <id>http://markmiao.com/2017/07/27/macosapprejected/</id>
    <published>2017-07-27T08:26:58.000Z</published>
    <updated>2018-12-24T07:59:44.471Z</updated>
    
    <content type="html"><![CDATA[<p>这是我开发的第一个macOS客户端，名字为<a href="http://markmiao.com/2017/07/26/stenonote/">速记</a>。是用swift3.0，面向Google开发，磕磕绊绊的写完这一两个界面，相比预想功能大概实现了50%，也算完整，没有完成到预想效果，便按耐不住上传App Store，日后迭代呗。</p>
<a id="more"></a>
<p>结果昨天上传，今天早上就被苹果爸爸拒了。一看被拒理由，哐哐哐列了四五条之多，一下子有点懵。详细看过之后，发现这些问题还是蛮不错的，都是我没注意到的，特此记录下来：</p>
<h2 id="问题1：应用程序的完整性"><a href="#问题1：应用程序的完整性" class="headerlink" title="问题1：应用程序的完整性"></a>问题1：应用程序的完整性</h2><p>问题描述：</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Specifically, the app shows <span class="literal">no</span> response <span class="keyword">when</span> click <span class="literal">on</span> the menubar extra icon.</div></pre></td></tr></table></figure>
<p>这个问题拒的我完全没脾气，因为点击一个按钮没有任何反应，苹果据此认为该应用没做完，我竟毫无反驳之力。</p>
<p>情况是这样的：这个<code>extra icon</code>，在有选中内容时，点击会弹出NSPopover，未选中内容时，点击没有任何反应，所以程序不完整。记住即便是空内容也要做提示处理！</p>
<h2 id="问题2：应用程序名称不统一"><a href="#问题2：应用程序名称不统一" class="headerlink" title="问题2：应用程序名称不统一"></a>问题2：应用程序名称不统一</h2><p>问题描述：</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">We noticed <span class="keyword">that</span> your app <span class="built_in">name</span> <span class="keyword">to</span> be displayed <span class="keyword">on</span> <span class="keyword">the</span> App Store <span class="keyword">does</span> <span class="keyword">not</span> sufficiently match <span class="keyword">the</span> <span class="built_in">name</span> <span class="keyword">of</span> <span class="keyword">the</span> app displayed when installed <span class="keyword">on</span> macOS.</div><div class="line"></div><div class="line">iTunes Connect Name: 速记</div><div class="line">App Name when Installed: StenoNote</div><div class="line">App Name when Launched: 速记</div><div class="line">App Name <span class="keyword">in</span> About/Hide/Quit Menu: 速记</div></pre></td></tr></table></figure>
<p>在iOS开发中，工程名和应用名是完全不同的，应用名可以在<code>Info.plist</code>里的<code>Bundle display name</code>中自定义。但是macOS不同，即便是在<code>Bundle display name</code>自定义了名字，在Dock上鼠标悬浮到应用上时和Launchpad里应用图标下显示的名字仍然是工程名。还有在Mac左上角苹果图标旁边的应用名也是工程名，即便是你在xib或storyboard里改了这里的文字，这里依旧不会变。</p>
<p>我并不知道如何修改这些名字，后来在<code>Info.plist</code>里修改了<code>Bundle name</code>，Mac左上角苹果图标旁边的应用名改变了，但是Dock上和Launchpad里面的没有变化。提交应用之后，这也成了被拒理由之一。</p>
<p>解决办法当然是统一应用名称：</p>
<p>在<code>TARGETS -&gt; Build Settings -&gt; Product Name</code>这里面自定义应用名称。</p>
<h2 id="问题3：权限配置问题"><a href="#问题3：权限配置问题" class="headerlink" title="问题3：权限配置问题"></a>问题3：权限配置问题</h2><p>问题描述：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Your app uses one or more entitlements which <span class="keyword">do</span> <span class="keyword">not</span> have matching functionality <span class="keyword">within</span> the app. Apps should have <span class="keyword">only</span> the <span class="keyword">minimum</span> <span class="keyword">set</span> <span class="keyword">of</span> entitlements necessary <span class="keyword">for</span> the app <span class="keyword">to</span> <span class="keyword">function</span> properly. Please remove all entitlements that <span class="keyword">are</span> <span class="keyword">not</span> needed <span class="keyword">by</span> your app <span class="keyword">and</span> submit an <span class="keyword">updated</span> <span class="built_in">binary</span> <span class="keyword">for</span> review, <span class="keyword">including</span> the <span class="keyword">following</span>:</div><div class="line"></div><div class="line">com.apple.security.files.user-selected.read-<span class="keyword">only</span></div></pre></td></tr></table></figure>
<p>macOS客户端要想上架App Store，必须开启<code>App Sandbox</code>功能。这里面牵扯到一些权限配置：网络访问、硬件资源、联系人、定位、日历，还有文件和目录的访问。应用中不需要的权限一定不要打开，不然就会以上述理由被拒。</p>
<p>我不知道什么时候开启了<code>User Selected File</code>为<code>Read Only</code>，被拒了，马上改为<code>None</code>。</p>
<h2 id="问题4：黑暗模式"><a href="#问题4：黑暗模式" class="headerlink" title="问题4：黑暗模式"></a>问题4：黑暗模式</h2><p>问题描述：</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">The user <span class="keyword">interface</span> <span class="keyword">of</span> your app <span class="keyword">is</span> <span class="keyword">not</span> consistent <span class="keyword">with</span> the macOS Human <span class="keyword">Interface</span> Guidelines. Specifically:</div><div class="line"></div><div class="line">We found that <span class="keyword">when</span> Dark Mode <span class="keyword">is</span> enabled, the menu bar extra icons aren<span class="symbol">'t</span> visible.</div></pre></td></tr></table></figure>
<p>这个问题略惊，之前恍惚听过黑暗模式，从来没用过。启动黑暗模式是在：系统偏好设置 -&gt; 通用 -&gt; 勾选使用暗色菜单和Dock</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/2017-07-27-17-20-20.png" alt="设置黑暗模式"></p>
<p>黑暗模式下Dock和上方工具条都变为黑色半透明，工具条上的图标齐刷刷变为白色，而我的应用图标不见了…不见了…见了…了…</p>
<p>在stackoverflow找到一个问题解答：<a href="https://stackoverflow.com/questions/25379525/how-to-detect-dark-mode-in-yosemite-to-change-the-status-bar-menu-icon" target="_blank" rel="external">How to detect dark mode in Yosemite to change the status bar menu icon</a>。</p>
<p>设置分布式观察者，获取Mac模式变化：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="type">DistributedNotificationCenter</span>.<span class="keyword">default</span>().addObserver(<span class="keyword">self</span>, selector: #selector(changeStatusBarImage(not:)), name: <span class="type">NSNotification</span>.<span class="type">Name</span>(rawValue: <span class="string">"AppleInterfaceThemeChangedNotification"</span>), object: <span class="literal">nil</span>)</div></pre></td></tr></table></figure>
<p>每次更改模式都会调用通知方法：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">changeStatusBarImage</span><span class="params">(not: Notification)</span></span> &#123;</div><div class="line">		<span class="built_in">print</span>(<span class="string">"change"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>还可以使用下面方法获取当前Mac的模式：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> dict = <span class="type">UserDefaults</span>.standard.persistentDomain(forName: <span class="type">UserDefaults</span>.globalDomain)</div><div class="line"><span class="keyword">let</span> style = dict?[<span class="string">"AppleInterfaceStyle"</span>]</div><div class="line"><span class="built_in">print</span>(style)<span class="comment">//是暗黑模式下style打印Optional(Dark)，普通模式下打印nil</span></div></pre></td></tr></table></figure>
<p>stackoverflow问题解答中有一个外链，说明了如果不是根据模式切换去更换复杂图片的话，仅是白变黑，黑变白，仅需要如下几行代码设置<code>NSStatusBar</code>的图片即可：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> image:<span class="type">NSImage</span> = <span class="type">NSImage</span>(named: <span class="string">"图片名称"</span>)!</div><div class="line">image.isTemplate = <span class="literal">true</span></div><div class="line">item.button?.image = image</div></pre></td></tr></table></figure>
<h2 id="问题5：无菜单重新打开主窗口"><a href="#问题5：无菜单重新打开主窗口" class="headerlink" title="问题5：无菜单重新打开主窗口"></a>问题5：无菜单重新打开主窗口</h2><p>问题描述：</p>
<figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">The user interface <span class="keyword">of</span> your app <span class="keyword">is</span> <span class="keyword">not</span> consistent <span class="keyword">with</span> the macOS Human Interface Guidelines.</div><div class="line"></div><div class="line">Specifically, we found <span class="literal">that</span> <span class="keyword">when</span> the user closes the main application <span class="built_in">window</span> there <span class="keyword">is</span> <span class="literal">no</span> menu item <span class="keyword">to</span> re-open <span class="literal">it</span>.</div></pre></td></tr></table></figure>
<p>对于这个问题我是存在异议的，在点击关闭按钮后主窗口退出，点击Dock上的应用图标是可以唤起应用主窗口的。但是文中强调<code>menu item</code>，难道必须右键菜单里需要加上打开客户端主窗口的操作？</p>
<p>暂且在右键菜单里添加了打开客户端主窗口的功能：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">applicationDockMenu</span><span class="params">(<span class="number">_</span> sender: NSApplication)</span></span> -&gt; <span class="type">NSMenu</span>? &#123;</div><div class="line">   <span class="keyword">let</span> menu = <span class="type">NSMenu</span>()</div><div class="line">   <span class="keyword">let</span> menuItem = <span class="type">NSMenuItem</span>(title: <span class="string">"打开速记"</span>, action: #selector(openNoteViewController), keyEquivalent: <span class="string">"O"</span>)</div><div class="line">   menu.addItem(menuItem)</div><div class="line">   <span class="keyword">return</span> menu</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>写这篇文章的时候，应用经过上述修改再一次提交审核，等待审核中，期待审核结果……</p>
<hr>
<p>后面的审核历程颇有些戏剧性，当晚审核被拒，被拒原因是上面的<code>问题1</code>和<code>问题5</code>，说是在macOS10.12.6系统版本下出现的问题，这是当前macOS最新系统版本，我也是在此系统版本下开发并修改上述问题的。</p>
<p>本着苹果爸爸不欺我的崇拜之心，经过五分钟的测试+Google，最终还是没发现问题所在。十分钟后我反馈了我的疑问，第二天苹果给我的回复是：我们重新测试了你的应用，发现在macOS10.12.6上没有问题，问题是在macOS10.10.5上发现的，你的应用最低系统支持是10.10，所以要解决10.10.5上的问题。</p>
<p>有理有据，合情合理。</p>
<p>10.10.5上有问题，那就不支持10.10了，最低系统版本改为10.11，上架成功。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是我开发的第一个macOS客户端，名字为&lt;a href=&quot;http://markmiao.com/2017/07/26/stenonote/&quot;&gt;速记&lt;/a&gt;。是用swift3.0，面向Google开发，磕磕绊绊的写完这一两个界面，相比预想功能大概实现了50%，也算完整，没有完成到预想效果，便按耐不住上传App Store，日后迭代呗。&lt;/p&gt;
    
    </summary>
    
      <category term="macOS开发" scheme="http://markmiao.com/categories/macOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="macOS" scheme="http://markmiao.com/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>速记 - 快速记录每一段文字</title>
    <link href="http://markmiao.com/2017/07/26/stenonote/"/>
    <id>http://markmiao.com/2017/07/26/stenonote/</id>
    <published>2017-07-26T08:54:02.000Z</published>
    <updated>2018-12-24T08:01:03.886Z</updated>
    
    <content type="html"><![CDATA[<p>[速记] 是一款可以在工具栏快速记录一段文字的应用。也支持在应用窗口添加、删除、编辑记录的文本。我们支持的是迅速、便捷、一触即达，比便签更迅速，比日记更简约。</p>
<a id="more"></a>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/QQ20170726-161903.png" alt="速记 - 快速记录每一段文字"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>点击下载<a href="https://itunes.apple.com/cn/app/id1263819789?mt=12" target="_blank" rel="external">速记 - 快速记录每一段文字</a>，在Mac App Store中安装速记</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>在工具栏上点击速记标识，可迅速弹出文本输入框，可快速记录文本内容。</li>
<li>在应用主窗口可快速编辑文本内容，无需保存操作，应用会自动存储更改后的内容。</li>
<li>在应用主窗口可点击加号按钮，快速创建一条记录，输入内容快速便捷。</li>
<li>强大的搜索功能，会实时检索搜索词组，快速将结果反馈到速记列表中。</li>
<li>速记信息，点击应用主窗口右上角按钮，可快速查看本条信息的字数及创建时间。</li>
</ul>
<h2 id="反馈"><a href="#反馈" class="headerlink" title="反馈"></a>反馈</h2><p>如果您对[速记]有什么意见或建议，请联系i@markmiao.com 我们会认真对待每一次反馈，将[速记]做的更好。</p>
<p>如果您喜欢该应用，请在App Store留下宝贵的评论。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[速记] 是一款可以在工具栏快速记录一段文字的应用。也支持在应用窗口添加、删除、编辑记录的文本。我们支持的是迅速、便捷、一触即达，比便签更迅速，比日记更简约。&lt;/p&gt;
    
    </summary>
    
      <category term="macOS开发" scheme="http://markmiao.com/categories/macOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="应用" scheme="http://markmiao.com/tags/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>ipa重签名</title>
    <link href="http://markmiao.com/2017/07/26/ipachongqianming/"/>
    <id>http://markmiao.com/2017/07/26/ipachongqianming/</id>
    <published>2017-07-26T02:58:03.000Z</published>
    <updated>2018-12-24T07:59:23.222Z</updated>
    
    <content type="html"><![CDATA[<p>在工作中分发内测应用是经常遇见的，常见的方式有：TestFlight，用企业级开发者账号，搜集UDID打包等方式，每种方式都各有利弊。</p>
<p>由于公司有企业级开发者账号，所以平常应用内测比较简单：直接拿企业级账号打包.ipa，将.ipa发布到内测平台（比如<a href="https://www.pgyer.com" target="_blank" rel="external">蒲公英</a>，<a href="https://fir.im/" target="_blank" rel="external">fir.im</a>），测试人员直接下载安装就可，只是第一次需要信任一下企业级证书。</p>
<a id="more"></a>
<p>在工作中，有时候我们需要分发某个app的.ipa包，并没有改app的源码，无法用自己的账号打包。这时就用到了重签名。</p>
<p>其实ipa重签名的应用场景很多，比如App Store上的付费应用，可以使用自己的开发者账号，其.ipa包重新签名，就可以安装了。各大app助手平台就是这么做的。注意直接从App Store下载的应用是加壳的，无法直接重新签名，必须砸壳。<a href="http://iosre.com/" target="_blank" rel="external">iOSRE逆向</a></p>
<h2 id="iReSign"><a href="#iReSign" class="headerlink" title="iReSign"></a>iReSign</h2><p><a href="https://github.com/maciekish/iReSign" target="_blank" rel="external">iReSign</a>是一个重签名工具</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/2017-07-25-19-21-04.png" alt="iReSign"></p>
<p>操作步骤：</p>
<ol>
<li>选择.ipa包的路径</li>
<li>选择<code>embedded.mobileprovision</code>文件路径。<code>embedded.mobileprovision</code>是用于打包的配置文件<code>Provisioning Profiles</code>。可以直接在<code>Certificates, Identifiers &amp; Profiles</code>中下载，注意下载之后需要将名字设置为<code>embedded.mobileprovision</code>。也可以在之前用该文件打包过的.ipa中找：解压.ipa -&gt; Payload -&gt; xx.app显示包内容 -&gt; <code>embedded.mobileprovision</code></li>
<li>网上有资料说entitlements.plist不需要填写。我试过不填写或填写，我按照本文<a href="http://www.olinone.com/?p=198" target="_blank" rel="external">iOS证书及ipa包重签名探究</a>的方式写的.plist文件。</li>
<li>选中修改ID，填写修改的appid</li>
<li>选择证书，下拉列表会显示mac上有的证书。</li>
<li>点击重新签名！</li>
</ol>
<p>结果是失败了。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/6111501034232_.pic.jpg" alt="iResign运行结果"></p>
<p>错误信息如下，可以查看该错误的<a href="https://github.com/maciekish/iReSign/issues/99" target="_blank" rel="external">IResign上的issues</a></p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[General] <span class="built_in">Error</span> Domain=NSCocoaErrorDomain <span class="built_in">Code</span>=<span class="number">3840</span> <span class="string">"Unexpected character s at line 1"</span> UserInfo=&#123;NSDebugDescription=Unexpected character s at <span class="keyword">line</span> <span class="number">1</span>, kCFPropertyListOldStyleParsingError=<span class="built_in">Error</span> Domain=NSCocoaErrorDomain <span class="built_in">Code</span>=<span class="number">3840</span> <span class="string">"Unexpected ';' or '=' after key at line 1"</span> UserInfo=&#123;NSDebugDescription=Unexpected ';' <span class="keyword">or</span> '=' after <span class="built_in">key</span> at <span class="keyword">line</span> <span class="number">1</span>&#125;&#125;</div></pre></td></tr></table></figure>
<p>另外还有一个重签名工具：<a href="https://github.com/DanTheMan827/ios-app-signer" target="_blank" rel="external">ios-app-signer</a></p>
<p><a href="http://www.iosugar.com/2017/04/10/Practice-articles-iOS-application-re-signature/" target="_blank" rel="external">实践篇：iOS 应用重签名(上)</a>这篇文章介绍了entitlement文件如何写，ios-app-signer的使用。我没有测试该方法是否可行。</p>
<h2 id="使用sigh脚本"><a href="#使用sigh脚本" class="headerlink" title="使用sigh脚本"></a>使用sigh脚本</h2><p>在iReSign失败后，我在网上找到使用sigh脚本的方式来重签名。</p>
<ol>
<li>安装神器brew，没有安装的看这里：<a href="https://brew.sh/" target="_blank" rel="external">Homebrew</a></li>
<li>安装ruby，命令：<code>brew install ruby</code></li>
<li>安装sigh，命令：<code>sudo gem install sigh</code>，过程比较漫长。</li>
</ol>
<p>安装sigh脚本后，开始进行重签名，步骤如下</p>
<ol>
<li>在终端输入<code>sigh resign</code>，回车</li>
<li>把要签名的ipa文件拖到窗口上，回车</li>
<li>填写用来签名的证书名，回车</li>
<li>把项目的配置文件embedded.mobileprovision文件拖到窗口上，回车</li>
<li>好了，resign脚本会自动更改bundel id，签名并重新打包。</li>
</ol>
<p>注意ipa包名不要有中文。如果应用有多个targetes无法用上述方式重签名。参考文章：<a href="http://www.jianshu.com/p/3f57d51f770a" target="_blank" rel="external">iOS的ipa重签名</a></p>
<p>我按照如上步骤操作，成功使用企业级证书打包，上传到蒲公英内测平台上，也显示的是企业级应用，但是无法安装，提醒无法下载app，我手机上没有从App Store上下载安装该应用，排除了无法覆盖问题。</p>
<p>iOS9以后，企业级应用不会出现信任按钮，如果ipa包和网页的<code>bundle ID</code>不匹配，就无法安装。在iOS9之前是没有检测的。详情见大神iOS程序犭袁的文章<a href="https://github.com/ChenYilong/iOS9AdaptationTips#3%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%88%86%E5%8F%91" target="_blank" rel="external">ios9适配系列教程</a></p>
<h2 id="我操作成功的办法"><a href="#我操作成功的办法" class="headerlink" title="我操作成功的办法"></a>我操作成功的办法</h2><p>经过了无数次测试sigh脚本签名方式，最后即将放弃的时刻成功了。</p>
<ol>
<li>将需要重签的.ipa文件和<code>embedded.mobileprovision</code>配置文件放到同一个文件夹下。注意路径和文件名中不要出现中文，配置文件名一定要是<code>embedded</code>。</li>
<li>在终端中cd到该路径下</li>
<li>使用sigh脚本：<code>sigh resign</code>回车，运行结果跟上面是不一样的，会直接出现<code>Signing Identity:</code>让我填证书名。上述方式应该是第二步拖ipa文件到窗口，<code>Path to ipa file:</code></li>
<li>在<code>Signing Identity:</code>上面会出现一串可用的<code>identity</code>，这里要输入这些<code>identity</code>的十六进制串。回车</li>
<li>成功了：<code>Successfully signed 路径/xxx.ipa!</code>原来文件夹中的.ipa已经被重签名了。上传到蒲公英内测平台，完全可以下载使用。</li>
</ol>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/QQ20170726-104243.png" alt="操作步骤"></p>
<p>本文涉及到的知识点都是从网上Google的，感谢网友们分享的资料，还涉及的一些参考资料：</p>
<p><a href="https://objccn.io/issue-17-2/" target="_blank" rel="external">代码签名探析</a></p>
<p><a href="http://www.hudongdong.com/skill/363.html" target="_blank" rel="external">mac用终端对ipa包重新签名</a></p>
<p><a href="http://www.jianshu.com/p/0d460b52ce96" target="_blank" rel="external">iPhone 如何不越狱安装越狱软件</a></p>
<p><a href="http://www.jianshu.com/p/1ef0dbdac653" target="_blank" rel="external">企业证书重新签名ipa</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在工作中分发内测应用是经常遇见的，常见的方式有：TestFlight，用企业级开发者账号，搜集UDID打包等方式，每种方式都各有利弊。&lt;/p&gt;
&lt;p&gt;由于公司有企业级开发者账号，所以平常应用内测比较简单：直接拿企业级账号打包.ipa，将.ipa发布到内测平台（比如&lt;a href=&quot;https://www.pgyer.com&quot;&gt;蒲公英&lt;/a&gt;，&lt;a href=&quot;https://fir.im/&quot;&gt;fir.im&lt;/a&gt;），测试人员直接下载安装就可，只是第一次需要信任一下企业级证书。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://markmiao.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://markmiao.com/tags/iOS/"/>
    
      <category term="ipa" scheme="http://markmiao.com/tags/ipa/"/>
    
  </entry>
  
  <entry>
    <title>东戴河之旅</title>
    <link href="http://markmiao.com/2017/07/22/dongdaihezhilv/"/>
    <id>http://markmiao.com/2017/07/22/dongdaihezhilv/</id>
    <published>2017-07-22T06:22:18.000Z</published>
    <updated>2018-12-24T07:58:14.805Z</updated>
    
    <content type="html"><![CDATA[<p>2017年5月27日，端午节假期开始前夕，我们提前开启了假期模式，跑到东戴河浪了一圈。</p>
<p>虽然刚入夏没多久，但是北京早已没有了春天的影子，夏天像头疯牛一样来的凶猛。天气好点的中午，堪比六月三伏。今天是7月22日了，一篇游记拖了两个月，这拖延症也是没谁了。到今天我才发现，觉得初夏天气热，我还是too young了。</p>
<a id="more"></a>
<p>“这么热的天，咱们出去玩吧？”我分明记得春天的时候，晓说：“这天不冷不热的，咱们出去玩吧？”真是啥天儿都适合出去玩。</p>
<p>“咱们不是刚去蓬莱玩回来吗？”</p>
<p>“别跟我提蓬莱！端午节前，姐姐他们去东戴河，咱们也一起去吧？”</p>
<p>听出来了吗？这虽然是问句，在征求我的意见，但却是道单选题。</p>
<p>“好！”社会主义新生活，就是要这样的民主与和谐。何况我最近也忙的有点想偷闲了。</p>
<p>我们计划27号早上出发，28号晚上回来，错开端午节假期出行高峰。姐姐他们26号自驾出行，我们27号坐动车去。虽然已经错开了假期，火车票还是早就售罄了，至少12306网站上是这么显示的。这些天我比较忙，晓负责酒店住宿和游玩攻略，我挂个软件抢票。</p>
<p>由于最近比较忙，在出发的早上，纠结再三还是把电脑带上了，打算在火车上敲会儿代码，毕竟来回六个小时车程呢。这就是上学时放假带书的怪圈：放假一定带书，带书一定不看，下次一定还带。毕业这么些年了，这个怪圈还没走出来。计划是美好的，现实的残酷的，火车上来回晃，一敲代码就晕。奇怪的是看动漫就不晕，发大志向带上的电脑，用来看了一路的《进击的巨人2》。</p>
<p>10:20到了东戴河，没有几个人下火车，我们下车的地方离出站口最远，不一会儿整个站台就剩我们俩了。四周望去全是野地，跟我们县火车站似的。晓说：“咱们没下错站吧。”我心里也略慌：“没下错吧，是东戴河站啊。”远处电梯口的工作小哥喊道：“快点，一会儿锁门了。”</p>
<p>我问那小哥：“现在还是淡季吧，人怎么这么少？”小哥告诉我们：“恩，现在还有点凉，不能下水，再过几天人就多了。”小哥说锁门不是骗我们的，出站口的人果然已经准备锁门了。小哥忙喊了一句：“等会儿，我这还俩人呢。”</p>
<p>出了火车站，除了一些黑车司机和农家院招揽生意的之外，游客只有我们俩。姐他们昨天已经到东戴河了，过了一会儿姐和哥开车过来接我们。在车上，姐已经按耐不住吐槽他们昨天的囧途囧事：开车压坏了海滩上一块木板赔了人200；车陷进沙滩里找人弄出来花了200；食堂吃饭吃出一只苍蝇恶心了一天；在房车插座上插电蚊香把插座烧了；昨天温度还特别低，在海边住冻得要死。这悲催经历，感觉跟我们去蓬莱那趟有的一拼了。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/WX20170722-142010@2x.png" alt="房车"></p>
<p>住的地方是海边海滩上的房车，从火车站到海边房车那大概十多分钟的车程。第一次住房车这种高大上的地方，看啥新鲜。房车是类似一个白色大箱子的车厢，两边有窗户。房车虽然也有轮子，但是是固定在海滩上的，不能随便移动。每个房车周围都用篱笆围起来一个小院，有一张桌子和几把椅子。房车内一应俱全，沙发、床、电视、冰箱、煤气灶、卫生间、淋浴等等，不知道是不是因为淡季的原因，部分设备就是个摆设，比如煤气灶。总归来说，住宿环境还是挺好的，至少目前我是这么认为的。</p>
<p>今天来这里玩的人还是特别少，姐说昨晚海滩上这一整排房车只有他们这一辆房车的灯是亮的。我们今天来算是第二家，海滩上远远望去也没有多少人，今天气温宜人，明天又是端午节假期的第一天，这两天估计人会陆陆续续的多起来。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/231500702179_.pic.jpg" alt="东戴河的海滩"></p>
<p>收拾停当，自然是迫不及待的跑向大海了。脚踩沙滩，享受着海风拂面，东戴河的气温明显比北京的低一些，在北京的那种闷热烦躁早就一扫而光。这里海滩上的沙子特别细，被太阳晒得有点微热，脚踩上去非常干爽。稍微用力转转脚往深了踩踩，就能触及到湿沙子，那种凉爽沁脚心的感觉简直爽透了，特别是对于我们这种在北京燥热了半个初夏的人来说。</p>
<p>东戴河的海水特别清澈，比较来说我在烟台时去过的海边就太混浊了，在这里远远望去真有点碧海蓝天的感觉。姐说东戴河这里的海滩算是比较原始的了，没有被过分开发。有时候还能捡到一些比较漂亮的小贝壳或小海螺，当然不可能有商店里卖的那种大个的。想捡到那种漂亮海螺，只能去电视里的海滩。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/271500702316_.pic.jpg" alt="海边"></p>
<p>最开心的莫过于姐姐家的小宝宝沫沫了，沫沫在沙滩上一会爬来爬去，一会儿抓沙子，一会儿一屁股做沙滩上，拽着一根不知道从哪里薅过来的干草。晓拿细沙子埋他的小脚丫，一会儿给埋没了，他楞一会儿，一下子抽出来，嘎嘎直乐。姐他们连风筝都带来了，我体验了一把在海边放风筝的感觉，太自由了，根本不用担心挂树上或者和其他风筝缠在一起，海风也格外的赏脸，不大不小，风筝刚好飞起来。一下子线都放光了，极目望去都看不到风筝的本来面目了，其实那是一只卖萌的大虫子。沫沫挺喜欢看我放风筝的，指着风筝乐呢。</p>
<p>所有人来海边必做的事是寻宝。我和晓穿着拖鞋，踩着海水，低着头，仔细搜索，期盼着这一浪一浪地能推上来一只漂亮的贝壳或者海螺，或者是一只运气不好的海蟹，倒霉催的海虾之类的。其实现实很难如我们所愿，倒是找到了一些还看得过去的小贝壳，用我的话说：“没有让我眼前一亮的东西。”晓说：“你适合去看电焊。”姐姐他们昨天也搜寻过好几圈，叔叔阿姨他俩今天早上四五点钟就起来赶海，最终都收获寥寥，都是几块造型奇特的石头，或者长得奇形怪状的贝壳。虽然没什么收获，但是这种悠闲还是令人满足。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/301500702443_.pic_hd.jpg" alt="海滩"></p>
<p>晚上的重头戏是孔明灯。这是我第一次放孔明灯，真是个耐心细致的技术活，也真难为晓这种急脾气能耐心等着孔明灯慢慢撑起来，缓缓送出去。我亲自拆了一个孔明灯，并写下了我的愿望——挣钱，并尽量耐心的去放我人生中第一个孔明灯。在呼呼的海风下，点了半天才把蜡点着，打火机都烧坏了。两手撑着灯罩，慢慢等它鼓起来，鼓起一点，被海风吹下去一点，鼓一点，吹一点。晓说：“你放低点。”我往低了一放，放的太低了，蜡一下子粘到沙粒了。纠结了半天，好不容易鼓的差不多了，轻轻送出去，往上飞一点，往下落一点，飞一点，落一点，一跳一跳地沿着海岸线就跑了，这个熊灯！这一会儿的功夫，晓他们都放出去仨了。我肯定不甘心，不能就这么放任它跑了呀，非得飞起来不可。我就追着我的熊灯跑，它就跳，我就追。歪歪斜斜，一上一下，沿着海岸线，也不飞起来，也不落下去，也不掉海里自杀，也不烧灯罩自燃，逗我呢？就这样我追出去得有一百多米远，晓喊我：“赶紧回来吧！”难道是我的愿望太重了？我这得挣多少钱呐？我的耐心被这个熊灯彻底磨没了，捧起一把沙子给扑灭了，让你跳！我人生中第一个孔明灯，就这么把我调戏恼了。</p>
<p>夜晚的经历注定要给这场旅行加一点不完美的插曲。</p>
<p>放完孔明灯，天完全黑了，海边的夜，黑的彻底，不像城市里，再黑的夜都有明亮的灯。回到房车，发现有两盏灯不亮了，电视也打不开了，我匆匆洗了个澡发现热水也没了。什么玩意？花那么多钱就给我整个这个？开心了一整天，到了要睡觉了，整了这么一出。</p>
<p>我给客服打电话，客服说：“这么晚电工都下班了，这里就我一个人，我也整不了啊。”“整不了就换个房车。”我没耐心的说。客服说：“房车都预订出去了。”我有点火了，我们从姐姐他们住的房车走过来的时候，一眼望去，几十辆房车只有三四家亮着灯，你告诉我都订出去了？我说：“外面那么多黑着灯的，你告诉我都订出去了？他们今晚来住吗？”客服说：“明天会来。”“明天再说明天的，今晚你先给我们解决。”客服说：“我给你找找有没有空房，一会儿给您回电话。”</p>
<p>十多分钟过去了，没动静，我给打过去之后客服说：“有一套，您确定要换吗？”“换！”反正我们也没多少东西。换了一辆房车，发现没热水，我放了半天都没有。我又给客服打电话：“这个房车没热水，怎么回事？”客服说：“没烧水，您确定今晚要用吗？要不明天再用？”我彻底火了：“你这不废话吗？我得洗漱啊，明天我都退房走了，洗个屁！”客服没办法地说：“好吧，我找人给您弄一下。”这明显没把我们当上帝啊！折腾了一宿，生了一肚子气，最终也终于能安然入睡了。</p>
<p>第二天本打算早起去赶海，没起来，醒了就七八点钟了。早餐是去食堂吃的，就是前天姐姐他们吃出苍蝇的地儿。房车住宿还提供了食堂的三餐餐券，但是食堂离的很远，在一个集装箱住宿的地方，开车去挺近，走着去就有点远了。自从姐姐说他们吃出苍蝇，我们的餐券就没再用过。早餐都是馒头粥，相对干净。</p>
<p>吃完早餐，哥和叔叔阿姨他们开车回去了，我和晓打算逛逛待会儿沿着海岸线走回去。吃饭的时候，我们看到食堂附近有一片礁石，一直延伸到海里面。我们过去一看原来是建筑废料，都是大块的混凝块，上面沾满了贝壳残渣，还有好多小生蚝，大的都被人撬走了，搜索了半天也没什么收获。沿着海边一边走一边找宝贝，最终找到了一串青口贝，几块粘在一起的生蚝，几个漂亮的扇贝，也算收获颇丰了。</p>
<p>到了中午该退房了，姐姐他们退了房就自驾回去了，我和晓是今晚8点多的动车，当时买票的时候只有晚上8点这一趟车还有票。等到晚上8点确实太无聊的，我又看了一下票，发现各个时间段的票都很富余嘛，于是愉快地改签到下午三点四十多。</p>
<p>姐姐他们自驾回京了，我和晓对望一眼，去哪呢？“走，去止锚湾！”姐走之前给我们的建议，可以去止锚湾玩玩。这边荒凉到打车都难，一位发售楼传单的大哥看我们找车，主动搭讪说：跟他去看一眼他们的楼盘，然后免费带我们去止锚湾。我乐了，说：“我们时间紧，您拉趟私活吧，我给钱。”</p>
<p>到了止锚湾，发现这边可比房车那边好玩的多多了，不仅有好玩的还有好吃的。这边的海滩延伸特别长，走进去好远，水都没补过膝盖。都过中午了，先吃顿好吃的。我问一个在海边卖东西的大哥：“路边上这几家海鲜餐馆哪家比较好吃？”大哥说：“都可以，现在没有那种吃完宰客的行为了，放心吃吧。”我一愣，反应过来了，说的是青岛天价大虾那种情况呀。我们随便找了一家，点了点蛏子、花蛤、鱿鱼等海鲜，便宜实惠还好吃。</p>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/261500702315_.pic.jpg" alt="止锚湾"></p>
<p>吃完海鲜就去下海淘活海鲜了，为此还在刚才那大哥摊铺上买了两双凉鞋，两把塑料铲子（怕买铁的带不上动车）。下海就是一顿乱瞅，还别说这临走之前还真是收获丰富。透过清澈的海水都能看到奔跑的寄居蟹，只要看到就别想逃出我的旋风塑料铲。不仅有寄居蟹，还有小的皮皮虾、小螃蟹等。海边摊铺上还有卖吸筒的，就像小孩玩的呲水筒一样，据说改装之后可以在海底淤泥里吸皮皮虾，我们看到一个人拎了一小桶皮皮虾，说全是拿这玩意吸出来的。我们乐此不疲的玩了两个多小时，捉到一只方形长眼睛红螃蟹，圆形大肚子球螃蟹（我实在不知道这两种蟹的名字），还有若干寄居蟹和小皮皮虾。用矿泉水瓶装着，带它们回北京。</p>
<p>天也热了，人也多了，我们也玩累了。海边上人越来越多，开始有人下海游泳了，我们也准备回去了。在海边买了一包大樱桃，卖樱桃的老板帮我们叫了一辆车去火车站。进站时又遇到那位带我们出站的小哥，看到我们笑了，说：“这么快就走了。”我笑着说：“嗯，走了。”</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017年5月27日，端午节假期开始前夕，我们提前开启了假期模式，跑到东戴河浪了一圈。&lt;/p&gt;
&lt;p&gt;虽然刚入夏没多久，但是北京早已没有了春天的影子，夏天像头疯牛一样来的凶猛。天气好点的中午，堪比六月三伏。今天是7月22日了，一篇游记拖了两个月，这拖延症也是没谁了。到今天我才发现，觉得初夏天气热，我还是too young了。&lt;/p&gt;
    
    </summary>
    
      <category term="记事" scheme="http://markmiao.com/categories/%E8%AE%B0%E4%BA%8B/"/>
    
    
      <category term="生活" scheme="http://markmiao.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="游记" scheme="http://markmiao.com/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发笔记二</title>
    <link href="http://markmiao.com/2017/07/06/iOStwo/"/>
    <id>http://markmiao.com/2017/07/06/iOStwo/</id>
    <published>2017-07-06T07:27:51.000Z</published>
    <updated>2018-03-02T06:34:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iOS编译优化策略Optimization-Level"><a href="#iOS编译优化策略Optimization-Level" class="headerlink" title="iOS编译优化策略Optimization Level"></a>iOS编译优化策略Optimization Level</h2><p>开发汉信码扫描功能时，扫描个别汉信码，<code>Release</code>环境下会闪退，<code>Debug</code>环境下正常。没有找到崩溃原因，暂时更改<code>Optimization Level</code>下的<code>Release</code>为<code>None[-O0]</code>，这样<code>Release</code>下也会和<code>Debug</code>一样，对代码没有优化操作。</p>
<a id="more"></a>
<p>更改位置：</p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TARGETS -&gt; Build Settings -&gt; Optimization Level -&gt; Release  选择`None[-O0]`</div></pre></td></tr></table></figure>
<p><a href="https://gcc.gnu.org/onlinedocs/gnat_ugn/Optimization-Levels.html" target="_blank" rel="external">Optimization Level官方解释</a></p>
<h2 id="跳转京东客户端某商品详情页"><a href="#跳转京东客户端某商品详情页" class="headerlink" title="跳转京东客户端某商品详情页"></a>跳转京东客户端某商品详情页</h2><p>iOS9以后，app内打开其他app需要在<code>Info.plist</code>里添加<code>LSApplicationQueriesSchemes</code>白名单。</p>
<p>跳转京东客户端需要增加京东的URL Scheme：<code>openapp.jdmobile</code></p>
<p><a href="http://www.jianshu.com/p/195b17052925" target="_blank" rel="external">iOS URL Scheme 大全(快速启动)</a></p>
<p>首先要判断手机里是否安装京东客户端：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if ([[UIApplication sharedApplication] canOpenURL:[NSURL URLWithString:@&quot;openApp.jdMobile://&quot;]]) &#123;</div><div class="line">		//安装了</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>跳转京东客户端：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[UIApplication sharedApplication] openURL:[NSURL URLWithString:@&quot;openApp.jdMobile://&quot;]];</div></pre></td></tr></table></figure>
<p>跳转京东客户端某商品详情页：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">NSString *openUrl = @&quot;openapp.jdmobile://virtual?params=%7B%22sourceValue%22:%220_productDetail_97%22,%22des%22:%22productDetail%22,%22skuId%22:%2299999999%22,%22category%22:%22jump%22,%22sourceType%22:%22PCUBE_CHANNEL%22%7D&quot;;</div><div class="line">[[UIApplication sharedApplication] openURL:[NSURL URLWithString:openUrl]];</div></pre></td></tr></table></figure>
<p>注意：openUrl字符串要原封不动的拷贝到应用中使用，里面的%22、%7等保持原样，不要转义。中间部分的<code>99999999</code>是京东的商品编号：<code>defSkuID</code>，跳转到该商品的详情中。</p>
<h2 id="OC与JavaScript交互"><a href="#OC与JavaScript交互" class="headerlink" title="OC与JavaScript交互"></a>OC与JavaScript交互</h2><p>在APP内使用UIWebView展示网页，有时候需要和网页进行功能交互和数据传递。</p>
<p>最简单的一种交互是使用<code>UIWebView</code>的Delegate方法拦截webView的加载地址，和给定的地址匹配，如果匹配则不允许加载，并跳转到指定控制器，如果不匹配则允许加载。</p>
<p>拦截加载地址：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">- (BOOL)webView:(UIWebView*)webView shouldStartLoadWithRequest:(NSURLRequest*)request navigationType:(UIWebViewNavigationType)navigationType &#123;</div><div class="line">    NSURL *url = [request URL];</div><div class="line">    NSLog(@&quot;加载地址 = %@&quot;, url);</div><div class="line">    return YES;//return YES允许加载，return NO不允许加载</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>iOS7以后，苹果推出了<code>JavaScriptCore</code>，用它可以直接完成oc和js之间的交互通信。下面介绍利用代理实现js调用oc中的方法，并完成数据传递。</p>
<p>第一步：在加载UIWebView的控制器中创建<code>JSExport</code>的协议，并写入和js约定好的方法，方法名要一致。该控制器遵守协议，并实现协议方法，完成webView和该控制器的交互。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#import &lt;UIKit/UIKit.h&gt;</div><div class="line">#import &lt;JavaScriptCore/JavaScriptCore.h&gt;//导入JavaScriptCore</div><div class="line"></div><div class="line">@protocol JSObjcDelegate &lt;JSExport&gt; //创建协议，写入协议方法。方法名必须和js内中一致，这些方法在js中属于对象SafetyObj下的</div><div class="line">//方法1：js调用oc中的方法</div><div class="line">- (void)fnJumpScan;</div><div class="line">//方法2：js调用oc中的方法，并要求得到某个返回值</div><div class="line">- (NSString *)fnGetCustomData;</div><div class="line">//方法3：js调用oc中的方法，并传递过来一个参数</div><div class="line">- (void)fnSaveCustomData:(NSString *)callString;</div><div class="line">@end</div><div class="line"></div><div class="line">@interface ViewController : UIViewController&lt;UIWebViewDelegate,JSObjcDelegate&gt;</div><div class="line"></div><div class="line">@property(nonatomic,weak)UIWebView *webView;</div><div class="line">@property (nonatomic, strong) JSContext *context;//js运行环境</div><div class="line">@end</div></pre></td></tr></table></figure>
<p>第二步：在网页加载完毕时，获取js运行环境，并且设置方法对象的代理。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (void)webViewDidFinishLoad:(UIWebView *)webView &#123;</div><div class="line">    self.context = [webView valueForKeyPath:@&quot;documentView.webView.mainFrame.javaScriptContext&quot;];</div><div class="line">    self.context[@&quot;SafetyObj&quot;] = self;//将自身设置为js对象的代理</div><div class="line">    self.context.exceptionHandler = ^(JSContext *context, JSValue *exception) &#123;</div><div class="line">        context.exception = exception;</div><div class="line">        NSLog(@&quot;异常信息 = %@&quot;, exception);</div><div class="line">    &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>第三步：实现代理方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">- (void)fnJumpScan &#123;</div><div class="line">    NSLog(@&quot;点击了jumpScan&quot;);</div><div class="line">&#125;</div><div class="line">- (NSString *)fnGetPostion &#123;</div><div class="line">    return @&quot;1234&quot;;</div><div class="line">&#125;</div><div class="line">- (void)fnSaveCustomData:(NSString *)callString &#123;</div><div class="line">    NSLog(@&quot;callString = %@&quot;, callString);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;iOS编译优化策略Optimization-Level&quot;&gt;&lt;a href=&quot;#iOS编译优化策略Optimization-Level&quot; class=&quot;headerlink&quot; title=&quot;iOS编译优化策略Optimization Level&quot;&gt;&lt;/a&gt;iOS编译优化策略Optimization Level&lt;/h2&gt;&lt;p&gt;开发汉信码扫描功能时，扫描个别汉信码，&lt;code&gt;Release&lt;/code&gt;环境下会闪退，&lt;code&gt;Debug&lt;/code&gt;环境下正常。没有找到崩溃原因，暂时更改&lt;code&gt;Optimization Level&lt;/code&gt;下的&lt;code&gt;Release&lt;/code&gt;为&lt;code&gt;None[-O0]&lt;/code&gt;，这样&lt;code&gt;Release&lt;/code&gt;下也会和&lt;code&gt;Debug&lt;/code&gt;一样，对代码没有优化操作。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://markmiao.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://markmiao.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>排班 - 上班时间，一目了然</title>
    <link href="http://markmiao.com/2017/04/05/%E6%8E%92%E7%8F%AD/"/>
    <id>http://markmiao.com/2017/04/05/排班/</id>
    <published>2017-04-05T09:18:42.000Z</published>
    <updated>2018-12-24T07:55:01.708Z</updated>
    
    <content type="html"><![CDATA[<p>排班 - 是一款以日历为基础，记录上班时间的应用。主要针对实行倒班制，上班时间不固定的用户。简单的两步设置，便能准确地在日历上排列出上班时间，查看方便，一目了然。不用在台历上拿笔标记，也不用时时去看主管给你的上班安排。让你告别上班时间不确定的痛苦。</p>
<a id="more"></a>
<p><img src="https://imagedb-1257991841.cos.ap-beijing.myqcloud.com/seticonapp.png" alt=""></p>
<h2 id="获取排班"><a href="#获取排班" class="headerlink" title="获取排班"></a>获取排班</h2><p>iOS: <a href="https://itunes.apple.com/cn/app/id1221228242?mt=8" target="_blank" rel="external">App Store下载</a></p>
<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul>
<li><p>丰富而简洁的日历信息，包含<code>公历</code>、<code>农历</code>以及各种<code>节日</code>、<code>节气</code>、<code>节假日</code>、<code>纪念日</code>，适合每一位用户查看。</p>
</li>
<li><p><strong>添加排班：</strong>设置<code>坐标时间</code> -&gt; 添加<code>循环班次</code> -&gt; 保存<code>班表</code>，添加的班次会立刻出现在日历上。可选择<code>无限循环</code>、<code>指定时间内循环</code>、<code>按月循环</code>排班。可编辑<code>班表名称</code>。</p>
</li>
<li><p><strong>无线循环排班：</strong><code>坐标时间</code>是开始循环的时间，默认从今天开始。会以这个时间为坐标，向前、向后无限循环设置的<code>循环班次</code>。</p>
</li>
<li><p><strong>指定日期内循环排班：</strong>给<code>循环班次</code>设置一个<code>日期范围</code>，会从<code>开始日期</code>开始执行<code>循环班次</code>，一直循环到<code>结束日期</code>。这个日期范围之外无班次设置。</p>
</li>
<li><p><strong>按月循环排班：</strong>不需要时间设置，从每月的<code>1号</code>开始执行<code>循环班次</code>，循环到每月的最后一日。每个月都是独立循环的。</p>
</li>
<li><p><strong>循环班次：</strong>循环班次可长按拖动排序，指定删除某个班次，一键清空所有添加的班次。</p>
</li>
<li><p><strong>待选班次：</strong>待选班次预设了6个，可添加删除。可以在设置中还原待选班次。</p>
</li>
<li><p><strong>选择班表：</strong>可以添加多个班表，这里显示了添加的所有班表名称，选中确认显示在日历中。可以左滑删除。</p>
</li>
<li><p><strong>班表统计：</strong>统计每个月，各种班次各上了几天班。一键查看方便快捷。</p>
</li>
<li><p><strong>备忘列表：</strong>长按日历中的某天，或点击今日信息中的备忘，可添加备忘信息。所有的备忘信息会显示在这里，可以左滑删除。</p>
</li>
<li><p><strong>其他设置：</strong>可以设置日历的各种显示方式，可以还原待选班次，清空添加的备忘记录和班表。</p>
</li>
<li><p><strong>自定义班次：</strong>当待选班次没有合适的，可以自己添加待选班次，指定喜欢的班次颜色。</p>
</li>
<li><p><strong>修改某一天的班次：</strong>长按日历中的某天，或者点击今日信息中的排班，可修改这一天的班次。</p>
</li>
</ul>
<h2 id="反馈与支持"><a href="#反馈与支持" class="headerlink" title="反馈与支持"></a>反馈与支持</h2><p>如果您有自己的排班需求和对应用的意见或建议，请联系：i@markmiao.com 我们会认真对待每一次反馈，将[排班]做的更好。</p>
<p>如果您喜欢该应用，请在App Store留下宝贵的评价。</p>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p><strong>感谢下列开源项目</strong></p>
<p><a href="https://github.com/ccgus/fmdb" target="_blank" rel="external">fmdb</a></p>
<p><a href="https://github.com/yuantiku/YTKKeyValueStore" target="_blank" rel="external">YTKKeyValueStore</a></p>
<p><a href="https://github.com/cyanzhong/LunarCore" target="_blank" rel="external">LunarCore</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;排班 - 是一款以日历为基础，记录上班时间的应用。主要针对实行倒班制，上班时间不固定的用户。简单的两步设置，便能准确地在日历上排列出上班时间，查看方便，一目了然。不用在台历上拿笔标记，也不用时时去看主管给你的上班安排。让你告别上班时间不确定的痛苦。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://markmiao.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="应用" scheme="http://markmiao.com/tags/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
</feed>
